{"version":3,"sources":["cmps/AppHeader/AppHeader.jsx","services/http.service.js","services/utilService.js","services/boardService.js","store/actions/boardActions.js","services/socketService.js","cmps/CardPreview/CardPreview.jsx","cmps/LabelEditModal/LabelEditModal.jsx","cmps/LabelModal/LabelModal.jsx","cmps/MemberModal/MemberModal.jsx","cmps/CheckListModal/CheckListModal.jsx","cmps/DueDateModal/DueDateModal.jsx","cmps/Cloudinary/Cloudinary.jsx","cmps/CoverModal/CoverModal.jsx","assets/imgs/taskman-loader.svg","cmps/TaskModal/TaskModal.jsx","cmps/BoardMenu/BoardMenu.jsx","cmps/Notification/Notification.jsx","pages/BoardDetails/BoardDetails.jsx","pages/LandingPage/LandingPage.jsx","cmps/BoardPreview/BoardPreview.jsx","cmps/BoardList/BoardList.jsx","pages/TaskmanApp/TaskmanApp.jsx","App.js","reportWebVitals.js","store/reducers/boardReducer.js","store/index.js","index.js"],"names":["AppHeader","className","to","icon","faHome","faUserCircle","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","filter","term","arr","toLocaleLowerCase","board","name","includes","phone","email","sort","b","debounce","func","timeout","wait","args","later","clearTimeout","setTimeout","KEY","query","getBoardById","deleteBoard","saveBoard","getEmptyBoard","title","members","gUsers","cards","_id","tasks","activity","background","labels","getEmptyCard","updateCard","taskToUpdate","cardToUpdate","boardToUpdate","taskIdx","findIndex","t","splice","updateBoard","getCloudImages","cloudUrls","getEmptyTask","desc","createdAt","Date","now","dueDate","isWithAttachment","cover","checklists","doneAt","attachments","comments","getUsers","getCoverColors","gCoverColors","id","cardIdx","card","loadBoards","filterBy","dispatch","boardService","boards","type","updatedBoard","setCurrBoard","boardId","updateBackground","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","CardPreview","props","cardPreviewOp","useDispatch","useForm","register","handleSubmit","reset","currBoard","useSelector","state","boardReducer","useState","setTasks","isAddTask","setIsAddTask","newTask","labelsDescToggle","ev","bool","stopPropagation","setIsDescShown","doneAtToggle","task","newBoard","addTask","push","forSocket","addActivity","handleOnDragEnd","result","destination","items","Array","from","source","index","reorderedItem","boardToSave","backgroundColorDueDate","colorDueDate","onClick","setCurrCard","onChange","cardTitle","defaultValue","placeholder","openCardModal","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","idx","draggableId","setCurrTask","draggableProps","dragHandleProps","style","backgroundColor","backgroundImage","isDescShown","label","color","faClock","faCheckSquare","format","withTitle","faSquare","faPaperclip","faList","reduce","accTotal","checklist","list","acc","itemInList","isChecked","member","size","round","faPlus","onSubmit","required","faTimes","window","LabelEditModal","labelEditModal","setLabelEditModal","faChevronLeft","setLabelModal","labelName","labelColor","autoComplete","LabelModal","maxWidth","border","visibility","addLabel","currTask","find","currLabel","faCheckCircle","editLabel","faPencilAlt","position","width","LabelEditRef","MemberModal","searchMembers","setSearchMembers","useEffect","setMemberModal","users","user","toLowerCase","searchMember","addMemberToTask","chooseMember","currMember","CheckListModal","formState","errors","setChecklistModal","newChecklistToSend","range","addChecklist","DueDateModal","timeStemp","React","selectedDate","setSelectedDate","setDueDateModal","selectedDateStr","parse","addDueDate","utils","DateFnsUtils","disableToolbar","variant","margin","value","date","KeyboardButtonProps","Cloudinary","cloudOp","sources","sourceKeys","dropboxAppKey","instagramClientId","resourceType","cloudName","uploadPreset","buttonText","height","borderRadius","padding","folder","onSuccess","newAtt","info","original_filename","src","secure_url","onFailure","err","logging","customPublicId","eager","use_filename","unique_filename","apiKey","accepts","contentType","CoverModal","coverColors","top","setCoverModal","addCover","attach","TaskModal","taskModalOp","client","setClient","inputFile","useRef","useOnClickOutside","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","labelModal","labelRef","labelEditRef","coverModal","coverRef","memberModal","memberRef","checklistModal","checklistRef","dueDateModal","dueDateRef","isDesc","setIsDesc","attNameModal","setAttNameModal","currCard","setRange","rengeToShow","toFixed","onButtonClick","click","loader","alt","marginTop","taskTitle","faWindowMaximize","dueDateSpanText","faAlignLeft","descValue","preventDefault","listIdx","item","checked","changeCheckBox","textDecoration","idxInList","input","Object","keys","str","inputItem0","inputItem1","inputItem2","inputItem3","inputItem4","onSubmitItemInList","attac","attIdx","loading","error","testLog","att","onAttRemove","transform","clientY","onSubmitAtt","faComment","newComment","timeStamp","comment","fromNow","onEditComment","display","onRemoveComment","faTag","faUser","addMember","faClipboard","BoardMenu","boardMenuOp","isAbout","setIsAbout","isBackground","setIsBackground","isFilter","setIsFilter","isLabels","setIsLabels","cloudImgs","setCloudImgs","isAddLabel","setIsAddLabel","setFilterBy","sendFilter","isMenu","closeMenu","onSearchTask","searchTask","filterTasks","saveLabels","descs","colors","forEach","arrValues","values","arr1","arr2","val","setIsMenu","inProgress","overdue","completed","dataForMembersChart","m","datasets","hoverOffset","dataForChart","borderColor","borderWidth","changeBackground","decoding","removeIdx","onSearchLabel","faPalette","deleteLabel","addBoardLabel","addBoardLabelColor","Notification","notifyOp","isMsg","msg","faExclamationCircle","BoardDetails","newCard","setIsMsg","setMsg","match","draggedCards","setDraggedCards","addTaskForSockets","updateTask","addNewCardForSockets","deleteTaskForSockets","addLabelForSockets","updateCardForSockets","updateCardTitleForSockets","addActivityForSockets","c","some","labelToRemove","unshift","sendMsg","menuRef","cardModal","setCardModal","cardModalRef","setIsCardModal","inviteRef","setIsInvite","isAddCard","setIsAddCard","isInvite","isCardModal","xPosEl","setXPosEl","yPosEl","setYPosEl","addMembersToBoard","setMembersToBoard","closeModal","addNewCard","newCardTitle","newActivity","clientX","img","newCards","cardsIds","failCard","memberToRemove","onBlur","boardTitle","membersInBoard","usersToAdd","onAddMember","removeUserFromBoard","faBars","previewProvider","left","deleteCard","LandingPage","BoardPreview","BoardList","boardListOp","isCreateBoard","setIsCreateBoard","addBoard","newBoardTitle","TaskmanApp","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca5a07fd.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './AppHeader.scss'\r\n\r\nexport function AppHeader() {\r\n    return (\r\n        <nav className=\"app-header sub-container\">\r\n            <Link className=\"link\" to=\"/boards\"><FontAwesomeIcon icon={faHome} /></Link>\r\n            <Link className=\"link\" to=\"/boards\">Taskman</Link>\r\n            <Link className=\"link\" to=\"/boards\"><FontAwesomeIcon icon={faUserCircle} /></Link>\r\n        </nav>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\n// import { router } from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    \r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  filter,\r\n  sort,\r\n  debounce,\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n  var txt = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction filter(term, arr) {\r\n  term = term.toLocaleLowerCase()\r\n  return arr.filter(board => {\r\n    return board.name.toLocaleLowerCase().includes(term) ||\r\n      board.phone.toLocaleLowerCase().includes(term) ||\r\n      board.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait = 1000) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}","import { httpService } from \"./http.service\"\r\nimport { utilService } from \"./utilService\"\r\nconst KEY = 'board/'\r\n\r\nexport default {\r\n    query,\r\n    getBoardById,\r\n    deleteBoard,\r\n    saveBoard,\r\n    getEmptyBoard,\r\n    getEmptyCard,\r\n    updateCard,\r\n    updateBoard,\r\n    getCloudImages,\r\n    getEmptyTask,\r\n    getUsers,\r\n    getCoverColors,\r\n}\r\n\r\nconst cloudUrls = [\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621015877/taskman/jared-verdi-PNKwdJ8WetM-unsplash_aabpzg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016569/taskman/zsofia-szalay-TbrzJbcacnQ-unsplash_bst628.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016567/taskman/the-nigmatic-lUnLaEWzcz8-unsplash_vcfxju.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016565/taskman/steve-johnson-274PPmlOjyQ-unsplash_twaarr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/omer-salom-LoijtQXXNhs-unsplash_w6cs4h.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/jonny-gios-h_XcnLbDc_0-unsplash_lhi5si.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/inaki-del-olmo-IRCzpl2YYKE-unsplash_tpzeyw.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/joel-holland-TRhGEGdw-YY-unsplash_dqapzs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016558/taskman/ian-schneider-TamMbr4okv4-unsplash_r85bnj.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016557/taskman/mohammad-alizade-CDu0x1Aiils-unsplash_jqizxr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016556/taskman/mohammad-alizade-62t_kKa2YlA-unsplash_rbytvb.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016555/taskman/mohamed-rishfaan-ir_65wcK_DA-unsplash_qgfljs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016554/taskman/ines-mills-TGs0tHMk4eg-unsplash_bkqpbf.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/erol-ahmed-aIYFR0vbADk-unsplash_g8hmym.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/duy-thanh-nguyen-ZeoSVUcWjfY-unsplash_z4qs2l.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016550/taskman/fransiskus-filbert-mangundap-C9hqYikX34w-unsplash_mqj9zi.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016548/taskman/arpad-spodni-KbKQY_LjmuE-unsplash_fqlcyv.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016546/taskman/dave-hoefler-PkQH-GHEp0A-unsplash_jfurlc.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016544/taskman/fabrice-villard-Du41jIaI5Ww-unsplash_kqcna2.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/estee-janssens-aQfhbxailCs-unsplash_slddqg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/angel-luciano-XQJ0BBSvTs0-unsplash_d7advt.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016538/taskman/callum-wale-V8j3F6Ik9_s-unsplash_clbkte.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016537/taskman/braden-jarvis-prSogOoFmkw-unsplash_sgtmnd.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016534/taskman/danielle-macinnes-IuLgi9PWETU-unsplash_u9xmg7.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016533/taskman/carolyn-christine-D7bmnvGJA2Q-unsplash_oz27jz.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621018122/taskman/vlad-kutepov-WYJ9c7uSdnU-unsplash_c2g6gy.jpg',\r\n]\r\n\r\nconst gUsers = [{ _id: 'u101', name: 'Aviv Zohar', tasks: [] }, { _id: 'u102', name: 'Hadar Marom', tasks: [] }, { _id: 'u103', name: 'Oshri Yoktan', tasks: [] }, { _id: 'u104', name: 'gil shrager', tasks: [] }, { _id: 'u105', name: 'Ofek aharon', tasks: [] }]\r\nconst gCoverColors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#5ba4cf', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\n// const newBoard = getEmptyBoard()\r\n// newBoard.title = 'Taskman board'\r\n// saveBoard(newBoard)\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteBoard(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from boardService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveBoard(board) {\r\n    try {\r\n        if (board._id) return await httpService.put(KEY + board._id, board)\r\n        return await httpService.post(KEY, board)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nfunction updateCard(taskToUpdate, cardToUpdate, boardToUpdate) {\r\n    // if you want to delete a task use the func and send the idx ----updateBoard(idx)----\r\n    if (typeof (taskToUpdate) !== 'number') {\r\n        const taskIdx = cardToUpdate.tasks.findIndex(t => t._id === taskToUpdate._id)\r\n        cardToUpdate.tasks.splice(taskIdx, 1, taskToUpdate)\r\n    } else {\r\n        cardToUpdate.tasks.splice(taskToUpdate, 1)\r\n    }\r\n    return updateBoard(cardToUpdate, boardToUpdate)\r\n}\r\n\r\nfunction updateBoard(cardToUpdate, boardToUpdate) {\r\n    if (typeof (cardToUpdate) !== 'number') {\r\n        const cardIdx = boardToUpdate.cards.findIndex(card => card._id === cardToUpdate._id)\r\n        boardToUpdate.cards.splice(cardIdx, 1, cardToUpdate)\r\n    } else {\r\n        boardToUpdate.cards.splice(cardToUpdate, 1)\r\n    }\r\n    const updatedBoard = { ...boardToUpdate, cards: [...boardToUpdate.cards] }\r\n    return updatedBoard;\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getCloudImages() {\r\n    return cloudUrls;\r\n}\r\n\r\nfunction getUsers() {\r\n    return gUsers;\r\n}\r\nfunction getCoverColors() {\r\n    return gCoverColors;\r\n}\r\n\r\nfunction getEmptyBoard() {\r\n    return {\r\n        title: '',\r\n        members: [...gUsers],\r\n        cards: [{ _id: utilService.makeId(), title: 'Your first card!', tasks: [] }],\r\n        activity: [],\r\n        background: [],\r\n        labels: [],\r\n    }\r\n}\r\n\r\nfunction getEmptyCard() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        tasks: []\r\n    }\r\n}\r\n\r\nfunction getEmptyTask() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        desc: '',\r\n        createdAt: Date.now(),\r\n        labels: [],\r\n        dueDate: '',\r\n        activity: [],\r\n        members: [],\r\n        isWithAttachment: false,\r\n        cover: '',\r\n        checklists: [],\r\n        doneAt: '',\r\n        attachments: [],\r\n        comments: []\r\n    }\r\n}","import boardService from '../../services/boardService'\r\n\r\nexport function loadBoards(filterBy) {\r\n  return async dispatch => {\r\n    const boards = await boardService.query(filterBy)\r\n    const action = { type: 'SET_BOARDS', boards }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function getBoardById(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    await dispatch({ type: 'SET_BOARD', board })\r\n    return board\r\n  }\r\n}\r\nexport function saveBoard(board) {\r\n  return async dispatch => {\r\n    const updatedBoard = await boardService.saveBoard(board)\r\n    if (!board._id) return dispatch({ type: 'ADD_BOARD', board: updatedBoard })\r\n    else return dispatch({ type: 'UPDATE_BOARD', updatedBoard })\r\n  }\r\n}\r\nexport function setCurrBoard(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    dispatch({ type: 'SET_BOARD', board })\r\n  }\r\n}\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    await boardService.remove(boardId)\r\n    dispatch({ type: 'REMOVE_BOARD', boardId })\r\n  }\r\n}\r\nexport function updateBackground(background) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'UPDATE_BACKGROUND', background })\r\n  }\r\n}\r\nexport function updateFilterBy(filterBy) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'UPDATE_FILTERBY', filterBy })\r\n  }\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nfunction createSocketService() {\r\n    var socket\r\n    const socketService = {\r\n        setup() {\r\n            socket = io(baseUrl)\r\n        },\r\n        on(eventName, cb) {\r\n            if (!socket) socketService.setup();\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb = null) {\r\n            if (!socket) socketService.setup();\r\n            if (!cb) socket.removeAllListeners(eventName)\r\n            else socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            if (!socket) socketService.setup();\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        }\r\n    }\r\n    return socketService\r\n}","import { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport boardService from '../../services/boardService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faList, faTimes, faClock, faSquare, faPlus, faPaperclip } from '@fortawesome/free-solid-svg-icons'\r\nimport './CardPreview.scss'\r\nimport Avatar from 'react-avatar';\r\nimport Moment from 'react-moment';\r\nimport { socketService } from '../../services/socketService';\r\n\r\nexport function CardPreview(props) {\r\n    const { card, cardPreviewOp } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [tasks, setTasks] = useState(card.tasks)\r\n    const [isAddTask, setIsAddTask] = useState(null)\r\n    var newTask = boardService.getEmptyTask()\r\n\r\n    const setCardTitle = data => {\r\n        card.title = data.cardTitle\r\n        const boardToUpdate = boardService.updateBoard(card, currBoard)\r\n        socketService.emit('card to-update-card', card)\r\n        dispatch(saveBoard(boardToUpdate))\r\n    }\r\n\r\n    const labelsDescToggle = (ev, bool) => {\r\n        ev.stopPropagation()\r\n        cardPreviewOp.setIsDescShown(bool)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const doneAtToggle = (ev, task) => {\r\n        ev.stopPropagation()\r\n        if (!task.doneAt) task.doneAt = Date.now()\r\n        else task.doneAt = ''\r\n        socketService.emit('task to-update-task', { card, task })\r\n        const newBoard = boardService.updateCard(task, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addTask = async data => {\r\n        newTask.title = data.newTask\r\n        tasks.push(newTask)\r\n        setTasks(tasks)\r\n        const newBoard = boardService.updateCard(newTask, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        setIsAddTask(!isAddTask)\r\n        const forSocket = { task: newTask, card: card._id }\r\n        socketService.emit('task to-add-task', forSocket);\r\n        cardPreviewOp.addActivity('Aviv Zohar', 'added', 'task', card.title)\r\n        newTask = boardService.getEmptyTask()\r\n        reset({ newTask: '' })\r\n    }\r\n\r\n    const handleOnDragEnd = async (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(tasks);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        card.tasks = items\r\n        setTasks(card.tasks);\r\n        const boardToSave = await boardService.updateBoard(card, currBoard)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? '#F4F5F7' : '#ec9488')\r\n    }\r\n\r\n    const colorDueDate = (task) => {\r\n        return task.doneAt ? 'white' : ((task.dueDate > Date.now()) ? '#8b95a7' : 'white')\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"board-card\" onClick={() => cardPreviewOp.setCurrCard(card)}>\r\n            <div className=\"hide-overflow\">\r\n                <div className=\"title\">\r\n                    <form onChange={handleSubmit(setCardTitle)}>\r\n                        <input type=\"text\" {...register(\"cardTitle\")} defaultValue={card.title} placeholder=\"Card name\" />\r\n                    </form>\r\n                    <div onClick={(ev) => cardPreviewOp.openCardModal(ev, card)} className=\"manage-card\"><p>⋮</p></div>\r\n                </div>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"tasks\">\r\n                        {(provided) => (\r\n                            <ul {...provided.droppableProps} ref={provided.innerRef} className=\"tasks-container\">\r\n                                {tasks.map((task, idx) => {\r\n                                    return (\r\n                                        <Draggable key={task._id} draggableId={task._id} index={idx}>\r\n                                            {(provided) => (\r\n                                                <li onClick={() => cardPreviewOp.setCurrTask(task)} key={task._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className=\"card-task\">\r\n                                                    {(!task.cover) ? null : (task.cover.includes('#')) ? <div className=\"task-cover-color\" style={{ backgroundColor: `${task.cover}` }} ></div> : <div className=\"task-cover-img\" style={{ backgroundImage: `url(${task.cover}) ,url(https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60)` }}></div>}\r\n                                                    <div className=\"label-color-to-preview-container\">\r\n                                                        {!cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, true)}></label>)}\r\n                                                        {cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-open-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, false)}>{label.desc}</label>)}\r\n                                                    </div>\r\n                                                    <span>{task.title}</span>\r\n                                                    <section className=\"buttom-preview-info\">\r\n                                                        {!task.dueDate ? null : !task.doneAt ?\r\n                                                            <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-home\" icon={faSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                            </div> :\r\n                                                            <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-check-square\" icon={faCheckSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                            </div>}\r\n                                                        {!task.attachments.length ? null : <div><FontAwesomeIcon icon={faPaperclip} /> {task.attachments.length} </div>}\r\n                                                        {!task.checklists.length ? null :\r\n                                                            <p><FontAwesomeIcon icon={faList} />{task.checklists.reduce((accTotal, checklist) => {\r\n                                                                return accTotal + checklist.list.reduce((acc, itemInList) => itemInList.isChecked + acc, 0)\r\n                                                            }, 0)}/\r\n                                                        {task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0)}\r\n                                                            </p>}\r\n                                                    </section>\r\n                                                    {!task.members.length ? null : <div className=\"avatar-card-preview\">\r\n                                                        {task.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                                                    </div>}\r\n                                                </li>\r\n                                            )}</Draggable>)\r\n                                })}{provided.placeholder}\r\n                            </ul>)}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                {!isAddTask && <button className=\"add-task-btn\" onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> Add task</button>}\r\n                {isAddTask && <form className=\"add-task-container\"  onSubmit={handleSubmit(addTask)}>\r\n                    <input   type=\"text\" id=\"title\" name=\"title\" required {...register(\"newTask\")} placeholder=\"Enter a title for this card…\" defaultValue={newTask.title} />\r\n                    <div className=\"add-task-btns\">\r\n                        <button>Add Task</button>\r\n                        <p onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                    </div>\r\n                </form>}\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelEditModal.scss'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveBoard } from '../../store/actions/boardActions';\r\n\r\nexport function LabelEditModal(props) {\r\n    const { labelEditModal, currBoard } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n\r\n\r\n    const onChangeEditLabel = (data) => {\r\n        labelEditModal.desc = data.labelName\r\n        labelEditModal.color = data.labelColor\r\n        props.setLabelModal(labelEditModal)\r\n        dispatch(saveBoard({ ...currBoard }))\r\n\r\n    }\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <div className=\"labels-edit-modal-header\">\r\n                <button onClick={() => props.setLabelEditModal(false)}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                <h3>Edit Label</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"label-edit-details\">\r\n                <form onChange={handleSubmit(res => onChangeEditLabel(res))}>\r\n                    <p>Name:</p>\r\n                    <input type=\"text\" name=\"edit-name\" autoComplete=\"off\" defaultValue={labelEditModal.desc} {...register('labelName')} />\r\n                    <p>Color:</p>\r\n                    <input type=\"color\" name=\"edit-color\" className=\"edit-color\" defaultValue={labelEditModal.color} {...register('labelColor')} />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport boardService from '../../services/boardService'\r\nimport { LabelEditModal } from '../LabelEditModal/LabelEditModal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faPencilAlt, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelModal.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function LabelModal(props) {\r\n    const [labelEditModal, setLabelEditModal] = useState(null)\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const labels = currBoard.labels\r\n\r\n    const chooseLabel = (color) => {\r\n        props.addLabel(color)\r\n    }\r\n\r\n    const editLabel = (ev, label) => {\r\n        ev.stopPropagation()\r\n        setLabelEditModal(label)\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            {  <div className=\"label-modal\" style={!labelEditModal ? { maxWidth: '280px' } : { maxWidth: 0, border: 'none', visibility: 'visible' }}>\r\n                <div className=\"labels-modal-header\">\r\n                    <h3>Labels</h3>\r\n                    <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <ul className=\"label-container\">\r\n                    {labels.map((label, idx) => {\r\n                        return <li onClick={() => chooseLabel(label)} key={idx}  >\r\n                            <div className=\"label-to-show\" style={{ backgroundColor: `${label.color}` }}>\r\n                                <span>{label.desc}</span>\r\n                                <span>{(props.currTask.labels.find((currLabel) => currLabel.color === label.color) ? <FontAwesomeIcon className=\"fa\" icon={faCheckCircle} /> : null)}</span>\r\n                            </div>\r\n                            <button className=\"edit-label-btn\" onClick={(ev) => editLabel(ev, label)}><FontAwesomeIcon icon={faPencilAlt} /></button>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            { labelEditModal && <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={props.LabelEditRef}><LabelEditModal setLabelModal={props.setLabelModal} currBoard={currBoard} labelEditModal={labelEditModal} setLabelEditModal={setLabelEditModal} addLabel={props.addLabel}></LabelEditModal></div>}\r\n        </section >\r\n    )\r\n}\r\n\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './MemberModal.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Avatar from 'react-avatar'\r\nimport { socketService } from '../../services/socketService'\r\nimport { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport function MemberModal(props) {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [searchMembers, setSearchMembers] = useState(currBoard.members)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSearchMember = data => {\r\n        const users = currBoard.members.filter(user => {\r\n            return user.name.toLowerCase().includes(data.searchMember.toLowerCase())\r\n        })\r\n        if (!users.length) users.push({ _id: \"failMember\", name: \"Member not found.\" })\r\n        console.log('users:', users)\r\n        setSearchMembers(users)\r\n    }\r\n    const chooseMember = (member) => {\r\n        // socketService.emit(\"add-member-to-task\", member);\r\n        props.addMemberToTask(member)\r\n    }\r\n    const chooseMemberForSockets = (member) => {\r\n        console.log('workes');\r\n        console.log('member:', member)\r\n        props.addMemberToTask(member)\r\n    }\r\n    useEffect(() => {\r\n        socketService.on(\"add-member-to-task-from-back\", (() => {\r\n            console.log('workes');\r\n        }))\r\n        // socketService.on(\"add-member-to-task-from-back\", chooseMemberForSockets)\r\n    })\r\n\r\n    return (\r\n        <div className=\"member-modal\" >\r\n            <div className=\"member-modal-header\">\r\n                <h3>Members</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setMemberModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <ul className=\"member-container\">\r\n                <form onChange={handleSubmit(onSearchMember)}>\r\n                    <input autoComplete=\"off\" {...register(\"searchMember\")} type=\"text\" placeholder=\"Search members...\" />\r\n                </form>\r\n                <p>Members:</p>\r\n                {searchMembers.map(member => member._id !== 'failMember' ? <li onClick={() => chooseMember(member)} key={member._id} className=\"members-list\" >\r\n                    <div className=\"member-details\">\r\n                        <Avatar key={member._id} name={member.name} size=\"30\" round={true} />\r\n                    </div>\r\n                    <span>{member.name}</span>\r\n                    <span className=\"member-icon\" >{(props.currTask.members.find((currMember) => currMember._id === member._id) ? <FontAwesomeIcon icon={faCheckCircle}> </FontAwesomeIcon> : null)}</span></li> :\r\n                    <li className=\"members-list\" key={member._id}><span>{member.name}</span></li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport './CheckListModal.scss'\r\n\r\nexport function CheckListModal(props) {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const setTitle = data => {\r\n        const newChecklistToSend = { title: data.title, list: [], range: 0 }\r\n        props.addChecklist(newChecklistToSend)\r\n        props.setChecklistModal(false)\r\n    }\r\n    console.log('props.currTask.cover:', props.currTask.cover)\r\n    return (\r\n        <div className=\"checklist-modal\" >\r\n            <section className=\"checklist-modal-header\">\r\n                <h3>Add Checklist</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setChecklistModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form className=\"checklist-modal-main\" onSubmit={handleSubmit(setTitle)}>\r\n                <label>Title</label>\r\n                <input type=\"text\" autoComplete=\"off\" id=\"title\" name=\"title\"  {...register(\"title\")} defaultValue='' />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './DueDateModal.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport 'date-fns';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport function DueDateModal(props) {\r\n    \r\n    const timeStemp = Date.now() + 604800000 //the default is next week\r\n    const defaultNextWeek = new Date(Date.now() + 604800000);\r\n    const [selectedDate, setSelectedDate] = React.useState(timeStemp);\r\n\r\n    const submit = () => {\r\n        var selectedDateStr = Date.parse(selectedDate)\r\n        props.addDueDate(selectedDateStr)\r\n        props.setDueDateModal(false)\r\n    }\r\n    return (\r\n            <div className=\"due-date-modal\">\r\n                <section className=\"due-date-modal-header\">\r\n                    <h3>Due Date</h3>\r\n                    <p className=\"btn-close-icon\" onClick={() => props.setDueDateModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </section>\r\n                <form onSubmit={submit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"static\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Pick A Deadline\"\r\n                            value={selectedDate}\r\n                            onChange={(date) => setSelectedDate(date)}\r\n                            KeyboardButtonProps={{ 'aria-label': 'change date', }}\r\n                        ></KeyboardDatePicker>\r\n                    </MuiPickersUtilsProvider>\r\n                    <button >save</button>\r\n                </form>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n","import { Widget } from 'react-cloudinary-upload-widget'\nimport { utilService } from '../../services/utilService'\nimport './Cloudinary.scss'\n\nexport function Cloudinary({ type, txt, currTask, cloudOp }) {\n\n    const onAttAdd = (res) => {\n        console.log('res:', res)\n        if (type === 'cover') {\n            // currTask.cover = res.info.secure_url\n        }\n        else if (type === 'background') {\n            // currTask.backgrounds ??\n            // currTask.imgs ??\n        }\n        else {\n            var newAtt = { _id: utilService.makeId(), title: res.info.original_filename, src: res.info.secure_url }\n            currTask.attachments.push(newAtt)\n        }\n        cloudOp.updateBoard(currTask)\n    }\n\n    return (\n        <section className=\"cloudinary-container\">\n            <Widget\n                sources={['local', 'camera', 'url', 'dropbox', 'instagram']}\n                sourceKeys={{ dropboxAppKey: 'idwo4j2egt6411m', instagramClientId: '14c890ce047a8defd4410d4bd0b1d823' }}\n                resourceType={'image'}\n                cloudName={'dtu0lzwpw'}\n                uploadPreset={'aywupxtw'}\n                buttonText={txt || 'Attachments'}\n                style={{\n                    color: 'inherit',\n                    border: 'none',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'inherit',\n                    borderRadius: '4px',\n                    padding: 0\n                }}\n                folder={'taskman'}\n                onSuccess={onAttAdd}\n                onFailure={err => console.log(err)}\n                logging={false}\n                customPublicId={'sample'}\n                eager={'w_400,h_300,c_pad|w_260,h_200,c_crop'}\n                use_filename={true}\n                unique_filename={true}\n                apiKey={639164948471337}\n                accepts={'application/json'}\n                contentType={'application/json'}\n                withCredentials={true}\n            />\n        </section>\n    )\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService'\r\nimport Color from 'color-thief-react';\r\nimport './CoverModal.scss'\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\n\r\nexport function CoverModal(props) {\r\n    const coverColors = boardService.getCoverColors()\r\n\r\n    return (\r\n        <section className=\"cover-modal\" style={!props.currTask.cover ? { top: '175px' } : null}>\r\n            <div className=\"cover-modal-header\">\r\n                <h3>Cover</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setCoverModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"cover-modal-body\">\r\n                <h4>COLORS:</h4>\r\n                <div className=\"cover-color-container\">\r\n                    {coverColors.map((color, idx) => <span className=\"cover-color\" key={idx} onClick={() => props.addCover(color)} style={{ backgroundColor: color }}></span>)}\r\n                </div>\r\n                {!props.currTask.attachments.length ? <div>\r\n                    <Cloudinary txt='Upload photo' type='cover' currTask={props.currTask} />\r\n                </div> : <div>\r\n                    <h4>ATTACHMENTS:</h4>\r\n                    <div className=\"cover-attachments-container\">\r\n                        {props.currTask.attachments.map((attach) => {\r\n                            return <Color key={attach._id} src={attach.src || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'} format=\"hex\">\r\n                                {({ data }) => (<div className=\"cover-attach\" style={{ backgroundColor: data, backgroundImage: `url(${attach.src || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'})` }} onClick={() => props.addCover(attach.src)} />)}\r\n                            </Color>\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n                {props.currTask.cover && <button className=\"remove-cover-btn\" onClick={() => props.addCover('')}>Remove cover</button>}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/taskman-loader.d5d52ecc.svg\";","import { useEffect, useRef, useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAlignLeft, faClock, faList, faTag, faTimes, faUser, faCheckSquare, faWindowMaximize, faThermometerEmpty, faSquare, faPaperclip, faClipboard, faPlus, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService.js'\r\nimport './TaskModal.scss'\r\nimport Avatar from 'react-avatar';\r\nimport { LabelModal } from '../LabelModal/LabelModal';\r\nimport { MemberModal } from '../MemberModal/MemberModal';\r\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DueDateModal } from '../DueDateModal/DueDateModal.jsx';\r\nimport { CoverModal } from '../CoverModal/CoverModal.jsx';\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport Moment from 'react-moment';\r\nimport { utilService } from '../../services/utilService.js';\r\nimport { socketService } from '../../services/socketService.js';\r\nimport Color from 'color-thief-react';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary.jsx';\r\n\r\nexport function TaskModal({ taskModalOp }) {\r\n    const { currTask, currBoard } = taskModalOp\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [client, setClient] = useState(null)\r\n    const [urlImg, setUrlImg] = useState(false)\r\n\r\n    const [isComment, setIsComment] = useState(null)\r\n    //-------------------------onClickOutside----------------------------\\\\\r\n    const inputFile = useRef(null)\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(\r\n            () => {\r\n                const listener = (event) => {\r\n                    if (!ref.current || ref.current.contains(event.target)) {\r\n                        return;\r\n                    }\r\n                    handler(event);\r\n                };\r\n                document.addEventListener(\"mousedown\", listener);\r\n                document.addEventListener(\"touchstart\", listener);\r\n                return () => {\r\n                    document.removeEventListener(\"mousedown\", listener);\r\n                    document.removeEventListener(\"touchstart\", listener);\r\n                };\r\n            },\r\n            [ref, handler]\r\n        );\r\n    }\r\n\r\n    const attRef = useRef()\r\n\r\n    const [labelModal, setLabelModal] = useState(false)\r\n    const labelRef = useRef()\r\n    useOnClickOutside(labelRef, () => setLabelModal(false));\r\n\r\n    const [labelEditModal, setLabelEditModal] = useState(false)\r\n    const labelEditRef = useRef()\r\n    useOnClickOutside(labelEditRef, () => setLabelEditModal(false));\r\n\r\n    const [coverModal, setCoverModal] = useState(false)\r\n    const coverRef = useRef()\r\n    useOnClickOutside(coverRef, () => setCoverModal(false));\r\n\r\n    const [memberModal, setMemberModal] = useState(false)\r\n    const memberRef = useRef()\r\n    useOnClickOutside(memberRef, () => setMemberModal(false));\r\n\r\n    const [checklistModal, setChecklistModal] = useState(false)\r\n    const checklistRef = useRef()\r\n    useOnClickOutside(checklistRef, () => setChecklistModal(false));\r\n\r\n    const [dueDateModal, setDueDateModal] = useState(false)\r\n    const dueDateRef = useRef()\r\n    useOnClickOutside(dueDateRef, () => setDueDateModal(false));\r\n    //--------------------------------------------------------------------\\\\\r\n\r\n    var descValue;\r\n    const [isDesc, setIsDesc] = useState(false)\r\n    const [attNameModal, setAttNameModal] = useState(null)\r\n\r\n    const currCard = currBoard.cards.find(card => {\r\n        return card.tasks.find(t => {\r\n            return t._id === currTask._id\r\n        })\r\n    })\r\n    const onSubmitDesc = data => {\r\n        currTask.desc = data.desc\r\n        updateBoard(currTask)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const onSubmitItemInList = (data, idxInList) => {\r\n        const input = Object.keys(data).find(str => str === ('inputItem' + idxInList))\r\n        if (!data[input]) return\r\n        currTask.checklists[idxInList].list.push({ desc: data[input], isChecked: false })\r\n        setRange(currTask.checklists[idxInList])\r\n        reset({ inputItem0: '', inputItem1: '', inputItem2: '', inputItem3: '', inputItem4: '' })\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const onSubmitAtt = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('attItem' + idx))\r\n        currTask.attachments[idx].title = data[input];\r\n    }\r\n\r\n    const onSumbitComment = data => {\r\n        const newComment = { _id: utilService.makeId(), member: 'oshri', timeStamp: Date.now(), title: data.comment }\r\n        currTask.comments.push(newComment)\r\n        updateBoard(currTask)\r\n        reset({ comment: '', })\r\n    }\r\n\r\n    const onRemoveComment = (id) => {\r\n        const idx = currTask.comments.findIndex(comment => { return comment._id === id })\r\n        currTask.comments.splice(idx, 1)\r\n        // socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onEditComment = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('editComment' + idx))\r\n        currTask.comments[idx].title = data[input];\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const changeCheckBox = (item) => {\r\n        item.isChecked = !item.isChecked\r\n        updateBoard(currTask)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const toggleTaskDone = () => {\r\n        if (!currTask.doneAt) currTask.doneAt = Date.now()\r\n        else currTask.doneAt = ''\r\n        updateBoard(currTask)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const setRange = checklist => {\r\n        const itemsChecked = checklist.list.reduce((acc, itemInList) => {\r\n            return itemInList.isChecked + acc\r\n        }, 0)\r\n        const rengeToShow = +((itemsChecked / checklist.list.length * 100).toFixed(2))\r\n        checklist.range = rengeToShow\r\n        updateBoard(currTask)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const updateBoard = task => {\r\n        const updatedBoard = boardService.updateCard(task, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(updatedBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        inputFile.current.click()\r\n    }\r\n\r\n    const dueDateSpanText = (task) => {\r\n        return task.doneAt ? 'COMPLETED' : (task.dueDate > Date.now()) ? '' : 'OVERDUE'\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? 'inherite' : '#ec9488')\r\n    }\r\n\r\n    const onAttRemove = (id) => {\r\n        const idx = currTask.attachments.findIndex(att => { return att._id === id })\r\n        currTask.attachments.splice(idx, 1)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setTaskTitle = data => {\r\n        currTask.title = data.taskTitle\r\n        updateBoard(currTask)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const testLog = (ev) => {\r\n        setClient(ev)\r\n    }\r\n\r\n\r\n    if (!currTask || !currCard) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cloudOp = {\r\n        updateBoard\r\n    }\r\n\r\n    return (\r\n        <section className=\"task-modal hide-overflow\">\r\n            <div className=\"task-modal-form\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                {!currTask.cover ? null : currTask.cover.includes('#') ? <div className=\"cover-section\" style={{ backgroundColor: `${currTask.cover}` }} /> :\r\n                    <Color src={currTask.cover || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'} format=\"hex\">\r\n                        {({ data }) => (<div className=\"cover-section\" style={{ backgroundColor: data, backgroundImage: `url(${currTask.cover || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'})` }} />)}\r\n                    </Color>\r\n                }\r\n                <div className=\"task-header\">\r\n                    <div className=\"task-title\">\r\n                        <form onChange={handleSubmit(setTaskTitle)}>\r\n                            <FontAwesomeIcon icon={faWindowMaximize} /> <input type=\"text\" {...register(\"taskTitle\")} defaultValue={currTask.title} placeholder=\"Task name\" />\r\n                        </form>\r\n                        <p className=\"card-title\">In list: {currCard.title}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-description-modal\">\r\n                    {!currTask.members.length ? null : <section className=\"members-section\"><h3>MEMBERS:</h3>\r\n                        <div className=\"member-list\">\r\n                            {currTask.members.map((member, idx) =>\r\n                                <div className=\"member-in-modal\" onClick={() => setMemberModal(true)} key={idx}>\r\n                                    <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                </div>)}\r\n                            <button onClick={() => setMemberModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                        </div>\r\n                    </section>}\r\n                    {!currTask.labels.length ? null : <section className=\"labels-section\"><h3>LABELS:</h3>\r\n                        {currTask.labels.map((label, idx) =>\r\n                            <div className=\"label-in-modal\" key={idx} onClick={() => setLabelModal(true)} style={{ backgroundColor: label.color }}>\r\n                                <p>{label.desc}</p>\r\n                            </div>)}\r\n                        <button onClick={() => setLabelModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </section>}\r\n                    {!currTask.dueDate ? null : <section className=\"due-date-moment-section\" onClick={toggleTaskDone}><h3>DUE DATE:</h3>\r\n                        <span className=\"due-date-moment\"> {!currTask.doneAt ? <FontAwesomeIcon icon={faClock} /> : <FontAwesomeIcon icon={faCheckSquare} />}<Moment format=\"MMM D YYYY\" withTitle>{currTask.dueDate}</Moment><small style={{ color: 'white', backgroundColor: backgroundColorDueDate(currTask) }} >{dueDateSpanText(currTask)}</small>\r\n                        </span> </section>}\r\n                    <section className=\"desc-section\">\r\n                        <div className=\"desc-svg\"><FontAwesomeIcon icon={faAlignLeft} />\r\n                            <p>Description:</p>\r\n                        </div>\r\n                        <form onChange={handleSubmit(res => onSubmitDesc(res))}>\r\n                            <textarea id=\"desc\" name=\"desc\" onClick={() => setIsDesc(!isDesc)} defaultValue={descValue} placeholder=\"Add some detailed description...\" {...register(\"desc\")} defaultValue={taskModalOp.currTask.desc} />\r\n                            {isDesc && <div className=\"save-desc\">\r\n                                <button onClick={(ev) => { ev.preventDefault(); setIsDesc(!isDesc) }}>Save</button>\r\n                                <button onClick={() => setIsDesc(false)}><FontAwesomeIcon icon={faTimes} ></FontAwesomeIcon></button> </div>}\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n                {!currTask.checklists.length ? null : <section >\r\n                    {currTask.checklists.map((checklist, listIdx) =>\r\n                        <div className=\"checklist-in-modal\" key={listIdx}>\r\n                            <div className=\"checklist-svg\"> <div className=\"flex\"> <FontAwesomeIcon icon={faList} ></FontAwesomeIcon> <p>{checklist.title}:</p></div>\r\n                                <button onClick={() => taskModalOp.addChecklist(listIdx)}>Delete list</button>\r\n                            </div>\r\n                            {!checklist.list.length ? null : <h6>{checklist.range}%</h6>}\r\n                            {!checklist.list.length ? null : <div className=\"demo-range-container\">\r\n                                {checklist.range === 100 ? <div className=\"demo-range-checked\" style={{ backgroundColor: '#61bd4f', width: checklist.range + '%' }}></div> :\r\n                                    <div className=\"demo-range-checked\" style={{ width: checklist.range + '%' }}></div>}</div>}\r\n                            {!checklist.list.length ? null : checklist.list.map((item, idx) => {\r\n                                return <div className=\"checklist-items\" key={idx}>\r\n                                    <input type=\"checkbox\" id={'checklist-item-' + idx} checked={item.isChecked} onChange={() => {\r\n                                        changeCheckBox(item)\r\n                                        setRange(checklist)\r\n                                    }} />\r\n                                    {item.isChecked ? <label style={{ textDecoration: 'line-through' }}>{item.desc}</label> : <label>{item.desc}</label>}\r\n                                </div>\r\n                            })}\r\n                            <form onSubmit={handleSubmit(res => onSubmitItemInList(res, listIdx))}>\r\n                                <input type=\"text\" autoComplete=\"off\" id={'input-item-' + listIdx} name=\"item\" placeholder=\"Add an item\"  {...register('inputItem' + listIdx)} />\r\n                                <button className=\"add-an-item-btn\">Add</button>\r\n                            </form>\r\n                        </div>)}\r\n                </section>}\r\n                {!currTask.attachments.length ? null : <section >\r\n                    <div className=\"att-svg\"><FontAwesomeIcon icon={faPaperclip} />\r\n                        <p>Attachments:</p>\r\n                    </div>\r\n                    {currTask.attachments.map((attac, attIdx) =>\r\n                        <div key={attIdx} className=\"attachments-container\">\r\n                            <div className=\"att-src\">\r\n                                <Color src={attac.src || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'} format=\"hex\">\r\n                                    {({ data, loading, error }) => (<div className=\"attachment-img\" style={{ backgroundColor: data, backgroundImage: `url(${attac.src || 'https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'})` }} alt=\"photo\" />)}\r\n                                </Color>\r\n                            </div>\r\n                            <div className=\"att-details\">\r\n                                <p>{attac.title || 'Photo'}</p>\r\n                                <p>Added Right now!</p>\r\n                                <div className=\"att-btns\">\r\n                                    <button onClick={(ev) => { setAttNameModal(!attNameModal); testLog(ev) }}>Edit</button>\r\n                                    <button onClick={() => onAttRemove(attac._id)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                            {attNameModal && <div style={{ transform: `translate(-540px,${client.clientY - 190}px)` }} className=\"att-edit\">\r\n                                <div className=\"att-edit-header\">\r\n                                    <p>Edit attachment</p>\r\n                                    <button onClick={() => setAttNameModal(false)}>x</button>\r\n                                </div>\r\n                                <div className=\"att-edit-main\">\r\n                                    <p>Link name:</p>\r\n                                    <form onSubmit={handleSubmit(res => onSubmitAtt(res, attIdx))}>\r\n                                        <input type=\"text\" autoComplete=\"off\" id={'att-item-' + attIdx} defaultValue={attac.title}  {...register('attItem' + attIdx)} />\r\n                                        <button>Save</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    )}\r\n                </section>}\r\n                <div className=\"att-svg\"><FontAwesomeIcon icon={faComment} />\r\n                    <p>Comments:</p>\r\n                </div>\r\n                <div className=\"task-comment\">\r\n                    <form onSubmit={handleSubmit(onSumbitComment)}>\r\n                        <input className=\"post-comment-input\" type=\"text\" autoComplete=\"off\" id=\"comment\" name=\"comment\" placeholder=\"Post a Comment...\"  {...register(\"comment\")} />\r\n                    </form>\r\n                    {!currTask.comments.length ? null : currTask.comments.map((comment, idx) => <div key={comment._id} className=\"comment-container\">\r\n                        <div className=\"comment-avatar\">\r\n                            <Avatar key={comment._id} name={comment.member} size=\"30\" round={true} />\r\n                        </div>\r\n                        <div className=\"comment-details\">\r\n                            <div className=\"comment-header\">\r\n                                <p className=\"comment-member\">{comment.member}</p> <p><Moment fromNow>{comment.timeStamp}</Moment></p>\r\n                            </div>\r\n                            <form onChange={handleSubmit((res) => onEditComment(res, idx))} className=\"comment-title\">\r\n                                <input type=\"text\" autoComplete=\"off\" id={\"comment-edit\" + idx} defaultValue={comment.title} {...register(\"editComment\" + idx)} />\r\n                                <button style={{ display: 'none' }} onClick={(ev) => ev.preventDefault()}></button>\r\n                            </form>\r\n                            <div className=\"comment-btns\">\r\n                                <button onClick={() => onRemoveComment(comment._id)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"add-to-task\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                <div className=\"right-task-modal\">\r\n                    <h3>Add To Task:</h3>\r\n                    <p onClick={() => taskModalOp.setCurrTask(null)} className=\"btn-close-icon\"><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"right-task-modal-btns\">\r\n                    <div onClick={() => { setLabelModal(true) }} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\r\n                        <p> Labels </p>\r\n                        {(!labelModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={labelRef}> <LabelModal labelEditRef={labelEditRef} setLabelModal={setLabelModal} labelModal={labelModal} currTask={currTask} addLabel={taskModalOp.addLabel}  ></LabelModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setMemberModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n                        <p> Members </p>\r\n                        {(!memberModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={memberRef}> <MemberModal setMemberModal={setMemberModal} memberModal={memberModal} currTask={currTask} addMemberToTask={taskModalOp.addMember} ></MemberModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setChecklistModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faList}></FontAwesomeIcon>\r\n                        <p> Checklist </p>\r\n                        {(!checklistModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={checklistRef}> <CheckListModal setChecklistModal={setChecklistModal} checklistModal={checklistModal} currTask={currTask} addChecklist={taskModalOp.addChecklist} ></CheckListModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setDueDateModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                        <p> Due date </p>\r\n                        {(!dueDateModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={dueDateRef}> <DueDateModal setDueDateModal={setDueDateModal} dueDateModal={dueDateModal} addDueDate={taskModalOp.addDueDate} currTask={currTask}></DueDateModal></div>}\r\n\r\n                    </div>\r\n                    <Cloudinary currTask={currTask} cloudOp={cloudOp} txt={<div className=\"right-task-btn\"><FontAwesomeIcon icon={faPaperclip}></FontAwesomeIcon><p>Attachments</p></div>} />\r\n                    {(!coverModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={coverRef}><CoverModal setCoverModal={setCoverModal} coverModal={coverModal} addCover={taskModalOp.addCover} currTask={currTask} onButtonClick={onButtonClick} inputFile={inputFile}></CoverModal></div>}\r\n                    <div onClick={() => setCoverModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon>\r\n                        <p> Cover </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {!labelModal ? null : <div ref={labelRef}> <LabelModal setLabelModal={setLabelModal} labelModal={labelModal} currTask={currTask} addLabel={taskModalOp.addLabel}  ></LabelModal></div>}\r\n            {!memberModal ? null : <div ref={memberRef}> <MemberModal setMemberModal={setMemberModal} memberModal={memberModal} currTask={currTask} addMemberToTask={taskModalOp.addMember} ></MemberModal></div>}\r\n            {!checklistModal ? null : <div ref={checklistRef}> <CheckListModal setChecklistModal={setChecklistModal} checklistModal={checklistModal} currTask={currTask} addChecklist={taskModalOp.addChecklist} ></CheckListModal></div>}\r\n            {!dueDateModal ? null : <div ref={dueDateRef}> <DueDateModal setDueDateModal={setDueDateModal} dueDateModal={dueDateModal} addDueDate={taskModalOp.addDueDate} currTask={currTask}></DueDateModal></div>}\r\n            {!coverModal ? null : <div ref={coverRef}><CoverModal setCoverModal={setCoverModal} coverModal={coverModal} addCover={taskModalOp.addCover} currTask={currTask} onButtonClick={onButtonClick} inputFile={inputFile} ></CoverModal></div>}\r\n        </section >\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport boardService from '../../services/boardService'\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions'\r\nimport Moment from 'react-moment';\r\nimport './BoardMenu.scss'\r\nimport { faChevronLeft, faPalette, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { utilService } from '../../services/utilService'\r\nimport { PolarArea, Bar } from 'react-chartjs-2';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\n\r\nexport function BoardMenu({ boardMenuOp }) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [isAbout, setIsAbout] = useState(false)\r\n    const [isBackground, setIsBackground] = useState(false)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [isLabels, setIsLabels] = useState(false)\r\n    const [cloudImgs, setCloudImgs] = useState(null)\r\n    const [isAddLabel, setIsAddLabel] = useState(false)\r\n    const [filterBy, setFilterBy] = useState({ task: '', labels: [] })\r\n    const colors = ['lightgreen', 'lightyellow', 'lightblue', 'orange', 'slateblue', 'lightpink', 'lightgray', 'white']\r\n\r\n    useEffect(() => {\r\n        setCloudImgs(boardService.getCloudImages())\r\n        sendFilter()\r\n    }, [filterBy])\r\n\r\n    useEffect(() => {\r\n        if (!boardMenuOp.isMenu) closeMenu()\r\n    }, [boardMenuOp.isMenu])\r\n\r\n    const onSearchTask = data => {\r\n        setFilterBy({ ...filterBy, task: data.searchTask })\r\n    }\r\n\r\n    const onSearchLabel = idx => {\r\n        if (filterBy.labels.includes(boardMenuOp.labels[idx].desc)) {\r\n            const removeIdx = filterBy.labels.findIndex(label => label === boardMenuOp.labels[idx].desc)\r\n            filterBy.labels.splice(removeIdx, 1)\r\n            setFilterBy({ ...filterBy, labels: filterBy.labels })\r\n        }\r\n        else setFilterBy({ ...filterBy, labels: [...filterBy.labels, boardMenuOp.labels[idx].desc] })\r\n    }\r\n\r\n    const sendFilter = () => {\r\n        boardMenuOp.filterTasks(filterBy)\r\n    }\r\n\r\n    const saveLabels = data => {\r\n        const descs = []\r\n        const colors = []\r\n        Object.keys(data).forEach(input => {\r\n            if (input.includes('editBoardLabelColor')) colors.push(input)\r\n            else if (input.includes('editBoardLabel')) descs.push(input)\r\n        })\r\n        const arrValues = Object.values(data)\r\n        arrValues.splice(0, 1)\r\n        const arr1 = []\r\n        const arr2 = []\r\n        arrValues.forEach((val, idx) => {\r\n            if (idx % 2 === 0) arr1.push(val)\r\n            else arr2.push(val)\r\n        })\r\n        const labels = arr1.map((val, idx) => {\r\n            return { desc: arr1[idx], color: arr2[idx] }\r\n        })\r\n        dispatch(saveBoard({ ...currBoard, labels: labels }))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n    const onAddBoardLabel = (data) => {\r\n        const label = { desc: data.addBoardLabel, color: data.addBoardLabelColor }\r\n        currBoard.labels.push(label)\r\n        dispatch(saveBoard(currBoard))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n        setIsAddLabel(!isAddLabel)\r\n        boardMenuOp.addActivity('Aviv Zohar', 'added', 'label')\r\n    }\r\n\r\n    const deleteLabel = (idx) => {\r\n        currBoard.labels.splice(idx, 1)\r\n        dispatch(saveBoard(currBoard))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n        boardMenuOp.addActivity('Aviv Zohar', 'deleted', 'label')\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        boardMenuOp.setIsMenu(false)\r\n        setIsAbout(false)\r\n        setIsBackground(false)\r\n        setIsFilter(false)\r\n        setIsLabels(false)\r\n        onSearchTask('')\r\n    }\r\n\r\n    if (!cloudImgs || !currBoard) return (<div className=\"loader-container\">Loading</div>)\r\n\r\n    const inProgress = []\r\n    const overdue = []\r\n    const completed = []\r\n    currBoard.cards.forEach(card => {\r\n        card.tasks.forEach(task => {\r\n            if (task.doneAt) completed.push(task)\r\n            else if (!task.dueDate) inProgress.push(task)\r\n            else task.dueDate > Date.now() ? inProgress.push(task) : overdue.push(task)\r\n        })\r\n    })\r\n\r\n    const dataForMembersChart = {\r\n        labels: currBoard.members.map(m => m.name),\r\n        datasets: [{\r\n            label: 'Members',\r\n            data: currBoard.members.map(m => m.tasks.length),\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.7)',\r\n                'rgba(75, 192, 192, 0.7)',\r\n                'rgba(255, 205, 86, 0.7)',\r\n                'rgba(201, 203, 207, 0.7)',\r\n                'rgba(54, 162, 235, 0.7)'\r\n            ],\r\n            hoverOffset: 4\r\n        }]\r\n    };\r\n\r\n    const dataForChart = {\r\n        labels: ['Completed', 'In progress', 'Overdue'],\r\n        datasets: [{\r\n            label: 'Status',\r\n            data: [completed.length, inProgress.length, overdue.length],\r\n            backgroundColor: [\r\n                'rgba(29, 185, 84, 0.7)',\r\n                'rgba(255, 159, 64, 0.7)',\r\n                'rgba(255, 99, 132, 0.7)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(29, 185, 84)',\r\n                'rgba(255, 159, 64)',\r\n                'rgba(255, 99, 132)',\r\n            ],\r\n            borderWidth: 1,\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <section className=\"board-menu flex\" style={boardMenuOp.isMenu ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n            <article className=\"menu-main\">\r\n                <div className=\"flex\">\r\n                    <h3>Menu</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}>About & Statistics</p>\r\n                    <p onClick={() => setIsBackground(!isBackground)}>Background</p>\r\n                    <p onClick={() => setIsFilter(!isFilter)}>Search cards</p>\r\n                    <p onClick={() => setIsLabels(!isLabels)}>Labels</p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <h3>Activity</h3>\r\n                    <ul>\r\n                        {!currBoard.activity.length ? null : currBoard.activity.map(activity => <li key={activity._id}>\r\n                            {(activity.type !== 'attached' && activity.type !== 'removed') ? <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span>{activity.card === 'board' ? '' : ' card'}.</p>\r\n                                : <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'removed' ? 'from' : 'to'} <span>{activity.card}</span> task.</p>}\r\n                            <small><Moment fromNow>{activity.createdAt}</Moment></small>\r\n                        </li>)}\r\n                        {!currBoard.activity.length && <li><h1>No activity here...</h1></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-about sub-menu\" style={isAbout ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>About & Statistics</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex hide-overflow\">\r\n                    <div className=\"flex\">\r\n                        <h3>Members</h3>\r\n                        <div>{boardMenuOp.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}</div>\r\n                        <p>Total: {boardMenuOp.members.length}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Description</h3>\r\n                        <textarea placeholder=\"Type here a description\" />\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Statistics</h3>\r\n                        <h4>Tasks per member</h4>\r\n                        <PolarArea data={dataForMembersChart} />\r\n                        <h4>Tasks status</h4>\r\n                        <Bar height=\"200\" data={dataForChart} />\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-background sub-menu\" style={isBackground ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsBackground(!isBackground)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Change background</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <div className=\"flex\">\r\n                        <h4>Colors</h4>\r\n                        <div className=\"flex\">\r\n                            {colors.map((color, idx) => <aside key={idx} style={{ backgroundColor: color }} onClick={() => boardMenuOp.changeBackground(color, true)}></aside>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h4>Photos</h4>\r\n                        <div className=\"flex\">\r\n                            <Cloudinary txt=\"Upload photo\" type=\"background\" />\r\n                            {cloudImgs.map((url, idx) => <img key={idx} onClick={() => boardMenuOp.changeBackground(url)} decoding=\"async\" loading=\"lazy\" src={url} alt={url} />)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-filter sub-menu\" style={isFilter ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsFilter(!isFilter)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Search cards</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div>\r\n                    <form onChange={handleSubmit(onSearchTask)}>\r\n                        <input type=\"text\" placeholder=\"Search for task...\" {...register(\"searchTask\")} />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h4>Search by label</h4>\r\n                    <ul>\r\n                        {boardMenuOp.labels.map((label, idx) => <li key={idx} style={{ backgroundColor: filterBy.labels.includes(label.desc) ? 'gray' : 'inherit' }} onClick={() => onSearchLabel(idx)}>\r\n                            <div style={{ backgroundColor: label.color }}></div>\r\n                            <p>{label.desc}</p>\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-labels sub-menu\" style={isLabels ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsLabels(!isLabels)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Labels</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow\">\r\n                    <ul>\r\n                        {boardMenuOp.labels.map((label, idx) => <li key={idx} style={{ backgroundColor: label.color }}>\r\n                            <form onChange={handleSubmit(utilService.debounce(saveLabels, 800))}>\r\n                                <input type=\"text\" defaultValue={label.desc} placeholder=\"Label name\" required {...register(\"editBoardLabel\" + idx)} />\r\n                                <label name=\"label-color\"><FontAwesomeIcon className=\"fa\" icon={faPalette} />\r\n                                    <input type=\"color\" {...register(\"editBoardLabelColor\" + idx)} defaultValue={label.color} /></label>\r\n                            </form>\r\n                            <p><FontAwesomeIcon className=\"fa\" icon={faTimes} onClick={() => deleteLabel(idx)} /></p>\r\n                        </li>)}\r\n                        {!isAddLabel && <li onClick={() => setIsAddLabel(!isAddLabel)}><p>New label</p></li>}\r\n                        {isAddLabel && <li>\r\n                            <form onSubmit={handleSubmit(onAddBoardLabel)}>\r\n                                <input type=\"text\" placeholder=\"Label name\" autoComplete=\"off\" required {...register(\"addBoardLabel\")} />\r\n                                <input type=\"color\" name=\"label-color\" id=\"label-color\" defaultValue=\"#FFFFFF\" {...register(\"addBoardLabelColor\")} />\r\n                                <button>Add label</button>\r\n                            </form>\r\n                            <button onClick={() => setIsAddLabel(!isAddLabel)}>X</button></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n        </section >\r\n    )\r\n}","import { faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Notification.scss'\n\nexport function Notification({ notifyOp }) {\n    const { isMsg, msg } = notifyOp\n\n    if (!msg) return (<div></div>)\n    return (\n        <section className=\"notification-container\" style={isMsg ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n            <div>\n                <FontAwesomeIcon className=\"fa\" icon={faCheckCircle}></FontAwesomeIcon>\n                {msg.type === 'warning' && <FontAwesomeIcon className=\"fa\" icon={faExclamationCircle}></FontAwesomeIcon>}\n            </div>\n            <div>\n                {(msg.type !== 'attached' && msg.type !== 'removed') ? <p><span>{msg.member}:<br /></span> {msg.type} {msg.desc} {msg.type === 'deleted' ? 'from' : 'to'} <span>{msg.card}</span>{msg.card === 'board' ? '' : ' card'}.</p>\n                    : <p><span>{msg.member}:</span><br /> {msg.type} {msg.desc} {msg.type === 'removed' ? 'from' : 'to'} <span>{msg.card}</span> task.</p>}\n            </div>\n        </section>\n    )\n}","import { useEffect, useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground } from '../../store/actions/boardActions'\r\nimport { CardPreview } from '../../cmps/CardPreview'\r\nimport { TaskModal } from '../../cmps/TaskModal/TaskModal'\r\nimport { useForm } from \"react-hook-form\";\r\nimport boardService from '../../services/boardService'\r\nimport Avatar from 'react-avatar';\r\nimport { BoardMenu } from '../../cmps/BoardMenu'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faCheckCircle, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { utilService } from '../../services/utilService'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService'\r\nimport { Notification } from '../../cmps/Notification/Notification'\r\nimport './BoardDetails.scss'\r\n\r\nexport function BoardDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm()\r\n    var newCard = boardService.getEmptyCard()\r\n    const users = boardService.getUsers()\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [currCard, setCurrCard] = useState(null)\r\n    const [currTask, setCurrTask] = useState(null)\r\n    const [isMsg, setIsMsg] = useState(false)\r\n    const [msg, setMsg] = useState(null)\r\n    const ref = useRef()\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(() => {\r\n            const listener = (event) => {\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n                handler(event);\r\n            };\r\n            document.addEventListener(\"mousedown\", listener);\r\n            document.addEventListener(\"touchstart\", listener);\r\n            return () => {\r\n                document.removeEventListener(\"mousedown\", listener);\r\n                document.removeEventListener(\"touchstart\", listener);\r\n            };\r\n        }, [ref, handler]);\r\n        // Add ref and handler to effect dependencies\r\n        // It's worth noting that because passed in handler is a new ...\r\n        // ... function on every render that will cause this effect ...\r\n        // ... callback/cleanup to run every render. It's not a big deal ...\r\n        // ... but to optimize you can wrap handler in useCallback before ...\r\n        // ... passing it into this hook.\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(false))\r\n        const { id } = props.match.params\r\n        socketService.emit(\"board topic\", id);\r\n        if (!currBoard) dispatch(setCurrBoard(id))\r\n        else if (!draggedCards) {\r\n            setDraggedCards(currBoard.cards)\r\n            socketService.on('task add-task', data => {\r\n                addTaskForSockets(data)\r\n            })\r\n            socketService.on('task update-task', data => {\r\n                updateTask(data)\r\n            })\r\n            socketService.on('card add-card', data => {\r\n                addNewCardForSockets(data)\r\n            })\r\n            socketService.on('card delete-card', data => {\r\n                deleteTaskForSockets(data)\r\n            })\r\n            socketService.on('board add-label', data => {\r\n                addLabelForSockets(data)\r\n            })\r\n            socketService.on('card update-card', data => {\r\n                updateCardForSockets(data)\r\n            })\r\n            socketService.on('card update-card-title', data => {\r\n                updateCardTitleForSockets(data)\r\n            })\r\n            socketService.on('board add-activity', activity => {\r\n                addActivityForSockets(activity)\r\n            })\r\n        }\r\n    }, [currBoard])\r\n\r\n    // Sockets /////////////////////////////////////////////////////////\r\n\r\n    const updateCardForSockets = card => {\r\n        console.log('card:', card)\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === card._id)\r\n        currBoard.cards.splice(cardIdx, 1, card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 500)\r\n    }\r\n\r\n    const updateTask = data => {\r\n        const updateCard = currBoard.cards.find(c => c._id === data.card._id)\r\n        const taskIdx = updateCard.tasks.findIndex(t => t._id === data.task._id)\r\n        updateCard.tasks.splice(taskIdx, 1, data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const updateCardTitleForSockets = card => {\r\n        const cardToUpdate = currBoard.cards.find(c => c._id === card._id)\r\n        cardToUpdate.title = card.title\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addTaskForSockets = data => {\r\n        const addTo = currBoard.cards.find(c => c._id === data.card)\r\n        addTo.tasks.push(data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const deleteTaskForSockets = data => {\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === data.card)\r\n        currBoard.cards.splice(cardIdx, 1)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addNewCardForSockets = card => {\r\n        currBoard.cards.push(card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addLabelForSockets = data => {\r\n        console.log('data:', data)\r\n        if (!data.task.labels.length) data.task.labels.push(data.label)\r\n        else {\r\n            if (data.task.labels.some((currLabel) => currLabel.color === data.label.color)) {\r\n                const labelToRemove = data.task.labels.findIndex(currLabel => currLabel.color === data.label.color)\r\n                data.task.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                data.task.labels.push(data.label)\r\n            }\r\n        }\r\n        boardService.updateCard(data.task, data.card, currBoard)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addActivityForSockets = activity => {\r\n        currBoard.activity.unshift(activity)\r\n        sendMsg(activity.member, activity.type, activity.desc, activity.card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////\r\n\r\n    useOnClickOutside(ref, () => setCurrTask(false));\r\n    const [isMenu, setIsMenu] = useState(false)\r\n    const menuRef = useRef()\r\n    useOnClickOutside(menuRef, () => setIsMenu(false));\r\n    const [cardModal, setCardModal] = useState(null)\r\n    const cardModalRef = useRef()\r\n    useOnClickOutside(cardModalRef, () => setIsCardModal(false));\r\n\r\n    const inviteRef = useRef()\r\n    useOnClickOutside(inviteRef, () => setIsInvite(false));\r\n    const [isAddCard, setIsAddCard] = useState(null)\r\n    const [draggedCards, setDraggedCards] = useState((currBoard?.cards) ? currBoard.cards : null)\r\n    const [isInvite, setIsInvite] = useState(null)\r\n    const [isCardModal, setIsCardModal] = useState(null)\r\n    const [xPosEl, setXPosEl] = useState(null)\r\n    const [yPosEl, setYPosEl] = useState(null)\r\n    const [addMembersToBoard, setMembersToBoard] = useState(null)\r\n    const [isDescShown, setIsDescShown] = useState(false)\r\n\r\n    //Card Drag\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const items = draggedCards;\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        // console.log('items:', items)\r\n        setDraggedCards(items);\r\n    }\r\n\r\n    // Card modal\r\n    const openCardModal = (ev, card) => {\r\n        setXPosEl(ev.clientX)\r\n        setYPosEl(ev.clientY)\r\n        setIsCardModal(true)\r\n        setCardModal(card)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCardModal(null)\r\n        setIsCardModal(false)\r\n    }\r\n\r\n    const setBoardTitle = (data) => {\r\n        var title = data.boardTitle;\r\n        dispatch(saveBoard({ ...currBoard, title }))\r\n    }\r\n\r\n    const addMemberToBoard = data => {\r\n        const membersInBoard = []\r\n        currBoard.members.map(member => membersInBoard.push(member._id))\r\n        const usersToAdd = users.filter(user => {\r\n            if (data.member === '') return\r\n            if (!membersInBoard.includes(user._id)) return user.name.toLowerCase().includes(data.member.toLowerCase())\r\n        })\r\n        setMembersToBoard(usersToAdd)\r\n    }\r\n\r\n    const onAddMember = (member) => {\r\n        currBoard.members.push(member)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const removeUserFromBoard = (id) => {\r\n        const idx = currBoard.members.findIndex(member => member._id === id)\r\n        currBoard.members.splice(idx, 1)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addLabel = (label) => {\r\n        if (!currTask.labels.length) currTask.labels.push(label)\r\n        else {\r\n            if (currTask.labels.some((currLabel) => currLabel.color === label.color)) {\r\n                const labelToRemove = currTask.labels.findIndex(currLabel => currLabel.color === label.color)\r\n                currTask.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                currTask.labels.push(label)\r\n            }\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n        addActivity('Aviv Zohar', 'added', 'label', currCard.title)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const addChecklist = (list) => {\r\n        if (typeof list === 'object') currTask.checklists.push(list)\r\n        else currTask.checklists.splice(list, 1);\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addDueDate = (date) => {\r\n        currTask.dueDate = date\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addCover = (cover) => {\r\n        currTask.cover = cover\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addMember = (member) => {\r\n        if (!currTask.members.length) {\r\n            member.tasks.push(currTask._id)\r\n            currTask.members.push(member)\r\n            addActivity('Aviv Zohar', 'attached', member.name, currTask.title)\r\n        }\r\n        else if (currTask.members.some((currMember) => currMember._id === member._id)) {\r\n            const taskIdx = member.tasks.findIndex(t => t === currTask._id)\r\n            member.tasks.splice(taskIdx, 1)\r\n            const memberToRemove = currTask.members.findIndex(currMember => currMember._id === member._id)\r\n            currTask.members.splice(memberToRemove, 1)\r\n            addActivity('Aviv Zohar', 'removed', member.name, currTask.title)\r\n        } else {\r\n            member.tasks.push(currTask._id)\r\n            currTask.members.push(member)\r\n            addActivity('Aviv Zohar', 'attached', member.name, currTask.title)\r\n        }\r\n        console.log('member', member);\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addNewCard = (data) => {\r\n        newCard = boardService.getEmptyCard()\r\n        newCard.title = data.newCardTitle\r\n        currBoard.cards.push(newCard)\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard({ ...currBoard, cards: [...currBoard.cards] }))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 150)\r\n        setIsAddCard(!isAddCard)\r\n        reset()\r\n        addActivity('Aviv Zohar', 'added', 'card')\r\n        socketService.emit('card to-add-card', newCard);\r\n        // data.newCardTitle = ''\r\n    }\r\n\r\n    const deleteCard = () => {\r\n        const cardIdx = currBoard.cards.findIndex(card => card._id === currCard._id)\r\n        const boardToSave = boardService.updateBoard(cardIdx, currBoard)\r\n        socketService.emit('card to-delete-card', cardIdx);\r\n        addActivity('Aviv Zohar', 'deleted', 'card')\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(boardToSave._id))\r\n        closeModal()\r\n    }\r\n\r\n    const changeBackground = (background, type) => {\r\n        if (type) {\r\n            addActivity('Aviv Zohar', 'change', 'color')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: background, img: null } }))\r\n        }\r\n        else {\r\n            addActivity('Aviv Zohar', 'change', 'image')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: null, img: background } }))\r\n        }\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n\r\n\r\n    const filterTasks = (filterBy) => {\r\n        if (filterBy.task || filterBy.labels.length) {\r\n            var newCards = []\r\n            if (filterBy.task !== '') {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.filter(task => {\r\n                        if (task.title.includes(filterBy.task)) newCards.push(card);\r\n                    })\r\n                })\r\n            }\r\n            if (filterBy.labels.length) {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.map(task => {\r\n                        return task.labels.map(label => {\r\n                            if (filterBy.labels.includes(label.desc)) newCards.push(card)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            const cardsIds = []\r\n            newCards = newCards.filter(c => {\r\n                if (cardsIds.includes(c._id)) return\r\n                cardsIds.push(c._id)\r\n                return c;\r\n            })\r\n            if (!newCards || !Object.keys(newCards).length) {\r\n                const failCard = boardService.getEmptyCard()\r\n                failCard.title = 'There are no matched tasks.'\r\n                setDraggedCards([failCard])\r\n            } else setDraggedCards(newCards)\r\n        } else setDraggedCards(currBoard.cards)\r\n    }\r\n\r\n    const addActivity = (member, type, desc, card = 'board') => {\r\n        const newActivity = { _id: utilService.makeId(), member, type, desc, card, createdAt: Date.now() }\r\n        currBoard.activity.unshift(newActivity)\r\n        socketService.emit('board to-add-activity', newActivity)\r\n        sendMsg(member, type, desc, card)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const sendMsg = (member, type, desc, card = 'board') => {\r\n        setMsg({ member, type, desc, card })\r\n        setIsMsg(true)\r\n        setTimeout(() => {\r\n            setIsMsg(false)\r\n        }, 3000)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    if (!currBoard || !draggedCards || !draggedCards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cardPreviewOp = {\r\n        openCardModal,\r\n        closeModal,\r\n        addActivity,\r\n        setCurrCard,\r\n        setCurrTask,\r\n        isDescShown,\r\n        setIsDescShown\r\n    }\r\n\r\n    const boardMenuOp = {\r\n        setIsMenu,\r\n        isMenu,\r\n        changeBackground,\r\n        members: currBoard.members,\r\n        filterTasks,\r\n        labels: currBoard.labels,\r\n        addActivity\r\n    }\r\n\r\n    const taskModalOp = {\r\n        setCurrTask,\r\n        currTask,\r\n        addLabel,\r\n        addMember,\r\n        addChecklist,\r\n        addDueDate,\r\n        addCover,\r\n        currBoard: currBoard\r\n    }\r\n\r\n    const notifyOp = {\r\n        isMsg: isMsg,\r\n        msg: msg,\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-details sub-container\">\r\n            <div className=\"board-header flex\">\r\n                <div className=\"flex \">\r\n                    <form onBlur={handleSubmit(setBoardTitle)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"boardTitle\")} defaultValue={currBoard.title} />\r\n                    </form>\r\n                    <div className=\"flex\">\r\n                        <div className=\"avatars\">\r\n                            {currBoard.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                        </div>\r\n                        <button onClick={() => setIsInvite(!isInvite)}>Invite</button>\r\n                        {isInvite && <div ref={inviteRef} className=\"invite-members-modal\">\r\n                            <form onChange={handleSubmit(addMemberToBoard)} >\r\n                                <div className=\"invite-title\">\r\n                                    <div className=\"close-btn\">\r\n                                        <p>Invite to board:</p>\r\n                                        <button onClick={() => setIsInvite(!isInvite)}>x</button>\r\n                                    </div>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Search Taskman Members..\" id=\"member\" name=\"member\"  {...register(\"member\")} />\r\n                                </div>\r\n                            </form>\r\n                            {addMembersToBoard && <div className=\"exist-members\">\r\n                                <ul>\r\n\r\n                                    {addMembersToBoard.map((member, idx) => {\r\n                                        return <li key={member._id}>\r\n                                            <p>Add members:</p>\r\n                                            <button onClick={() => onAddMember(member)} className=\"suggested-user\">\r\n                                                <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                                <p>{member.name}</p>\r\n                                                <p><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon></p>\r\n                                            </button>\r\n                                        </li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>}\r\n                            <div className=\"exist-members\">\r\n                                <p>In This Board:</p>\r\n                                {currBoard.members.map((user, idx) => {\r\n                                    return <button key={user._id} onClick={() => removeUserFromBoard(user._id)} className=\"suggested-user\">\r\n                                        <Avatar key={idx} name={user.name} size=\"30\" round={true} />\r\n                                        <p>{user.name}</p>\r\n                                        <p><FontAwesomeIcon icon={faCheckCircle} /></p>\r\n                                    </button>\r\n                                })}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div ref={menuRef} className=\"flex\">\r\n                    <p className=\"open-menu-btn\" onClick={() => setIsMenu(true)}><FontAwesomeIcon className=\"fa\" icon={faBars}></FontAwesomeIcon></p>\r\n                    <BoardMenu boardMenuOp={boardMenuOp}></BoardMenu>\r\n                </div>\r\n            </div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"cards\" type=\"CARD\">\r\n                    {(provided) => (\r\n                        <div {...provided.droppableProps} ref={provided.innerRef} className=\"cards-container flex\">\r\n                            <div className=\"flex\">\r\n                                {draggedCards.map((card, idx) => {\r\n                                    return <div className=\"test\" key={card._id}> <Draggable key={card._id} draggableId={card._id} index={idx}>\r\n                                        {(previewProvider) =>\r\n                                        (<div key={card._id}  {...previewProvider.draggableProps} {...previewProvider.dragHandleProps} ref={previewProvider.innerRef}>\r\n                                            <CardPreview key={card._id} cardPreviewOp={cardPreviewOp} card={card}></CardPreview>\r\n                                        </div>)}\r\n                                    </Draggable>{provided.placeholder}</div>\r\n                                })}\r\n                                {!isAddCard && <button className=\"add-card-btn\" onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faPlus}></FontAwesomeIcon> Add another card</button>}\r\n                                {isAddCard && <div className=\"add-card\"> <form className=\"add-card-container\" onSubmit={handleSubmit(addNewCard)}>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Card name\" id=\"title\" name=\"title\" {...register(\"newCardTitle\")} />\r\n                                    <div className=\"flex\">\r\n                                        <button>Add Card</button>\r\n                                        <p onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faTimes}></FontAwesomeIcon></p>\r\n                                    </div>\r\n                                </form></div>}\r\n                            </div>\r\n                        </div>)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            {\r\n                isCardModal && <div ref={cardModalRef} style={{ left: `${xPosEl}px`, top: `${yPosEl}px` }} className=\"card-modal\">\r\n                    <div className=\"card-title-modal\">\r\n                        <p>{cardModal.title}</p>\r\n                        <button onClick={() => closeModal()}>x</button>\r\n                    </div>\r\n                    <div className=\"card-modal-btns\">\r\n                        <button onClick={() => deleteCard()}>Delete This Card</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            { currTask && <div ref={ref}><TaskModal taskModalOp={taskModalOp}></TaskModal></div>}\r\n            <Notification notifyOp={notifyOp} />\r\n        </div >\r\n    )\r\n}","import './LandingPage.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateBackground } from '../../store/actions/boardActions'\r\n\r\nexport function LandingPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(updateBackground(false))\r\n    })\r\n\r\n    return (\r\n        <section className=\"sub-container landing-page-container\">\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>T<span>a</span>skm<span>a</span>n</h3>\r\n                    <p>Taskman helps teams move work forward.\r\n                    Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique-accomplish it all with Taskman.</p>\r\n                    <Link to=\"/profile\">Join now<span>.</span></Link>\r\n                </div>\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9667092/media/09648e273e248e7cfd22ade4010b2a6e.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"landing-page-section\">\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9073688/media/bb69af3d8f2404f4cfcc7cecdc558be6.gif\" alt=\"\" />\r\n                <div>\r\n                    <h3>Keep Track Of Your Team</h3>\r\n                    <p>Taskman has statistics panel to see your team progress.\r\n                    Keep track of your team's assignment and completion of tasks easily!</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>Live Updates & Push Notifications</h3>\r\n                    <p>Always be up-to-date with recent activities in your project.\r\n                    our unique system of real-time push notifications will make sure\r\n                    you always know all about the recent developments.</p>\r\n                </div>\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/7736965/media/e08e0676dd54ae8715c2d72bbdd51eb2.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"flex try-btn\">\r\n                <Link to=\"/boards\" className=\"link\">Try Taskman!</Link>\r\n            </div>\r\n            <div className=\"landing-page-header\">\r\n                <Link to=\"/boards\" className=\"link\">T<span>a</span>skm<span>a</span>n</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\nimport './BoardPreview.scss'\r\nimport Color from 'color-thief-react';\r\n\r\nexport function BoardPreview({ board }) {\r\n\r\n\r\n    return (\r\n        <div className=\"board-link links\" style={board.background.img ? { backgroundImage: `url(${board.background.img})` } : { backgroundColor: board.background.color }}>\r\n            <Link className=\"link\" to={`/board/${board._id}`}>\r\n                <Color src={board.background.img} format=\"hex\">\r\n                    {({ data, loading, error }) => (\r\n                        <h4 style={{ color: data }}>{board.title}</h4>\r\n                    )}\r\n                </Color>\r\n            </Link>\r\n        </div>\r\n    )\r\n    // return (\r\n    //     <div className=\"board-link links\" style={board.background.img ? { backgroundImage: `url(${board.background.img})` } : { backgroundColor: board.background.color }}>\r\n    //         <Link className=\"link\" to={`/board/${board._id}`}>\r\n    //             <h4>{board.title}</h4>\r\n    //         </Link>\r\n    //     </div>\r\n    // )\r\n}","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { BoardPreview } from '../BoardPreview'\r\nimport './BoardList.scss'\r\n\r\nexport function BoardList({ boardListOp }) {\r\n    const { register, handleSubmit } = useForm();\r\n    const [isCreateBoard, setIsCreateBoard] = useState(null)\r\n\r\n    const onAddBoard = data => {\r\n        boardListOp.addBoard(data.newBoardTitle)\r\n        setIsCreateBoard(!isCreateBoard)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"board-container\">\r\n            {boardListOp.boards.map(board => <li key={board._id}><BoardPreview board={board}></BoardPreview></li>)}\r\n            <li className=\"board-link add-board\">\r\n                {!isCreateBoard && <button onClick={() => setIsCreateBoard(!isCreateBoard)}>Create board</button>}\r\n                {isCreateBoard &&\r\n                    <form onSubmit={handleSubmit(onAddBoard)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"newBoardTitle\")} placeholder=\"Board name\" />\r\n                        <h4>Create board</h4>\r\n                    </form>}\r\n            </li>\r\n        </ul>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, updateBackground } from '../../store/actions/boardActions.js'\r\nimport { BoardList } from '../../cmps/BoardList'\r\nimport './TaskmanApp.scss'\r\nimport boardService from '../../services/boardService.js'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService.js'\r\n\r\nexport function TaskmanApp() {\r\n    const dispatch = useDispatch()\r\n    const boards = useSelector(state => state.boardReducer.boards)\r\n    const newBoard = boardService.getEmptyBoard()\r\n\r\n    useEffect(() => {\r\n        socketService.setup();\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(true))\r\n    }, [])\r\n\r\n    const addBoard = (title) => {\r\n        newBoard.title = title\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(loadBoards())\r\n    }\r\n\r\n    if (!boards || !boards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const boardListOp = {\r\n        boards,\r\n        addBoard\r\n    }\r\n\r\n    return (\r\n        <div className=\"sub-container taskman-container\">\r\n            <h2>Your Workspace boards</h2>\r\n            <BoardList boardListOp={boardListOp}></BoardList>\r\n        </div >\r\n    )\r\n}\r\n","import { WidgetLoader } from 'react-cloudinary-upload-widget';\r\nimport { useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { BoardDetails } from './pages/BoardDetails';\r\nimport { LandingPage } from './pages/LandingPage';\r\nimport { TaskmanApp } from './pages/TaskmanApp';\r\n\r\nfunction App() {\r\n  const background = useSelector(state => state.boardReducer.background)\r\n  const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App container\" style={!background ? currBoard ? currBoard.background.color ? { backgroundColor: currBoard.background.color } : { backgroundImage: currBoard.background.img ? `url(${currBoard.background.img})` : '' } : { backgroundColor: 'white' } : { backgroundColor: 'white' }}>\r\n        <AppHeader />\r\n        <WidgetLoader />\r\n        <Switch>\r\n          <Route component={BoardDetails} path='/board/:id?' />\r\n          <Route component={TaskmanApp} path='/boards' />\r\n          <Route component={LandingPage} path='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {\r\n  boards: [],\r\n  currBoard: null,\r\n  background: false,\r\n  filterBy: null,\r\n}\r\n\r\nexport function boardReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return {\r\n        ...state,\r\n        boards: action.boards\r\n      }\r\n    case 'SET_BOARD':\r\n      return {\r\n        ...state,\r\n        currBoard: action.board\r\n      }\r\n    case 'ADD_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.board]\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(board => board._id !== action.boardId)\r\n      }\r\n    case 'UPDATE_BOARD':\r\n      const { updatedBoard } = action\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => board._id === updatedBoard._id ? updatedBoard : board)\r\n      }\r\n    case 'UPDATE_BACKGROUND':\r\n      return {\r\n        ...state,\r\n        background: action.background\r\n      }\r\n    case 'UPDATE_FILTERBY':\r\n      return {\r\n        ...state,\r\n        filterBy: action.filterBy\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer';\r\n// import { userReducer } from './reducers/userReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  boardReducer,\r\n  // userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}