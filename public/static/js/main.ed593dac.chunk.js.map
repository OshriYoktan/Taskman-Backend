{"version":3,"sources":["services/http.service.js","services/utilService.js","services/boardService.js","store/actions/boardActions.js","cmps/AppHeader/AppHeader.jsx","cmps/CardPreview/CardPreview.jsx","cmps/LabelEditModal/LabelEditModal.jsx","cmps/LabelModal/LabelModal.jsx","services/socketService.js","cmps/MemberModal/MemberModal.jsx","cmps/CheckListModal/CheckListModal.jsx","cmps/DueDateModal/DueDateModal.jsx","cmps/TaskModal/TaskModal.jsx","assets/imgs/homepage.png","cmps/BoardMenu/BoardMenu.jsx","assets/imgs/taskman-loader.svg","pages/BoardDetails/BoardDetails.jsx","pages/LandingPage/LandingPage.jsx","cmps/BoardPreview/BoardPreview.jsx","cmps/BoardList/BoardList.jsx","pages/TaskmanApp/TaskmanApp.jsx","App.js","reportWebVitals.js","store/reducers/boardReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","filter","term","arr","toLocaleLowerCase","board","name","includes","phone","email","sort","b","debounce","func","timeout","wait","args","later","clearTimeout","setTimeout","KEY","query","getBoardById","deleteBoard","saveBoard","getEmptyBoard","title","members","cards","_id","tasks","activity","background","labels","getEmptyCard","updateCard","taskToUpdate","cardToUpdate","boardToUpdate","taskIdx","findIndex","t","splice","updateBoard","getCloudImages","cloudUrls","getEmptyTask","desc","createdAt","Date","now","dueDate","isWithAttachment","cover","checklists","doneAt","getUsers","gUsers","id","cardIdx","card","loadBoards","filterBy","dispatch","boardService","boards","type","updatedBoard","setCurrBoard","boardId","updateBackground","AppHeader","useDispatch","className","onClick","to","icon","faHome","faUserCircle","CardPreview","props","cardPreviewOp","useForm","register","handleSubmit","currBoard","useSelector","state","boardReducer","useState","setTasks","isAddTask","setIsAddTask","newTask","labelsDescToggle","ev","bool","stopPropagation","setIsDescShown","doneAtToggle","task","addTask","push","newBoard","addActivity","handleOnDragEnd","result","destination","items","Array","from","source","index","reorderedItem","boardToSave","setCurrCard","onChange","cardTitle","defaultValue","placeholder","openCardModal","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","idx","draggableId","setCurrTask","draggableProps","dragHandleProps","isDescShown","label","style","backgroundColor","color","faList","reduce","accTotal","checklist","list","acc","itemInList","isChecked","faCheckSquare","format","withTitle","faClock","member","size","round","faPlus","onSubmit","faTimes","LabelEditModal","labelEditModal","setLabelEditModal","faChevronLeft","setLabelModal","labelName","labelColor","autoComplete","value","LabelModal","useEffect","maxWidth","visibility","addLabel","currTask","find","currLabel","faCheckCircle","editLabel","faPencilAlt","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","MemberModal","setMemberModal","addMemberToTask","chooseMember","currMember","window","CheckListModal","formState","errors","setChecklistModal","newChecklistToSend","range","addChecklist","DueDateModal","timeStemp","React","selectedDate","setSelectedDate","setDueDateModal","selectedDateStr","parse","addDueDate","utils","DateFnsUtils","disableToolbar","variant","margin","date","KeyboardButtonProps","TaskModal","taskModalOp","labelModal","memberModal","checklistModal","dueDateModal","isDesc","setIsDesc","currCard","setRange","rengeToShow","toFixed","fromNow","faAlignLeft","descValue","preventDefault","listIdx","width","item","checked","changeCheckBox","textDecoration","idxInList","input","Object","keys","str","onSubmitItemInList","faTag","faUser","addMember","BoardMenu","boardMenuOp","isAbout","setIsAbout","isBackground","setIsBackground","isFilter","setIsFilter","isLabels","setIsLabels","cloudImgs","setCloudImgs","isAddLabel","setIsAddLabel","setFilterBy","sendFilter","onSearchTask","searchTask","filterTasks","saveLabels","descs","colors","forEach","arrValues","values","arr1","arr2","val","closeMenu","setIsMenu","isMenu","changeBackground","decoding","loading","src","alt","removeIdx","onSearchLabel","required","faPalette","deleteLabel","addBoardLabel","addBoardLabelColor","BoardDetails","newCard","users","isAddCard","setIsAddCard","draggedCards","setDraggedCards","isInvite","setIsInvite","isCardModal","setIsCardModal","x","setX","cardModal","setCardModal","addMembersToBoard","match","closeModal","addNewCard","newCardTitle","removeUserFromBoard","user","boardIdx","newActivity","unshift","loader","clientX","img","failCard","some","labelToRemove","memberToRemove","boardTitle","userToAdd","toLowerCase","faBars","left","top","LandingPage","BoardPreview","backgroundImage","BoardList","boardListOp","isCreateBoard","setIsCreateBoard","addBoard","newBoardTitle","TaskmanApp","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"onBAGMA,EACF,QAGAC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAG0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OAPhD,cAGcM,EAHd,yBASeA,EAAIN,MATnB,sCAWQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACI,KAAIC,UAAY,KAAIA,SAASC,OAbzC,+D,sBC1BO,IAAMC,EAAc,CACzBC,aAOF,SAAsBC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,IAThDM,OAYF,WAGE,IAH4B,IAAdC,EAAa,uDAAJ,GACnBC,EAAM,GACNC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAAOC,EAASE,OAAOT,KAAKE,MAAMF,KAAKG,SAAWI,EAASF,SAE7D,OAAOC,GAjBPI,OAoBF,SAAgBC,EAAMC,GAEpB,OADAD,EAAOA,EAAKE,oBACLD,EAAIF,QAAO,SAAAI,GAChB,OAAOA,EAAMC,KAAKF,oBAAoBG,SAASL,IAC7CG,EAAMG,MAAMJ,oBAAoBG,SAASL,IACzCG,EAAMI,MAAML,oBAAoBG,SAASL,OAxB7CQ,KA4BF,SAAcP,GACZ,OAAOA,EAAIO,MAAK,SAACjC,EAAGkC,GAClB,OAAIlC,EAAE6B,KAAKF,oBAAsBO,EAAEL,KAAKF,qBAC9B,EAEN3B,EAAE6B,KAAKF,oBAAsBO,EAAEL,KAAKF,oBAC/B,EAEF,MAnCTQ,SAuCF,SAAkBC,GAAoB,IAChCC,EADkBC,EAAa,uDAAN,IAE7B,OAAO,WAAoB,IAAD,uBAANC,EAAM,yBAANA,EAAM,gBACxB,IAAMC,EAAQ,WACZC,aAAaJ,GACbD,EAAI,WAAJ,EAAQG,IAEVE,aAAaJ,GACbA,EAAUK,WAAWF,EAAOF,MCjDhC,IAAMK,EAAM,SAEG,GACXC,M,2CACAC,a,4CACAC,Y,4CACAC,U,4CACAC,cAgHJ,WACI,MAAO,CACHC,MAAO,GACPC,QAAS,GACTC,MAAO,CAAC,CAAEC,IAAK1C,EAAYQ,SAAU+B,MAAO,mBAAoBI,MAAO,KACvEC,SAAU,GACVC,WAAY,GACZC,OAAQ,KAtHZC,aA0HJ,WACI,MAAO,CACHL,IAAK1C,EAAYQ,SACjB+B,MAAO,GACPI,MAAO,KA7HXK,WA8EJ,SAAoBC,EAAcC,EAAcC,GAE5C,GAA8B,kBAAlBF,EAA4B,CACpC,IAAMG,EAAUF,EAAaP,MAAMU,WAAU,SAAAC,GAAC,OAAIA,EAAEZ,MAAQO,EAAaP,OACzEQ,EAAaP,MAAMY,OAAOH,EAAS,EAAGH,QAEtCC,EAAaP,MAAMY,OAAON,EAAc,GAE5C,OAAOO,EAAYN,EAAcC,IArFjCK,cACAC,eAoGJ,WACI,OAAOC,GApGPC,aA8HJ,WACI,MAAO,CACHjB,IAAK1C,EAAYQ,SACjB+B,MAAO,GACPqB,KAAM,GACNC,UAAWC,KAAKC,MAChBjB,OAAQ,GACRkB,QAAS,GACTpB,SAAU,GACVJ,QAAS,GACTyB,kBAAkB,EAClBC,MAAO,QACPC,WAAY,GACZC,OAAQ,KA1IZC,SAsGJ,WACI,OAAOC,IApGLZ,EAAY,CACd,oHACA,sHACA,qHACA,sHACA,mHACA,mHACA,uHACA,qHACA,sHACA,yHACA,yHACA,yHACA,mHACA,mHACA,yHACA,qIACA,qHACA,qHACA,wHACA,uHACA,sHACA,oHACA,sHACA,0HACA,0HACA,sHAGEY,EAAS,CACX,CAAE5B,IAAK,OAAQvB,KAAM,cACrB,CAAEuB,IAAK,OAAQvB,KAAM,eACrB,CAAEuB,IAAK,OAAQvB,KAAM,iB,4CAIzB,sBAAA7B,EAAA,+EAEqBJ,EAAgB+C,GAFrC,wEAIQtC,QAAQC,IAAI,OAAZ,MAJR,yD,kEAQA,WAA4B2E,GAA5B,SAAAjF,EAAA,+EAEqBJ,EAAgB+C,EAAMsC,GAF3C,wEAIQ5E,QAAQC,IAAI,OAAZ,MAJR,yD,kEAQA,WAA2B2E,GAA3B,SAAAjF,EAAA,+EAEqBJ,EAAmB+C,EAAMsC,GAF9C,wEAIQ5E,QAAQC,IAAI,6BAAZ,MAJR,yD,kEAQA,WAAyBsB,GAAzB,SAAA5B,EAAA,mEAEY4B,EAAMwB,IAFlB,gCAEoCxD,EAAgB+C,EAAMf,EAAMwB,IAAKxB,GAFrE,+DAGqBhC,EAAiB+C,EAAKf,GAH3C,0EAKQvB,QAAQC,IAAI,OAAZ,MALR,2D,sBAsBA,SAAS4D,EAAYN,EAAcC,GAC/B,GAA8B,kBAAlBD,EAA4B,CACpC,IAAMsB,EAAUrB,EAAcV,MAAMY,WAAU,SAAAoB,GAAI,OAAIA,EAAK/B,MAAQQ,EAAaR,OAChFS,EAAcV,MAAMc,OAAOiB,EAAS,EAAGtB,QAEvCC,EAAcV,MAAMc,OAAOL,EAAc,GAG7C,OADkB,2BAAQC,GAAR,IAAuBV,MAAM,YAAKU,EAAcV,SC1G/D,SAASiC,EAAWC,GACzB,8CAAO,WAAMC,GAAN,eAAAtF,EAAA,sEACgBuF,EAAa3C,MAAMyC,GADnC,OACCG,EADD,OAGLF,EADe,CAAEG,KAAM,aAAcD,WAFhC,2CAAP,sDAaK,SAASzC,EAAUnB,GACxB,8CAAO,WAAM0D,GAAN,eAAAtF,EAAA,sEACsBuF,EAAaxC,UAAUnB,GAD7C,UACC8D,EADD,OAEA9D,EAAMwB,IAFN,yCAEkBkC,EAAS,CAAEG,KAAM,YAAa7D,MAAO8D,KAFvD,gCAGOJ,EAAS,CAAEG,KAAM,eAAgBC,kBAHxC,2CAAP,sDAMK,SAASC,EAAaC,GAC3B,8CAAO,WAAMN,GAAN,eAAAtF,EAAA,sEACeuF,EAAa1C,aAAa+C,GADzC,OACChE,EADD,OAEL0D,EAAS,CAAEG,KAAM,YAAa7D,UAFzB,2CAAP,sDAWK,SAASiE,EAAiBtC,GAC/B,8CAAO,WAAM+B,GAAN,SAAAtF,EAAA,sDACLsF,EAAS,CAAEG,KAAM,oBAAqBlC,eADjC,2CAAP,sD,WC7BK,SAASuC,IACZ,IAAMR,EAAWS,cAEjB,OACI,sBAAKC,UAAU,2BAAf,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOC,QAAS,kBAAMX,EAASO,GAAiB,KAAQK,GAAG,IAA3E,SAA+E,cAAC,IAAD,CAAiBC,KAAMC,QACtG,cAAC,IAAD,CAAMJ,UAAU,OAAOC,QAAS,kBAAMX,EAASO,GAAiB,KAAQK,GAAG,IAA3E,qBACA,cAAC,IAAD,CAAMF,UAAU,OAAOC,QAAS,kBAAMX,EAASO,GAAiB,KAAQK,GAAG,IAA3E,SAA+E,cAAC,IAAD,CAAiBC,KAAME,W,6DCD3G,SAASC,EAAYC,GACxB,IAAQpB,EAAwBoB,EAAxBpB,KAAMqB,EAAkBD,EAAlBC,cACRlB,EAAWS,cACjB,EAAmCU,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACZC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aAC1D,EAA0BI,mBAAS7B,EAAK9B,OAAxC,mBAAOA,EAAP,KAAc4D,EAAd,KACA,EAAkCD,mBAAS,MAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACIC,EAAU7B,EAAalB,eAQrBgD,EAAmB,SAACC,EAAIC,GAC1BD,EAAGE,kBACHhB,EAAciB,eAAeF,GAC7BjC,EAASK,EAAaiB,EAAUxD,OAE9BsE,EAAe,SAACJ,EAAIK,GACtBtH,QAAQC,IAAI,QAASqH,GACrBL,EAAGE,kBACEG,EAAK7C,OACL6C,EAAK7C,OAAS,GADD6C,EAAK7C,OAASN,KAAKC,MAErCa,EAASK,EAAaiB,EAAUxD,OAE9BwE,EAAO,uCAAG,WAAM9H,GAAN,eAAAE,EAAA,sDACZoH,EAAQnE,MAAQnD,EAAKsH,QACrB/D,EAAMwE,KAAKT,GACXH,EAAS5D,GACHyE,EAAWvC,EAAa7B,WAAW0D,EAASjC,EAAMyB,GACxDtB,EAASvC,EAAU+E,IACnBxC,EAASK,EAAaiB,EAAUxD,MAChCgE,EAAU7B,EAAalB,eACvB8C,GAAcD,GACdpH,EAAKsH,QAAU,GACfZ,EAAcuB,YAAY,aAAc,QAAS,OAAQ5C,EAAKlC,OAVlD,4CAAH,sDAaP+E,EAAe,uCAAG,WAAOC,GAAP,uBAAAjI,EAAA,yDACfiI,EAAOC,YADQ,wDAEdC,EAAQC,MAAMC,KAAKhF,GAFL,EAGI8E,EAAMlE,OAAOgE,EAAOK,OAAOC,MAAO,GAHtC,mBAGbC,EAHa,KAIpBL,EAAMlE,OAAOgE,EAAOC,YAAYK,MAAO,EAAGC,GAC1CrD,EAAK9B,MAAQ8E,EACblB,EAAS9B,EAAK9B,OANM,SAOMkC,EAAarB,YAAYiB,EAAMyB,GAPrC,OAOd6B,EAPc,OAQpBnD,EAASvC,EAAU0F,IACnBnD,EAASK,EAAaiB,EAAUxD,MATZ,4CAAH,sDAWrB,OACI,qBAAK4C,UAAU,aAAaC,QAAS,kBAAMO,EAAckC,YAAYvD,IAArE,SACI,sBAAKa,UAAU,gBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sBAAM2C,SAAUhC,GA9CX,SAAA7G,GACjBqF,EAAKlC,MAAQnD,EAAK8I,UAClB,IAAM/E,EAAgB0B,EAAarB,YAAYiB,EAAMyB,GACrDtB,EAASvC,EAAUc,OA2CP,SACI,+CAAO4B,KAAK,QAAWiB,EAAS,cAAhC,IAA8CmC,aAAc1D,EAAKlC,MAAO6F,YAAY,iBAExF,qBAAK7C,QAAS,SAACqB,GAAD,OAAQd,EAAcuC,cAAczB,EAAInC,IAAOa,UAAU,cAAvE,SAAqF,4CAEzF,cAAC,IAAD,CAAiBgD,UAAWhB,EAA5B,SACI,cAAC,IAAD,CAAWiB,YAAY,QAAvB,SACK,SAACC,GAAD,OACG,+CAAQA,EAASC,gBAAjB,IAAiCC,IAAKF,EAASG,SAAUrD,UAAU,kBAAnE,UACK3C,EAAMiG,KAAI,SAAC3B,EAAM4B,GACd,OACI,cAAC,IAAD,CAA0BC,YAAa7B,EAAKvE,IAAKmF,MAAOgB,EAAxD,SACK,SAACL,GAAD,OACG,yDAAIjD,QAAS,kBAAMO,EAAciD,YAAY9B,KAA0BuB,EAASQ,gBAAoBR,EAASS,iBAA7G,IAA8HP,IAAKF,EAASG,SAAUrD,UAAU,YAAhK,UACI,sBAAKA,UAAU,mCAAf,WACMQ,EAAcoD,aAAejC,EAAKnE,OAAO8F,KAAI,SAACO,EAAON,GAAR,OAAgB,uBAAiBvD,UAAU,yBAAyB8D,MAAO,CAAEC,gBAAgB,GAAD,OAAKF,EAAMG,QAAW/D,QAAS,SAACqB,GAAD,OAAQD,EAAiBC,GAAI,KAA5HiC,MAC1E/C,EAAcoD,aAAejC,EAAKnE,OAAO8F,KAAI,SAACO,EAAON,GAAR,OAAgB,uBAAiBvD,UAAU,8BAA8B8D,MAAO,CAAEC,gBAAgB,GAAD,OAAKF,EAAMG,QAAW/D,QAAS,SAACqB,GAAD,OAAQD,EAAiBC,GAAI,IAA7I,SAAsJuC,EAAMvF,MAAhJiF,SAE9E,+BAAO5B,EAAK1E,QACZ,0BAAS+C,UAAU,sBAAnB,UACM2B,EAAK9C,WAAW1D,OACd,8BAAG,cAAC,IAAD,CAAiBgF,KAAM8D,MACrBtC,EAAK9C,WAAWqF,QAAO,SAACC,EAAUC,GAC/B,OAAOD,EAAWC,EAAUC,KAAKH,QAAO,SAACI,EAAKC,GAAN,OAAqBA,EAAWC,UAAYF,IAAK,KAC1F,GAHP,IAIH3C,EAAK9C,WAAWqF,QAAO,SAACI,EAAKF,GAAN,OAAoBA,EAAUC,KAAKlJ,OAASmJ,IAAK,MAL9C,KAQzB3C,EAAKjD,QAAkBiD,EAAK7C,OAE1B,sBAAKkB,UAAU,sBAAsBC,QAAS,SAACqB,GAAD,OAAQI,EAAaJ,EAAIK,IAAvE,UAA8E,cAAC,IAAD,CAAiBxB,KAAMsE,MAAiB,cAAC,IAAD,CAAQzE,UAAU,sBAAsB0E,OAAO,QAAQC,WAAS,EAAhE,SAAkEhD,EAAKjD,aAD7L,sBAAKsB,UAAU,sBAAsBC,QAAS,SAACqB,GAAD,OAAQI,EAAaJ,EAAIK,IAAvE,UAA8E,cAAC,IAAD,CAAiBxB,KAAMyE,MAAW,cAAC,IAAD,CAAQ5E,UAAU,sBAAsB0E,OAAO,QAAQC,WAAS,EAAhE,SAAkEhD,EAAKjD,aAD1K,KAGfiD,EAAKzE,QAAQ/B,OAAgB,8BAC1BwG,EAAKzE,QAAQoG,KAAI,SAACuB,EAAQtB,GAAT,OAAiB,cAAC,IAAD,CAAkB1H,KAAMgJ,EAAOhJ,KAAMiJ,KAAK,KAAKC,OAAO,GAAzCxB,QAD5B,WAlByB5B,EAAKvE,OAFtDuE,EAAKvE,QA0BzB8F,EAASJ,sBAI3B5B,GAAa,yBAAQlB,UAAU,eAAeC,QAAS,kBAAMkB,GAAcD,IAA9D,UAA0E,cAAC,IAAD,CAAiBf,KAAM6E,MAAjG,eACd9D,GAAa,sBAAKlB,UAAU,qBAAf,UAAoC,uBAAMiF,SAAUtE,EAAaiB,GAA7B,UAC9C,kDAAUnC,KAAK,OAAOR,GAAG,QAAQpD,KAAK,SAAY6E,EAAS,YAA3D,IAAuEoC,YAAY,YAAYD,aAAczB,EAAQnE,SACrH,iDAEA,mBAAGgD,QAAS,kBAAMkB,GAAcD,IAAhC,SAA4C,cAAC,IAAD,CAAiBlB,UAAU,KAAKG,KAAM+E,gB,qBC7G/F,SAASC,EAAe5E,GAC3B,IAAQ6E,EAAmB7E,EAAnB6E,eACR,EAAmC3E,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAOlB,OACI,sBAAKX,UAAU,mBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,wBAAQC,QAAS,kBAAMM,EAAM8E,mBAAkB,IAA/C,SAAuD,cAAC,IAAD,CAAiBlF,KAAMmF,QAC9E,6CACA,mBAAGtF,UAAU,iBAAiBC,QAAS,kBAAMM,EAAMgF,eAAc,IAAjE,SAAyE,cAAC,IAAD,CAAiBvF,UAAU,KAAKG,KAAM+E,WAEnH,qBAAKlF,UAAU,qBAAf,SACI,uBAAM2C,SAAUhC,GAAa,SAAAvG,GAAG,OAbjBN,EAauCM,EAZ9DgL,EAAe9G,KAAOxE,EAAK0L,UAC3BJ,EAAepB,MAAQlK,EAAK2L,gBAC5BlF,EAAMgF,cAAcH,GAHE,IAACtL,KAaf,UACI,sCACA,mCAAO2F,KAAK,OAAO5D,KAAK,YAAY6J,aAAa,MAAMC,MAAOP,EAAe9G,MAAUoC,EAAS,eAChG,uCACA,mCAAOjB,KAAK,QAAQ5D,KAAK,aAAa8J,MAAOP,EAAepB,OAAWtD,EAAS,wB,OChB7F,SAASkF,EAAWrF,GACvB,MAA4CS,mBAAS,MAArD,mBAAOoE,EAAP,KAAuBC,EAAvB,KAEM7H,EADYqD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aACjCpD,OA6BzB,OAdAqI,qBAAU,eAeN,oCAGO,sBAAK7F,UAAU,cAAc8D,MAAQsB,EAA2C,CAAEU,SAAU,EAAGC,WAAY,WAArD,CAAED,SAAU,QAAlE,UACC,sBAAK9F,UAAU,sBAAf,UACI,wCACA,mBAAGA,UAAU,iBAAiBC,QAAS,kBAAMM,EAAMgF,eAAc,IAAjE,SAAyE,cAAC,IAAD,CAAiBvF,UAAU,KAAKG,KAAM+E,WAEnH,oBAAIlF,UAAU,kBAAd,SACKxC,EAAO8F,KAAI,SAACO,EAAON,GAChB,OAAO,qBAAItD,QAAS,kBAlCnB+D,EAkCqCH,OAjCtDtD,EAAMyF,SAAShC,GADC,IAACA,GAkCM,UACH,sBAAKhE,UAAU,gBAAgB8D,MAAO,CAAEC,gBAAgB,GAAD,OAAKF,EAAMG,QAAlE,UACI,+BAAOH,EAAMvF,OACb,+BAAQiC,EAAM0F,SAASzI,OAAO0I,MAAK,SAACC,GAAD,OAAeA,EAAUnC,QAAUH,EAAMG,SAAS,cAAC,IAAD,CAAiBhE,UAAU,KAAKG,KAAMiG,MAAoB,UAEnJ,wBAAQpG,UAAU,iBAAiBC,QAAS,SAACqB,GAAD,OAlClD,SAACA,EAAIuC,GACnBvC,EAAGE,kBACH6D,EAAkBxB,GAgCsDwC,CAAU/E,EAAIuC,IAAlE,SAA0E,cAAC,IAAD,CAAiB1D,KAAMmG,UALlD/C,WAU7D6B,GAAkB,cAAC,EAAD,CAAgBG,cAAehF,EAAMgF,cAAeH,eAAgBA,EAAgBC,kBAAmBA,EAAmBW,SAAUzF,EAAMyF,c,6BC5D7JO,EAIb,WACI,IAAIC,EACED,EAAgB,CAElBE,MAFkB,WAGdD,EAASE,IAVqC,IAW9CrM,QAAQC,IAAI,qBAEhBqM,GANkB,SAMfC,EAAWC,GACVxM,QAAQC,IAAI,4BAA6BsM,GACpCJ,GAAQD,EAAcE,QAC3BD,EAAOG,GAAGC,EAAWC,IAEzBC,IAXkB,SAWdF,GAAuB,IAAZC,EAAW,uDAAN,KACXL,GAAQD,EAAcE,QACtBI,EACAL,EAAOM,IAAIF,EAAWC,GADlBL,EAAOO,mBAAmBH,IAGvCI,KAhBkB,SAgBbJ,EAAW9M,GACZO,QAAQC,IAAI,2BAA4BsM,GACnCJ,GAAQD,EAAcE,QAC3BD,EAAOQ,KAAKJ,EAAW9M,IAE3BmN,UArBkB,WAsBdT,EAAS,OAGjB,OAAOD,EA/BkBW,GCOtB,SAASC,GAAY5G,GAUxBsF,qBAAU,WACNU,EAAcI,GAAG,gCAAiC,WAC9CtM,QAAQC,IAAI,gBAKpB,IAAIsG,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aACxD,OACI,sBAAKZ,UAAU,eAAe8D,MAAc,CAAEgC,SAAU,QAAxD,UACI,sBAAK9F,UAAU,sBAAf,UACI,yCACA,mBAAGA,UAAU,iBAAiBC,QAAS,kBAAMM,EAAM6G,gBAAe,IAAlE,SAA0E,cAAC,IAAD,CAAiBpH,UAAU,KAAKG,KAAM+E,WAEpH,oBAAIlF,UAAU,mBAAd,SACKY,EAAU1D,QAAQoG,KAAI,SAACuB,EAAQtB,GAC5B,OAAO,qBAAItD,QAAS,kBAzBf,SAAC4E,GAElBtE,EAAM8G,gBAAgBxC,GAuBgByC,CAAazC,IAAhC,UACH,sBAAK7E,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBnE,KAAMgJ,EAAOhJ,KAAMiJ,KAAK,KAAKC,OAAO,GAAzCxB,GACb,+BAAQsB,EAAOhJ,UAEnB,+BAAS0E,EAAM0F,SAAS/I,QAAQgJ,MAAK,SAACqB,GAAD,OAAgBA,EAAWnK,MAAQyH,EAAOzH,OAAO,cAAC,IAAD,CAAiB+C,KAAMiG,IAAvB,eAA4D,SALjG7C,WD/BzEiE,OAAOjB,cAAgBA,E,OEEhB,SAASkB,GAAelH,GAC3B,MAA0DE,cAAlDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAlB,EAAgC+G,UAAaC,OAM7C,OACI,sBAAK3H,UAAU,kBAAf,UACI,0BAASA,UAAU,yBAAnB,UACI,+CACA,mBAAGA,UAAU,iBAAiBC,QAAS,kBAAMM,EAAMqH,mBAAkB,IAArE,SAA6E,cAAC,IAAD,CAAiB5H,UAAU,KAAKG,KAAM+E,WAEvH,uBAAMlF,UAAU,uBAAuBiF,SAAUtE,GAXxC,SAAA7G,GACb,IAAM+N,EAAqB,CAAE5K,MAAOnD,EAAKmD,MAAOoH,KAAM,GAAIyD,MAAO,GACjEvH,EAAMwH,aAAaF,GACnBtH,EAAMqH,mBAAkB,MAQpB,UACI,0CACA,+CAAOnI,KAAK,OAAOiG,aAAa,MAAMzG,GAAG,QAAQpD,KAAK,SAAa6E,EAAS,UAA5E,IAAsFmC,aAAa,MACnG,+C,wCCdT,SAASmF,GAAazH,GACzB,IAAM0H,EAAYzJ,KAAKC,MAAQ,OAE/B,GADwB,IAAID,KAAKA,KAAKC,MAAQ,QACNyJ,IAAMlH,SAASiH,IAAvD,mBAAOE,EAAP,KAAqBC,EAArB,KAQA,OACI,sBAAKpI,UAAU,iBAAf,UACI,0BAASA,UAAU,wBAAnB,UACI,0CACA,mBAAGA,UAAU,iBAAiBC,QAAS,kBAAMM,EAAM8H,iBAAgB,IAAnE,SAA2E,cAAC,IAAD,CAAiBrI,UAAU,KAAKG,KAAM+E,WAErH,uBAAMD,SAZC,WACX,IAAIqD,EAAkB9J,KAAK+J,MAAMJ,GACjC5H,EAAMiI,WAAWF,GACjB/H,EAAM8H,iBAAgB,IASlB,UACI,cAAC,KAAD,CAAyBI,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,gBAAc,EACdC,QAAQ,SACRlE,OAAO,aACPmE,OAAO,SACP5J,GAAG,qBACH4E,MAAM,kBACN8B,MAAOwC,EACPxF,SAAU,SAACmG,GAAD,OAAUV,EAAgBU,IACpCC,oBAAqB,CAAE,aAAc,mBAG7C,gDCzBT,SAASC,GAAUzI,GACtB,IAAQ0I,EAAgB1I,EAAhB0I,YACAhD,EAAagD,EAAbhD,SACF3G,EAAWS,cACjB,EAAmCU,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAClB,EAAoCK,oBAAS,GAA7C,mBAAOkI,EAAP,KAAmB3D,EAAnB,KACA,EAAsCvE,oBAAS,GAA/C,mBAAOmI,EAAP,KAAoB/B,EAApB,KACA,EAA4CpG,oBAAS,GAArD,mBAAOoI,EAAP,KAAuBxB,EAAvB,KACA,EAAwC5G,oBAAS,GAAjD,mBAAOqI,EAAP,KAAqBhB,EAArB,KACA,EAA4BrH,oBAAS,GAArC,mBAAOsI,EAAP,KAAeC,EAAf,KAGI3I,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aAElD4I,EAAW5I,EAAUzD,MAAM+I,MAAK,SAAA/G,GAClC,OAAOA,EAAK9B,MAAM6I,MAAK,SAAAlI,GACnB,OAAOA,EAAEZ,MAAQ6I,EAAS7I,UAyB5BqM,EAAW,SAAArF,GACb,IAGMsF,IAHetF,EAAUC,KAAKH,QAAO,SAACI,EAAKC,GAC7C,OAAOA,EAAWC,UAAYF,IAC/B,GACmCF,EAAUC,KAAKlJ,OAAS,KAAKwO,QAAQ,GAC3EvF,EAAU0D,MAAQ4B,EAClBxL,EAAY+H,IAEV/H,EAAc,SAAAyD,GAChB,IAAMjC,EAAeH,EAAa7B,WAAWiE,EAAM6H,EAAU5I,GAC7DtB,EAASvC,EAAU2C,IACnBJ,EAASK,EAAaiB,EAAUxD,OAGpC,OACI,sBAAK4C,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,aAAf,UACI,6BAAKiG,EAAShJ,QACd,0CAAauM,EAASvM,MAAtB,YAGR,sBAAK+C,UAAU,yBAAf,UACMiG,EAASvH,QAAiB,0BAASuB,QA9B9B,WACdgG,EAASnH,OACTmH,EAASnH,OAAS,GADDmH,EAASnH,OAASN,KAAKC,MAE7CP,EAAY+H,IA2B4B,UACxB,uBAAMjG,UAAU,kBAAhB,UAAoCiG,EAASnH,OAA8C,cAAC,IAAD,CAAiBqB,KAAMsE,MAA5D,cAAC,IAAD,CAAiBtE,KAAMyE,MAA7E,IAAqI,cAAC,IAAD,CAAQgF,SAAO,EAAf,SAAiB3D,EAASvH,aAE/J,cAAC,IAAD,CAAQgG,OAAO,aAAaC,WAAS,EAArC,SAAuCsB,EAASvH,aAH/B,KAKnBuH,EAASzI,OAAOrC,OAAgB,oCAAS,wCACtC8K,EAASzI,OAAO8F,KAAI,SAACO,EAAON,GAAR,OACjB,qBAAKvD,UAAU,iBAA2B8D,MAAO,CAAEC,gBAAiBF,EAAMG,OAA1E,SACI,4BAAIH,EAAMvF,QADuBiF,MAGzC,wBAAQtD,QAAS,kBAAMsF,GAAc,IAArC,mBALuB,KAOzBU,EAAS/I,QAAQ/B,OAAgB,oCAAS,yCACxC,sBAAK6E,UAAU,cAAf,UACKiG,EAAS/I,QAAQoG,KAAI,SAACuB,EAAQtB,GAAT,OAClB,qBAAKvD,UAAU,kBAAf,SACI,cAAC,IAAD,CAAkBnE,KAAMgJ,EAAOhJ,KAAMiJ,KAAK,KAAKC,OAAO,GAAzCxB,IADqBA,MAG1C,wBAAQtD,QAAS,kBAAMmH,GAAe,IAAtC,qBANoB,KAU5B,sBAAKpH,UAAU,WAAf,UAA0B,cAAC,IAAD,CAAiBG,KAAM0J,MAC7C,gDAEJ,kDAAU5K,GAAG,OAAOpD,KAAK,OAAOoE,QAAS,kBAAMsJ,GAAWD,IAASzG,aA/E/EiH,UA+EwGhH,YAAY,oCAAuCpC,EAAS,SAAxJ,IAAiKmC,aAAcoG,EAAYhD,SAAS3H,QACnMgL,GAAU,sBAAKtJ,UAAU,WAAf,UAA0B,wBAAQC,QAAS,SAACqB,GAASA,EAAGyI,iBAAkBR,GAAWD,IAA3D,kBAA1B,IAA+G,wBAAQrJ,QAAS,kBAAMsJ,GAAU,IAAjC,eAA/G,UAEbtD,EAASpH,WAAW1D,OAAgB,kCACjC8K,EAASpH,WAAWyE,KAAI,SAACc,EAAW4F,GAAZ,OACrB,sBAAKhK,UAAU,qBAAf,UACI,sBAAKA,UAAU,gBAAf,cAAgC,sBAAKA,UAAU,OAAf,cAAuB,cAAC,IAAD,CAAiBG,KAAM8D,MAA9C,IAA0E,4BAAIG,EAAUnH,WACpH,wBAAQgD,QAAS,kBAAMgJ,EAAYlB,aAAaiC,IAAhD,4BAEF5F,EAAUC,KAAKlJ,OAAgB,qBAAK6E,UAAU,uBAAf,SAC7B,qBAAKA,UAAU,qBAAqB8D,MAAO,CAAEmG,MAAO7F,EAAU0D,MAAQ,SADhD,KAGxB1D,EAAUC,KAAKlJ,OAAgB,iCAAOiJ,EAAU0D,MAAjB,OAAP,KACxB1D,EAAUC,KAAKlJ,OAAgBiJ,EAAUC,KAAKf,KAAI,SAAC4G,EAAM3G,GACvD,OAAO,sBAAKvD,UAAU,kBAAf,UACH,uBAAOP,KAAK,WAAWR,GAAI,kBAAoBsE,EAAK4G,QAASD,EAAK1F,UAAW7B,SAAU,YA1EhG,SAACuH,GACpBA,EAAK1F,WAAa0F,EAAK1F,UACvBtG,EAAY+H,GAyEoBmE,CAAeF,GACfT,EAASrF,MAEZ8F,EAAK1F,UAAY,uBAAOV,MAAO,CAAEuG,eAAgB,gBAAhC,SAAmDH,EAAK5L,OAAgB,gCAAQ4L,EAAK5L,SAL9DiF,MADvB,KAS1B,uBAAM0B,SAAUtE,GAAa,SAAAvG,GAAG,OAvF7B,SAACN,EAAMwQ,GAC9B,IAAMC,EAAQC,OAAOC,KAAK3Q,GAAMoM,MAAK,SAAAwE,GAAG,OAAIA,IAAS,YAAcJ,KACnErE,EAASpH,WAAWyL,GAAWjG,KAAKxC,KAAK,CAAEvD,KAAMxE,EAAKyQ,GAAQ/F,WAAW,IACzEiF,EAASxD,EAASpH,WAAWyL,IAoF2BK,CAAmBvQ,EAAK4P,MAA5D,UACI,mCAAOvK,KAAK,OAAOiG,aAAa,MAAMzG,GAAI,cAAgB+K,EAASnO,KAAK,OAAOiH,YAAY,eAAmBpC,EAAS,YAAcsJ,KACrI,sDAnBiCA,QAFlB,KA0B/B,sBAAKhK,UAAU,eAAf,UACI,gDACA,+CAAOP,KAAK,OAAOiG,aAAa,MAAMzG,GAAG,UAAUpD,KAAK,UAAUiH,YAAY,sBAA0BpC,EAAS,aAAjH,IAA8HmC,aAAcoD,EAAS3I,kBAG7J,sBAAK0C,UAAU,cAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,8CACA,mBAAGC,QAAS,kBAAMgJ,EAAYxF,YAAY,OAAOzD,UAAU,iBAA3D,SAA4E,cAAC,IAAD,CAAiBA,UAAU,KAAKG,KAAM+E,WAEtH,sBAAKlF,UAAU,wBAAf,UACI,sBAAKC,QAAS,kBAAMsF,GAAc,IAAOvF,UAAU,iBAAnD,UACI,cAAC,IAAD,CAAiBG,KAAMyK,MACvB,4CAEJ,sBAAK3K,QAAS,kBAAMmH,GAAe,IAAOpH,UAAU,iBAApD,UACI,cAAC,IAAD,CAAiBG,KAAM0K,MACvB,6CAEJ,sBAAK5K,QAAS,kBAAM2H,GAAkB,IAAO5H,UAAU,iBAAvD,UACI,cAAC,IAAD,CAAiBG,KAAM8D,MACvB,+CAEJ,sBAAKhE,QAAS,kBAAMoI,GAAgB,IAAOrI,UAAU,iBAArD,UACI,cAAC,IAAD,CAAiBG,KAAMyE,MACvB,oDAITsE,EAAqB,cAAC,EAAD,CAAY3D,cAAeA,EAAe2D,WAAYA,EAAYjD,SAAUA,EAAUD,SAAUiD,EAAYjD,WAAnH,KACdmD,EAAsB,cAAC,GAAD,CAAa/B,eAAgBA,EAAgB+B,YAAaA,EAAalD,SAAUA,EAAUoB,gBAAiB4B,EAAY6B,YAA/H,KACf1B,EAAyB,cAAC,GAAD,CAAgBxB,kBAAmBA,EAAmBwB,eAAgBA,EAAgBnD,SAAUA,EAAU8B,aAAckB,EAAYlB,eAA3I,KAClBsB,EAAuB,cAAC,GAAD,CAAchB,gBAAiBA,EAAiBgB,aAAcA,EAAcb,WAAYS,EAAYT,WAAYvC,SAAUA,IAAjI,Q,OCtKhB,ICaR,SAAS8E,GAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAClB1L,EAAWS,cACjB,EAAmCU,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACZC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aAC1D,EAA8BI,oBAAS,GAAvC,mBAAOiK,EAAP,KAAgBC,EAAhB,KACA,EAAwClK,oBAAS,GAAjD,mBAAOmK,EAAP,KAAqBC,EAArB,KACA,EAAgCpK,oBAAS,GAAzC,mBAAOqK,EAAP,KAAiBC,EAAjB,KACA,EAAgCtK,oBAAS,GAAzC,mBAAOuK,EAAP,KAAiBC,EAAjB,KACA,EAAkCxK,mBAAS,MAA3C,mBAAOyK,EAAP,KAAkBC,EAAlB,KACA,EAAoC1K,oBAAS,GAA7C,mBAAO2K,EAAP,KAAmBC,EAAnB,KACA,EAAgC5K,mBAAS,CAAEW,KAAM,GAAInE,OAAQ,KAA7D,mBAAO6B,EAAP,KAAiBwM,EAAjB,KAGAhG,qBAAU,WACN6F,EAAanM,EAAapB,kBAC1B2N,MACD,CAACzM,IAEJ,IAAM0M,EAAe,SAAAjS,GACjB+R,EAAY,2BAAKxM,GAAN,IAAgBsC,KAAM7H,EAAKkS,eAYpCF,EAAa,WACfd,EAAYiB,YAAY5M,IAGtB6M,EAAa,SAAApS,GACf,IAAMqS,EAAQ,GACRC,EAAS,GACf5B,OAAOC,KAAK3Q,GAAMuS,SAAQ,SAAA9B,GAClBA,EAAMzO,SAAS,uBAAwBsQ,EAAOvK,KAAK0I,GAC9CA,EAAMzO,SAAS,mBAAmBqQ,EAAMtK,KAAK0I,MAE1D,IAAM+B,EAAY9B,OAAO+B,OAAOzS,GAChCwS,EAAUrO,OAAO,EAAG,GACpB,IAAMuO,EAAO,GACPC,EAAO,GACbH,EAAUD,SAAQ,SAACK,EAAKnJ,GAChBA,EAAM,IAAM,EAAGiJ,EAAK3K,KAAK6K,GACxBD,EAAK5K,KAAK6K,MAEnB,IAAMlP,EAASgP,EAAKlJ,KAAI,SAACoJ,EAAKnJ,GAC1B,MAAO,CAAEjF,KAAMkO,EAAKjJ,GAAMS,MAAOyI,EAAKlJ,OAE1CjE,EAASvC,EAAU,2BAAK6D,GAAN,IAAiBpD,OAAQA,MAC3Cd,YAAW,kBAAM4C,EAASK,EAAaiB,EAAUxD,QAAO,MAkBtDuP,EAAY,WACd3B,EAAY4B,WAAU,GACtB1B,GAAW,GACXE,GAAgB,GAChBE,GAAY,GACZE,GAAY,GACZO,EAAa,KAGjB,OAAKN,GAAc7K,EAGf,0BAASZ,UAAU,kBAAkB8D,MAAOkH,EAAY6B,OAAS,CAAE/G,SAAU,QAAc,CAAEA,SAAU,GAAvG,UACI,0BAAS9F,UAAU,YAAnB,UACI,sBAAKA,UAAU,OAAf,UACI,sCACA,mBAAGC,QAAS0M,EAAZ,SAAuB,cAAC,IAAD,CAAiB3M,UAAU,KAAKG,KAAM+E,WAEjE,sBAAKlF,UAAU,OAAf,UACI,mBAAGC,QAAS,kBAAMiL,GAAYD,IAA9B,8BACA,mBAAGhL,QAAS,kBAAMmL,GAAiBD,IAAnC,wBACA,mBAAGlL,QAAS,kBAAMqL,GAAaD,IAA/B,0BACA,mBAAGpL,QAAS,kBAAMuL,GAAaD,IAA/B,uBAEJ,sBAAKvL,UAAU,qBAAf,UACI,0CACA,+BACKY,EAAUtD,SAASnC,QAAUyF,EAAUtD,SAASgG,KAAI,SAAAhG,GAAQ,OAAI,+BAC1C,aAAlBA,EAASmC,KAAsB,8BAAG,+BAAOnC,EAASuH,SAAnB,IAAmCvH,EAASmC,KAA5C,IAAmDnC,EAASgB,KAA5D,IAAqF,YAAlBhB,EAASmC,KAAqB,OAAS,KAA1G,IAAgH,+BAAOnC,EAAS6B,OAA+B,UAAlB7B,EAAS6B,KAAmB,GAAK,QAA9K,OAC1B,8BAAG,+BAAO7B,EAASuH,SAAnB,IAAmCvH,EAASmC,KAA5C,IAAqE,YAAlBnC,EAASmC,KAAqB,OAAS,KAA1F,IAAgG,+BAAOnC,EAAS6B,OAAhH,YACN,gCAAO,cAAC,IAAD,CAAQyK,SAAO,EAAf,SAAiBtM,EAASiB,gBAHqCjB,EAASF,SAWjFwD,EAAUtD,SAASnC,QAAU,6BAAI,gEAI/C,0BAAS6E,UAAU,sBAAsB8D,MAAOmH,EAAU,CAAEnF,SAAU,QAAc,CAAEA,SAAU,GAAhG,UACI,sBAAK9F,UAAU,OAAf,UACI,mBAAGC,QAAS,kBAAMiL,GAAYD,IAA9B,SAAwC,cAAC,IAAD,CAAiBjL,UAAU,KAAKG,KAAMmF,QAC9E,kDACA,mBAAGrF,QAAS0M,EAAZ,SAAuB,cAAC,IAAD,CAAiB3M,UAAU,KAAKG,KAAM+E,WAEjE,sBAAKlF,UAAU,OAAf,UACI,yCACA,8BAAMgL,EAAY9N,QAAQoG,KAAI,SAACuB,EAAQtB,GAAT,OAAiB,cAAC,IAAD,CAAkB1H,KAAMgJ,EAAOhJ,KAAMiJ,KAAK,KAAKC,OAAO,GAAzCxB,WAEhE,sBAAKvD,UAAU,OAAf,UACI,6CACA,0BAAU8C,YAAY,+BAE1B,qBAAK9C,UAAU,OAAf,SACI,iDAGR,0BAASA,UAAU,2BAA2B8D,MAAOqH,EAAe,CAAErF,SAAU,QAAc,CAAEA,SAAU,GAA1G,UACI,sBAAK9F,UAAU,OAAf,UACI,mBAAGC,QAAS,kBAAMmL,GAAiBD,IAAnC,SAAkD,cAAC,IAAD,CAAiBnL,UAAU,KAAKG,KAAMmF,QACxF,mDACA,mBAAGrF,QAAS0M,EAAZ,SAAuB,cAAC,IAAD,CAAiB3M,UAAU,KAAKG,KAAM+E,WAEjE,sBAAKlF,UAAU,qBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,wCACA,qBAAKA,UAAU,OAAf,SAlIL,CAAC,aAAc,cAAe,YAAa,SAAU,YAAa,YAAa,YAAa,SAmI3EsD,KAAI,SAACU,EAAOT,GAAR,OAAgB,uBAAiBO,MAAO,CAAEC,gBAAiBC,GAAS/D,QAAS,kBAAM+K,EAAY8B,iBAAiB9I,GAAO,KAA3FT,WAGhD,sBAAKvD,UAAU,OAAf,UACI,wCACA,qBAAKA,UAAU,OAAf,SACKyL,EAAUnI,KAAI,SAACpJ,EAAKqJ,GAAN,OAAc,qBAAetD,QAAS,kBAAM+K,EAAY8B,iBAAiB5S,IAAM6S,SAAS,QAAQC,QAAQ,OAAOC,IAAK/S,EAAKgT,IAAKhT,GAAtGqJ,iBAKvD,0BAASvD,UAAU,uBAAuB8D,MAAOuH,EAAW,CAAEvF,SAAU,QAAc,CAAEA,SAAU,GAAlG,UACI,sBAAK9F,UAAU,OAAf,UACI,mBAAGC,QAAS,kBAAMqL,GAAaD,IAA/B,SAA0C,cAAC,IAAD,CAAiBrL,UAAU,KAAKG,KAAMmF,QAChF,8CACA,mBAAGrF,QAAS0M,EAAZ,SAAuB,cAAC,IAAD,CAAiB3M,UAAU,KAAKG,KAAM+E,WAEjE,8BACI,sBAAMvC,SAAUhC,EAAaoL,GAA7B,SACI,mCAAOtM,KAAK,OAAOqD,YAAY,sBAAyBpC,EAAS,oBAGzE,gCACI,iDACA,6BACKsK,EAAYxN,OAAO8F,KAAI,SAACO,EAAON,GAAR,OAAgB,qBAAcO,MAAO,CAAEC,gBAAiB1E,EAAS7B,OAAO1B,SAAS+H,EAAMvF,MAAQ,OAAS,WAAa2B,QAAS,kBAjJpJ,SAAAsD,GAClB,GAAIlE,EAAS7B,OAAO1B,SAASkP,EAAYxN,OAAO+F,GAAKjF,MAAO,CACxD,IAAM6O,EAAY9N,EAAS7B,OAAOO,WAAU,SAAA8F,GAAK,OAAIA,IAAUmH,EAAYxN,OAAO+F,GAAKjF,QACvFe,EAAS7B,OAAOS,OAAOkP,EAAW,GAClCtB,EAAY,2BAAKxM,GAAN,IAAgB7B,OAAQ6B,EAAS7B,eAE3CqO,EAAY,2BAAKxM,GAAN,IAAgB7B,OAAO,GAAD,mBAAM6B,EAAS7B,QAAf,CAAuBwN,EAAYxN,OAAO+F,GAAKjF,UA2IuF8O,CAAc7J,IAAlI,UACpC,qBAAKO,MAAO,CAAEC,gBAAiBF,EAAMG,SACrC,4BAAIH,EAAMvF,SAFmCiF,cAO7D,0BAASvD,UAAU,uBAAuB8D,MAAOyH,EAAW,CAAEzF,SAAU,QAAc,CAAEA,SAAU,GAAlG,UACI,sBAAK9F,UAAU,OAAf,UACI,mBAAGC,QAAS,kBAAMuL,GAAaD,IAA/B,SAA0C,cAAC,IAAD,CAAiBvL,UAAU,KAAKG,KAAMmF,QAChF,wCACA,mBAAGrF,QAAS0M,EAAZ,SAAuB,cAAC,IAAD,CAAiB3M,UAAU,KAAKG,KAAM+E,WAEjE,qBAAKlF,UAAU,gBAAf,SACI,+BACKgL,EAAYxN,OAAO8F,KAAI,SAACO,EAAON,GAAR,OAAgB,qBAAcO,MAAO,CAAEC,gBAAiBF,EAAMG,OAA9C,UACpC,uBAAMrB,SAAUhC,EAAajG,EAAYyB,SAAS+P,EAAY,MAA9D,UACI,mCAAOzM,KAAK,OAAOoD,aAAcgB,EAAMvF,KAAMwE,YAAY,aAAauK,UAAQ,GAAK3M,EAAS,iBAAmB6C,KAC/G,wBAAO1H,KAAK,cAAZ,UAA0B,cAAC,IAAD,CAAiBmE,UAAU,KAAKG,KAAMmN,MAC5D,+CAAO7N,KAAK,SAAYiB,EAAS,sBAAwB6C,IAAzD,IAA+DV,aAAcgB,EAAMG,eAE3F,4BAAG,cAAC,IAAD,CAAiBhE,UAAU,KAAKG,KAAM+E,IAASjF,QAAS,kBA3H/D,SAACsD,GACjB3C,EAAUpD,OAAOS,OAAOsF,EAAK,GAC7BjE,EAASvC,EAAU6D,IACnBlE,YAAW,kBAAM4C,EAASK,EAAaiB,EAAUxD,QAAO,KACxD4N,EAAYjJ,YAAY,aAAc,UAAW,SAuHoCwL,CAAYhK,UANhCA,OAQ/CoI,GAAc,oBAAI1L,QAAS,kBAAM2L,GAAeD,IAAlC,SAA+C,4CAC9DA,GAAc,+BACX,uBAAM1G,SAAUtE,GAvIhB,SAAC7G,GACrB,IAAM+J,EAAQ,CAAEvF,KAAMxE,EAAK0T,cAAexJ,MAAOlK,EAAK2T,oBACtD7M,EAAUpD,OAAOqE,KAAKgC,GACtBvE,EAASvC,EAAU6D,IACnBgL,GAAeD,GACfX,EAAYjJ,YAAY,aAAc,QAAS,YAkI3B,UACI,mCAAOtC,KAAK,OAAOqD,YAAY,aAAa4C,aAAa,MAAM2H,UAAQ,GAAK3M,EAAS,mBACrF,mCAAOjB,KAAK,QAAQ5D,KAAK,cAAcoD,GAAG,cAAc4D,aAAa,WAAcnC,EAAS,wBAC5F,kDAEJ,wBAAQT,QAAS,kBAAM2L,GAAeD,IAAtC,6BApHc,qBAAK3L,UAAU,mBAAf,qBC9F3B,WAA0B,2CCiBlC,SAAS0N,GAAanN,GACzB,IAAMjB,EAAWS,cACjB,EAAmCU,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACdgN,EAAUpO,EAAa9B,eAC3B,EAA0BuD,mBAASzB,EAAaR,YAAhD,mBAAO6O,EAAP,KACMhN,GADN,KACkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,cAC1D,EAAgCI,mBAAS,MAAzC,mBAAOwI,EAAP,KAAiB9G,EAAjB,KACA,EAAgC1B,mBAAS,MAAzC,mBAAOiF,EAAP,KAAiBxC,EAAjB,KACA,EAAkCzC,mBAAS,MAA3C,mBAAO6M,EAAP,KAAkBC,EAAlB,KACA,EAA4B9M,oBAAS,GAArC,mBAAO6L,EAAP,KAAeD,EAAf,KACA,EAAwC5L,mBAAS,MAAjD,mBAAO+M,EAAP,KAAqBC,EAArB,KACA,EAAgChN,mBAAS,MAAzC,mBAAOiN,EAAP,KAAiBC,EAAjB,KACA,EAAsClN,mBAAS,MAA/C,oBAAOmN,GAAP,MAAoBC,GAApB,MACA,GAAkBpN,mBAAS,MAA3B,qBAAOqN,GAAP,MAAUC,GAAV,MACA,GAAkCtN,mBAAS,MAA3C,qBAAOuN,GAAP,MAAkBC,GAAlB,MACA,GAA+CxN,mBAAS,MAAxD,qBAAOyN,GAAP,MACA,IADA,MACsCzN,oBAAS,IAA/C,qBAAO4C,GAAP,MAAoBnC,GAApB,MAGAoE,qBAAU,WACNvG,EAASO,GAAiB,IAC1B,IAAQZ,EAAOsB,EAAMmO,MAAMvU,OAAnB8E,GACH2B,EACKmN,GAAcC,EAAgBpN,EAAUzD,OADlCmC,EAASK,EAAaV,IAEtCK,EAASF,MACT,OAAIwB,QAAJ,IAAIA,OAAJ,EAAIA,EAAWxD,MACXmJ,EAAcS,KAAK,aAAcpG,EAAUxD,OAGhD,CAACwD,IACJiF,qBAAU,eAKV,IAeM8I,GAAa,WACfH,GAAa,MACbJ,IAAe,IA0EbQ,GAAa,SAAC9U,GAChB6T,EAAQ1Q,MAAQnD,EAAK+U,aACrBjO,EAAUzD,MAAM0E,KAAK8L,GACrBK,EAAgBpN,EAAUzD,OAC1BmC,EAASvC,EAAU,2BAAK6D,GAAN,IAAiBzD,MAAM,GAAD,mBAAMyD,EAAUzD,OAAhB,CAAuBwQ,QAC/DjR,YAAW,kBAAM4C,EAASK,EAAaiB,EAAUxD,QAAO,KACxDuQ,EAAUpO,EAAa9B,eACvBqQ,GAAcD,GACd/T,EAAK+U,aAAe,GACpB9M,GAAY,aAAc,QAAS,SAwBjC+M,GAAsB,SAACC,GACzB,GAAIA,EAAKvP,OAAO1D,SAAS8E,EAAUxD,KAAM,CAKrC,IAAM4R,EAAWD,EAAKvP,OAAOzB,WAAU,SAAAnC,GAAK,OAAIA,EAAMwB,MAAQwD,EAAUxD,OACxE2R,EAAKvP,OAAOvB,OAAO+Q,EAAU,QAE7BD,EAAKvP,OAAOqC,KAAKjB,EAAUxD,MA6B7B2E,GAAc,SAAC8C,EAAQpF,EAAMnB,GAA0B,IAApBa,EAAmB,uDAAZ,QACtC8P,EAAc,CAAE7R,IAAK1C,EAAYQ,SAAU2J,SAAQpF,OAAMnB,OAAMa,OAAMZ,UAAWC,KAAKC,OAC3FmC,EAAUtD,SAAS4R,QAAQD,GAC3B3P,EAASvC,EAAU6D,IACnBtB,EAASK,EAAaiB,EAAUxD,OAGpC,IAAKwD,IAAcmN,IAAiBA,EAAa5S,OAAQ,OAAQ,qBAAK6E,UAAU,mBAAf,SAAkC,qBAAKiN,IAAKkC,GAAQjC,IAAI,OAEzH,IAAM1M,GAAgB,CAClBuC,cAnKkB,SAACzB,EAAInC,GACvBmP,GAAKhN,EAAG8N,SACRhB,IAAe,GACfI,GAAarP,IAiKbwP,cACA5M,eACAW,cACAe,cACAG,eACAnC,mBAGEuJ,GAAc,CAChB4B,YACAC,SACAC,iBAxEqB,SAACvP,EAAYkC,GAC9BA,GACAsC,GAAY,aAAc,SAAU,SACpCzC,EAASvC,EAAU,2BAAK6D,GAAN,IAAiBrD,WAAY,CAAEyG,MAAOzG,EAAY8R,IAAK,YAGzEtN,GAAY,aAAc,SAAU,SACpCzC,EAASvC,EAAU,2BAAK6D,GAAN,IAAiBrD,WAAY,CAAEyG,MAAO,KAAMqL,IAAK9R,QAEvEb,YAAW,kBAAM4C,EAASK,EAAaiB,EAAUxD,QAAO,MAgExDF,QAAS0D,EAAU1D,QACnB+O,YAjDgB,SAAC5M,GACjB,GAAIA,EAASsC,MAAQtC,EAAS7B,OAAOrC,OAAQ,CACzC,IAAIgC,EAAQyD,EAAUzD,MAetB,GAdIkC,EAASsC,OACTxE,EAAQyD,EAAUzD,MAAM+I,MAAK,SAAA/G,GACzB,OAAOA,EAAK9B,MAAM6I,MAAK,SAAAvE,GACnB,OAAOA,EAAK1E,MAAMnB,SAASuD,EAASsC,aAI5CtC,EAAS7B,OAAOrC,SAChBgC,EAAQyD,EAAUzD,MAAM+I,MAAK,SAAA/G,GACzB,OAAOA,EAAK9B,MAAM6I,MAAK,SAAAvE,GACnB,OAAOA,EAAKnE,OAAO0I,MAAK,SAAArC,GAAK,OAAIA,EAAMvF,KAAKxC,SAASuD,EAAS7B,kBAIrEL,GAAUqN,OAAOC,KAAKtN,GAAOhC,OAI3B6S,EAAgB,CAAC7Q,QAJkB,CACtC,IAAMmS,EAAW/P,EAAa9B,eAC9B6R,EAASrS,MAAQ,8BACjB+Q,EAAgB,CAACsB,UAElBtB,EAAgBpN,EAAUzD,QA4BjCK,OAAQoD,EAAUpD,OAClBuE,gBAGEkH,GAAc,CAChBxF,cACAwC,WACAD,SA7Ja,SAACnC,GACd,GAAKoC,EAASzI,OAAOrC,OAEjB,GAAI8K,EAASzI,OAAO+R,MAAK,SAACpJ,GAAD,OAAeA,EAAUnC,QAAUH,EAAMG,SAAQ,CAEtE,IAAMwL,EAAgBvJ,EAASzI,OAAOO,WAAU,SAAAoI,GAAS,OAAIA,EAAUnC,QAAUH,EAAMG,SACvFiC,EAASzI,OAAOS,OAAOuR,EAAe,QAEtCvJ,EAASzI,OAAOqE,KAAKgC,QAPAoC,EAASzI,OAAOqE,KAAKgC,GAUlD,IAAM/B,EAAWvC,EAAa7B,WAAWuI,EAAUuD,EAAU5I,GAC7DtB,EAASvC,EAAU+E,IACnBxC,EAASK,EAAamC,EAAS1E,MAC/B2E,GAAY,aAAc,QAAS,UAgJnC+I,UA5Hc,SAACjG,GAGf,GAFAxK,QAAQC,IAAI,UAAWuK,GACvBxK,QAAQC,IAAI,oBAAqB2L,EAAS/I,SACrC+I,EAAS/I,QAAQ/B,OAIjB,GAAI8K,EAAS/I,QAAQqS,MAAK,SAAChI,GAAD,OAAgBA,EAAWnK,MAAQyH,EAAOzH,OAAM,CAE3E,IAAMqS,EAAiBxJ,EAAS/I,QAAQa,WAAU,SAAAwJ,GAAU,OAAIA,EAAWnK,MAAQyH,EAAOzH,OAC1F6I,EAAS/I,QAAQe,OAAOwR,EAAgB,QAExCxJ,EAAS/I,QAAQ2E,KAAKgD,QARtBxK,QAAQC,IAAI,YACZ2L,EAAS/I,QAAQ2E,KAAKgD,GAS1B,IAAM/C,EAAWvC,EAAa7B,WAAWuI,EAAUuD,EAAU5I,GAC7DtB,EAASvC,EAAU+E,IACnBxC,EAASK,EAAamC,EAAS1E,MAC/B2E,GAAY,aAAc,WAAY8C,EAAQoB,EAAShJ,QA4GvD8K,aA9IiB,SAAC1D,GACE,kBAATA,EAAmB4B,EAASpH,WAAWgD,KAAKwC,GAEnD4B,EAASpH,WAAWZ,OAAOoG,EAAM,GAErC,IAAMvC,EAAWvC,EAAa7B,WAAWuI,EAAUuD,EAAU5I,GAC7DtB,EAASvC,EAAU+E,IACnBxC,EAASK,EAAamC,EAAS1E,OAwI/BoL,WArIe,SAACM,GAChB7C,EAASvH,QAAUoK,EACnB,IAAMhH,EAAWvC,EAAa7B,WAAWuI,EAAUuD,EAAU5I,GAC7DtB,EAASvC,EAAU+E,IACnBxC,EAASK,EAAamC,EAAS1E,QAoInC,OACI,sBAAK4C,UAAU,8BAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAM2C,SAAUhC,GAvLV,SAAA7G,GAClBwF,EAASvC,EAAU,2BAAK6D,GAAN,IAAiB3D,MAAOnD,EAAK4V,kBAsLnC,SACI,+CAAOjQ,KAAK,OAAOR,GAAG,QAAQpD,KAAK,SAAY6E,EAAS,eAAxD,IAAuEmC,aAAcjC,EAAU3D,WAEnG,sBAAK+C,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACKY,EAAU1D,QAAQoG,KAAI,SAACuB,EAAQtB,GAAT,OAAiB,cAAC,IAAD,CAAkB1H,KAAMgJ,EAAOhJ,KAAMiJ,KAAK,KAAKC,OAAO,GAAzCxB,QAEzD,wBAAQtD,QAAS,kBAAMiO,GAAaD,IAApC,oBACCA,GAAY,sBAAKjO,UAAU,uBAAf,UACT,uBAAM2C,SAAUhC,GA5Lf,SAAA7G,GACrBO,QAAQC,IAAI,QAASR,GACrB,IAAI6V,EAAY/B,EAAMpS,QAAO,SAAAuT,GAGzB,OAFA1U,QAAQC,IAAI,QAASyU,GAEdA,EAAKlT,KAAK+T,cAAc9T,SAAShC,EAAK+K,OAAO+K,kBAEpC,KAAhB9V,EAAK+K,SAAe8K,EAAY,MACpCtV,QAAQC,IAAI,aAAcqV,MAoLN,UACI,wBAAQ1P,QAAS,kBAAMiO,GAAaD,IAApC,eACA,sBAAKjO,UAAU,eAAf,UACI,iDACA,mCAAOP,KAAK,OAAOiG,aAAa,MAAM5C,YAAY,2BAA2B7D,GAAG,SAASpD,KAAK,UAAc6E,EAAS,kBAG5H+N,IAAqB,qBAAKzO,UAAU,gBAAf,SAClB,6BACKyO,GAAkBnL,KAAI,SAACuB,EAAQtB,GAC5B,IAAKsB,EAAOrF,OAAO1D,SAAS8E,EAAUxD,KAAM,OACxC,+BACI,6CACA,yBAAQ4C,UAAU,iBAAlB,UACI,cAAC,IAAD,CAAkBnE,KAAMgJ,EAAQC,KAAK,KAAKC,OAAO,GAApCxB,GACb,4BAAIsB,IACJ,4BAAG,cAAC,IAAD,CAAiB1E,KAAM6E,aALzBH,EAAOzH,YAYhC,sBAAK4C,UAAU,gBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,mDAEH4N,EAAMtK,KAAI,SAACyL,EAAMxL,GACd,IAAKwL,EAAKvP,OAAO1D,SAAS8E,EAAUxD,KAAM,OACtC,yBAAuB6C,QAAS,kBAAM6O,GAAoBC,IAAO/O,UAAU,iBAA3E,UACI,cAAC,IAAD,CAAkBnE,KAAMkT,EAAKlT,KAAMiJ,KAAK,KAAKC,OAAO,GAAvCxB,GACb,4BAAIwL,EAAKlT,OACT,4BAAG,cAAC,IAAD,CAAiBsE,KAAM6E,UAHjB+J,EAAK3R,WAS9B,sBAAK4C,UAAU,gBAAf,UACI,+CACC4N,EAAMtK,KAAI,SAACyL,EAAMxL,GACd,GAAIwL,EAAKvP,OAAO1D,SAAS8E,EAAUxD,KAAM,OACrC,yBAAuB6C,QAAS,kBAAM6O,GAAoBC,IAAO/O,UAAU,iBAA3E,UACI,cAAC,IAAD,CAAkBnE,KAAMkT,EAAKlT,KAAMiJ,KAAK,KAAKC,OAAO,GAAvCxB,GACb,4BAAIwL,EAAKlT,OACT,4BAAG,cAAC,IAAD,CAAiBsE,KAAMiG,UAHjB2I,EAAK3R,oBAU1C,sBAAK4C,UAAU,OAAf,UACI,mBAAGA,UAAU,gBAAgBC,QAAS,kBAAM2M,GAAU,IAAtD,SAA6D,cAAC,IAAD,CAAiB5M,UAAU,KAAKG,KAAM0P,QACnG,cAAC,GAAD,CAAW7E,YAAaA,WAGhC,cAAC,IAAD,CAAiBhI,UA9QD,SAACf,GACrB,GAAKA,EAAOC,YAAZ,CACA,IAAMC,EAAQ4L,EACd,EAAwB5L,EAAMlE,OAAOgE,EAAOK,OAAOC,MAAO,GAAnDC,EAAP,oBACAL,EAAMlE,OAAOgE,EAAOC,YAAYK,MAAO,EAAGC,GAC1CwL,EAAgB7L,KAyQZ,SACI,cAAC,IAAD,CAAWc,YAAY,aAAaxD,KAAK,OAAzC,SACK,SAACyD,GAAD,OACG,+CAASA,EAASC,gBAAlB,IAAkCC,IAAKF,EAASG,SAAUrD,UAAU,uBAApE,SACI,sBAAKA,UAAU,OAAf,UACK+N,EAAazK,KAAI,SAACnE,EAAMoE,GAAP,OACd,cAAC,IAAD,CAA0BC,YAAarE,EAAK/B,IAAKmF,MAAOgB,EAAxD,SACK,SAAAL,GAAQ,OAAK,2DAASA,EAASQ,gBAAoBR,EAASS,iBAA/C,IAAgEP,IAAKF,EAASG,SAA9E,SACV,cAAC,EAAD,CAA4B7C,cAAeA,GAAerB,KAAMA,GAA9CA,EAAK/B,UAFf+B,EAAK/B,QAKxB8F,EAASJ,aACR+K,GAAa,yBAAQ7N,UAAU,eAAeC,QAAS,kBAAM6N,GAAcD,IAA9D,UAA0E,cAAC,IAAD,CAAiB7N,UAAU,KAAKG,KAAM6E,MAAhH,uBACd6I,GAAa,uBAAM7N,UAAU,qBAAqBiF,SAAUtE,EAAaiO,IAA5D,UACV,mCAAOnP,KAAK,OAAOiG,aAAa,MAAM5C,YAAY,YAAY7D,GAAG,QAAQpD,KAAK,SAAY6E,EAAS,kBACnG,sBAAKV,UAAU,OAAf,UACI,8CACA,mBAAGC,QAAS,kBAAM6N,GAAcD,IAAhC,SAA4C,cAAC,IAAD,CAAiB7N,UAAU,KAAKG,KAAM+E,yBAO7GiJ,IAAe,sBAAKrK,MAAO,CAAEgM,KAAK,GAAD,OAAKzB,GAAL,MAAY0B,IAAI,SAAY/P,UAAU,aAAxD,UACZ,sBAAKA,UAAU,mBAAf,UACI,4BAAIuO,GAAUtR,QACd,wBAAQgD,QAAS,kBAAM0O,MAAvB,kBAEJ,qBAAK3O,UAAU,kBAAf,SACI,wBAAQC,QArML,WACf,IAAMf,EAAU0B,EAAUzD,MAAMY,WAAU,SAAAoB,GAAI,OAAIA,EAAK/B,MAAQoM,EAASpM,OAClEqF,EAAclD,EAAarB,YAAYgB,EAAS0B,GACtDtB,EAASvC,EAAU0F,IACnBnD,EAASK,EAAa8C,EAAYrF,MAClC2E,GAAY,aAAc,UAAW,QACrC4M,MA+LY,mCAGP1I,GAAY,cAAC,GAAD,CAAWgD,YAAaA,Q,OCjW1C,SAAS+G,KAEZ,OACI,sBAAKhQ,UAAU,uCAAf,UACI,qDACA,qBAAKA,UAAU,uBAAf,SACI,gCACI,gCACI,qDACA,6CAEJ,qBAAKiN,IAAI,6DAA6DC,IAAI,UAGlF,qBAAKlN,UAAU,uBAAf,SACI,gCACI,gCACI,gDACA,uEAEJ,qBAAKiN,IAAI,4DAA4DC,IAAI,a,OCnBtF,SAAS+C,GAAT,GAAkC,IAAVrU,EAAS,EAATA,MAG3B,OACI,qBAAKoE,UAAU,mBAAmB8D,MAAOlI,EAAM2B,WAAW8R,IAAM,CAAEa,gBAAgB,OAAD,OAAStU,EAAM2B,WAAW8R,IAA1B,MAAqC,CAAEtL,gBAAiBnI,EAAM2B,WAAWyG,OAA1J,SACI,cAAC,IAAD,CAAMhE,UAAU,OAAOE,GAAE,iBAAYtE,EAAMwB,KAA3C,SACI,6BAAKxB,EAAMqB,Y,OCJpB,SAASkT,GAAT,GAAqC,IAAhBC,EAAe,EAAfA,YACxB,EAAmC3P,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAClB,EAA0CK,mBAAS,MAAnD,mBAAOqP,EAAP,KAAsBC,EAAtB,KAOA,OACI,qBAAItQ,UAAU,kBAAd,UACKoQ,EAAY5Q,OAAO8D,KAAI,SAAA1H,GAAK,OAAI,6BAAoB,cAAC,GAAD,CAAcA,MAAOA,KAAhCA,EAAMwB,QAChD,qBAAI4C,UAAU,uBAAd,WACMqQ,GAAiB,wBAAQpQ,QAAS,kBAAMqQ,GAAkBD,IAAzC,0BAClBA,GACG,uBAAMpL,SAAUtE,GAXb,SAAA7G,GACfsW,EAAYG,SAASzW,EAAK0W,eAC1BF,GAAkBD,MASN,UACI,+CAAO5Q,KAAK,OAAOR,GAAG,QAAQpD,KAAK,SAAY6E,EAAS,kBAAxD,IAA0EoC,YAAY,gBACtF,uD,OCdjB,SAAS2N,KACZ,IAAMnR,EAAWS,cACXP,EAASqB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAavB,UACjDsC,EAAWvC,EAAavC,gBAE9B6I,qBAAU,WACNU,EAAcE,QACdnH,EAASF,OACV,IAQH,IAAKI,IAAWA,EAAOrE,OAAQ,OAAQ,qBAAK6E,UAAU,mBAAf,SAAkC,qBAAKiN,IAAKkC,GAAQjC,IAAI,OAE/F,IAAMkD,EAAc,CAChB5Q,SACA+Q,SAVa,SAACtT,GACd6E,EAAS7E,MAAQA,EACjBqC,EAASvC,EAAU+E,IACnBxC,EAASF,OAUb,OACI,sBAAKY,UAAU,gBAAf,UACI,uDACA,cAAC,GAAD,CAAWoQ,YAAaA,OCTrBM,OAjBf,WACE,IAAMnT,EAAasD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaxD,cACrDqD,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,aAC1D,OACE,cAAC,IAAD,UACE,sBAAKZ,UAAU,gBAAgB8D,MAAQvG,EAAiO,CAAEwG,gBAAiB,SAAvOnD,EAAYA,EAAUrD,WAAWyG,MAAQ,CAAED,gBAAiBnD,EAAUrD,WAAWyG,OAAU,CAAEkM,gBAAiBtP,EAAUrD,WAAW8R,IAArB,cAAkCzO,EAAUrD,WAAW8R,IAAvD,KAAgE,IAAO,CAAEtL,gBAAiB,SAA5P,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4M,UAAWjD,GAAckD,KAAK,gBACrC,cAAC,IAAD,CAAOD,UAAWX,GAAaY,KAAK,YACpC,cAAC,IAAD,CAAOD,UAAWF,GAAYG,KAAK,eCN9BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mBCPRQ,GAAgB,CACpB9R,OAAQ,GACRoB,UAAW,KACXrD,YAAY,EACZ8B,SAAU,MCCZ,IAAMkS,GAAmB/J,OAAOgK,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClC5Q,aDDK,WAAsD,IAAhCD,EAA+B,uDAAvBwQ,GAAeM,EAAQ,uCAC1D,OAAQA,EAAOnS,MACb,IAAK,aACH,OAAO,2BACFqB,GADL,IAEEtB,OAAQoS,EAAOpS,SAEnB,IAAK,YACH,OAAO,2BACFsB,GADL,IAEEF,UAAWgR,EAAOhW,QAEtB,IAAK,YACH,OAAO,2BACFkF,GADL,IAEEtB,OAAO,GAAD,mBAAMsB,EAAMtB,QAAZ,CAAoBoS,EAAOhW,UAErC,IAAK,eACH,OAAO,2BACFkF,GADL,IAEEtB,OAAQsB,EAAMtB,OAAOhE,QAAO,SAAAI,GAAK,OAAIA,EAAMwB,MAAQwU,EAAOhS,aAE9D,IAAK,eACH,IAAQF,EAAiBkS,EAAjBlS,aAER,OADArF,QAAQC,IAAI,gBAAiBoF,GACtB,2BACFoB,GADL,IAEEtB,OAAQsB,EAAMtB,OAAO8D,KAAI,SAAA1H,GAAK,OAAIA,EAAMwB,MAAQsC,EAAatC,IAAMsC,EAAe9D,OAEtF,IAAK,oBACH,OAAO,2BACFkF,GADL,IAEEvD,WAAYqU,EAAOrU,aAEvB,IAAK,kBACH,OAAO,2BACFuD,GADL,IAEEzB,SAAUuS,EAAOvS,WAErB,QACE,OAAOyB,MCnCA+Q,GAAQC,aAAYJ,GAAaH,GAAiBQ,aAAgBC,QCJ/EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,SAG1BxB,O","file":"static/js/main.ed593dac.chunk.js","sourcesContent":["import Axios from 'axios'\r\n// import { router } from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    \r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  filter,\r\n  sort,\r\n  debounce,\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n  var txt = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction filter(term, arr) {\r\n  term = term.toLocaleLowerCase()\r\n  return arr.filter(board => {\r\n    return board.name.toLocaleLowerCase().includes(term) ||\r\n      board.phone.toLocaleLowerCase().includes(term) ||\r\n      board.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait = 1000) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}","import { httpService } from \"./http.service\"\r\nimport { utilService } from \"./utilService\"\r\n\r\nconst KEY = 'board/'\r\n\r\nexport default {\r\n    query,\r\n    getBoardById,\r\n    deleteBoard,\r\n    saveBoard,\r\n    getEmptyBoard,\r\n    getEmptyCard,\r\n    updateCard,\r\n    updateBoard,\r\n    getCloudImages,\r\n    getEmptyTask,\r\n    getUsers\r\n}\r\n\r\nconst cloudUrls = [\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621015877/taskman/jared-verdi-PNKwdJ8WetM-unsplash_aabpzg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016569/taskman/zsofia-szalay-TbrzJbcacnQ-unsplash_bst628.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016567/taskman/the-nigmatic-lUnLaEWzcz8-unsplash_vcfxju.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016565/taskman/steve-johnson-274PPmlOjyQ-unsplash_twaarr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/omer-salom-LoijtQXXNhs-unsplash_w6cs4h.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/jonny-gios-h_XcnLbDc_0-unsplash_lhi5si.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/inaki-del-olmo-IRCzpl2YYKE-unsplash_tpzeyw.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/joel-holland-TRhGEGdw-YY-unsplash_dqapzs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016558/taskman/ian-schneider-TamMbr4okv4-unsplash_r85bnj.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016557/taskman/mohammad-alizade-CDu0x1Aiils-unsplash_jqizxr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016556/taskman/mohammad-alizade-62t_kKa2YlA-unsplash_rbytvb.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016555/taskman/mohamed-rishfaan-ir_65wcK_DA-unsplash_qgfljs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016554/taskman/ines-mills-TGs0tHMk4eg-unsplash_bkqpbf.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/erol-ahmed-aIYFR0vbADk-unsplash_g8hmym.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/duy-thanh-nguyen-ZeoSVUcWjfY-unsplash_z4qs2l.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016550/taskman/fransiskus-filbert-mangundap-C9hqYikX34w-unsplash_mqj9zi.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016548/taskman/arpad-spodni-KbKQY_LjmuE-unsplash_fqlcyv.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016546/taskman/dave-hoefler-PkQH-GHEp0A-unsplash_jfurlc.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016544/taskman/fabrice-villard-Du41jIaI5Ww-unsplash_kqcna2.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/estee-janssens-aQfhbxailCs-unsplash_slddqg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/angel-luciano-XQJ0BBSvTs0-unsplash_d7advt.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016538/taskman/callum-wale-V8j3F6Ik9_s-unsplash_clbkte.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016537/taskman/braden-jarvis-prSogOoFmkw-unsplash_sgtmnd.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016534/taskman/danielle-macinnes-IuLgi9PWETU-unsplash_u9xmg7.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016533/taskman/carolyn-christine-D7bmnvGJA2Q-unsplash_oz27jz.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621018122/taskman/vlad-kutepov-WYJ9c7uSdnU-unsplash_c2g6gy.jpg',\r\n]\r\n\r\nconst gUsers = [\r\n    { _id: 'u101', name: 'Aviv Zohar' },\r\n    { _id: 'u102', name: 'Hadar Marom' },\r\n    { _id: 'u103', name: 'Oshri Yoktan' },\r\n]\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteBoard(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from boardService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveBoard(board) {\r\n    try {\r\n        if (board._id) return await httpService.put(KEY + board._id, board)\r\n        return await httpService.post(KEY, board)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction updateCard(taskToUpdate, cardToUpdate, boardToUpdate) {\r\n    // if you want to delete a task use the func and send the idx ----updateBoard(idx)----\r\n    if (typeof (taskToUpdate) !== 'number') {\r\n        const taskIdx = cardToUpdate.tasks.findIndex(t => t._id === taskToUpdate._id)\r\n        cardToUpdate.tasks.splice(taskIdx, 1, taskToUpdate)\r\n    } else {\r\n        cardToUpdate.tasks.splice(taskToUpdate, 1)\r\n    }\r\n    return updateBoard(cardToUpdate, boardToUpdate)\r\n}\r\n\r\nfunction updateBoard(cardToUpdate, boardToUpdate) {\r\n    if (typeof (cardToUpdate) !== 'number') {\r\n        const cardIdx = boardToUpdate.cards.findIndex(card => card._id === cardToUpdate._id)\r\n        boardToUpdate.cards.splice(cardIdx, 1, cardToUpdate)\r\n    } else {\r\n        boardToUpdate.cards.splice(cardToUpdate, 1)\r\n    }\r\n    const updatedBoard = { ...boardToUpdate, cards: [...boardToUpdate.cards] }\r\n    return updatedBoard;\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getCloudImages() {\r\n    return cloudUrls;\r\n}\r\n\r\nfunction getUsers() {\r\n    return gUsers;\r\n}\r\n\r\nfunction getEmptyBoard() {\r\n    return {\r\n        title: '',\r\n        members: [],\r\n        cards: [{ _id: utilService.makeId(), title: 'Your first card!', tasks: [] }],\r\n        activity: [],\r\n        background: [],\r\n        labels: [],\r\n    }\r\n}\r\n\r\nfunction getEmptyCard() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        tasks: []\r\n    }\r\n}\r\n\r\nfunction getEmptyTask() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        desc: '',\r\n        createdAt: Date.now(),\r\n        labels: [],\r\n        dueDate: '',\r\n        activity: [],\r\n        members: [],\r\n        isWithAttachment: false,\r\n        cover: 'white',\r\n        checklists: [],\r\n        doneAt: ''\r\n    }\r\n}","import boardService from '../../services/boardService'\r\n\r\nexport function loadBoards(filterBy) {\r\n  return async dispatch => {\r\n    const boards = await boardService.query(filterBy)\r\n    const action = { type: 'SET_BOARDS', boards }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function getBoardById(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    await dispatch({ type: 'SET_BOARD', board })\r\n    return board\r\n  }\r\n}\r\nexport function saveBoard(board) {\r\n  return async dispatch => {\r\n    const updatedBoard = await boardService.saveBoard(board)\r\n    if (!board._id) return dispatch({ type: 'ADD_BOARD', board: updatedBoard })\r\n    else return dispatch({ type: 'UPDATE_BOARD', updatedBoard })\r\n  }\r\n}\r\nexport function setCurrBoard(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    dispatch({ type: 'SET_BOARD', board })\r\n  }\r\n}\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    await boardService.remove(boardId)\r\n    dispatch({ type: 'REMOVE_BOARD', boardId })\r\n  }\r\n}\r\nexport function updateBackground(background) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'UPDATE_BACKGROUND', background })\r\n  }\r\n}\r\nexport function updateFilterBy(filterBy) {\r\n  return async dispatch => {\r\n    dispatch({ type: 'UPDATE_FILTERBY', filterBy })\r\n  }\r\n}","import { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './AppHeader.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateBackground } from '../../store/actions/boardActions'\r\n\r\nexport function AppHeader() {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <nav className=\"app-header sub-container\">\r\n            <Link className=\"link\" onClick={() => dispatch(updateBackground(true))} to=\"/\"><FontAwesomeIcon icon={faHome} /></Link>\r\n            <Link className=\"link\" onClick={() => dispatch(updateBackground(true))} to=\"/\">Taskman</Link>\r\n            <Link className=\"link\" onClick={() => dispatch(updateBackground(true))} to=\"/\"><FontAwesomeIcon icon={faUserCircle} /></Link>\r\n        </nav>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport boardService from '../../services/boardService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faList, faTimes, faClock, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport './CardPreview.scss'\r\nimport Avatar from 'react-avatar';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nexport function CardPreview(props) {\r\n    const { card, cardPreviewOp } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [tasks, setTasks] = useState(card.tasks)\r\n    const [isAddTask, setIsAddTask] = useState(null)\r\n    var newTask = boardService.getEmptyTask()\r\n\r\n    const setCardTitle = data => {\r\n        card.title = data.cardTitle\r\n        const boardToUpdate = boardService.updateBoard(card, currBoard)\r\n        dispatch(saveBoard(boardToUpdate))\r\n    }\r\n\r\n    const labelsDescToggle = (ev, bool) => {\r\n        ev.stopPropagation()\r\n        cardPreviewOp.setIsDescShown(bool)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n    const doneAtToggle = (ev, task) => {\r\n        console.log('task:', task)\r\n        ev.stopPropagation()\r\n        if (!task.doneAt) task.doneAt = Date.now()\r\n        else task.doneAt = ''\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n    const addTask = async data => {\r\n        newTask.title = data.newTask\r\n        tasks.push(newTask)\r\n        setTasks(tasks)\r\n        const newBoard = boardService.updateCard(newTask, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        newTask = boardService.getEmptyTask()\r\n        setIsAddTask(!isAddTask)\r\n        data.newTask = ''\r\n        cardPreviewOp.addActivity('Aviv Zohar', 'added', 'task', card.title)\r\n    }\r\n\r\n    const handleOnDragEnd = async (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(tasks);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        card.tasks = items\r\n        setTasks(card.tasks);\r\n        const boardToSave = await boardService.updateBoard(card, currBoard)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n    return (\r\n        <div className=\"board-card\" onClick={() => cardPreviewOp.setCurrCard(card)} >\r\n            <div className=\"hide-overflow\">\r\n                <div className=\"title\">\r\n                    <form onChange={handleSubmit(setCardTitle)}>\r\n                        <input type=\"text\" {...register(\"cardTitle\")} defaultValue={card.title} placeholder=\"Card name\" />\r\n                    </form>\r\n                    <div onClick={(ev) => cardPreviewOp.openCardModal(ev, card)} className=\"manage-card\"><p>⋮</p></div>\r\n                </div>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"tasks\">\r\n                        {(provided) => (\r\n                            <ul {...provided.droppableProps} ref={provided.innerRef} className=\"tasks-container\">\r\n                                {tasks.map((task, idx) => {\r\n                                    return (\r\n                                        <Draggable key={task._id} draggableId={task._id} index={idx}>\r\n                                            {(provided) => (\r\n                                                <li onClick={() => cardPreviewOp.setCurrTask(task)} key={task._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className=\"card-task\">\r\n                                                    <div className=\"label-color-to-preview-container\">\r\n                                                        {!cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, true)}></label>)}\r\n                                                        {cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-open-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, false)}>{label.desc}</label>)}\r\n                                                    </div>\r\n                                                    <span>{task.title}</span>\r\n                                                    <section className=\"buttom-preview-info\">\r\n                                                        {!task.checklists.length ? null :\r\n                                                            <p><FontAwesomeIcon icon={faList} />\r\n                                                                {task.checklists.reduce((accTotal, checklist) => {\r\n                                                                    return accTotal + checklist.list.reduce((acc, itemInList) => itemInList.isChecked + acc, 0)\r\n                                                                }, 0)}/\r\n                                                        {task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0)}\r\n                                                            </p>}\r\n\r\n                                                        {!task.dueDate ? null : !task.doneAt ?\r\n                                                            <div className=\"due-date-to-preview\" onClick={(ev) => doneAtToggle(ev, task)}><FontAwesomeIcon icon={faClock} /><Moment className=\"due-date-to-preview\" format=\"MMM D\" withTitle>{task.dueDate}</Moment></div> :\r\n                                                            <div className=\"due-date-to-preview\" onClick={(ev) => doneAtToggle(ev, task)}><FontAwesomeIcon icon={faCheckSquare} /><Moment className=\"due-date-to-preview\" format=\"MMM D\" withTitle>{task.dueDate}</Moment></div>}\r\n                                                        {!task.members.length ? null : <div>\r\n                                                            {task.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                                                        </div>}\r\n                                                    </section>\r\n                                                </li>\r\n                                            )}</Draggable>)\r\n                                })}{provided.placeholder}\r\n                            </ul>)}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                {!isAddTask && <button className=\"add-task-btn\" onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> Add task</button>}\r\n                {isAddTask && <div className=\"add-task-container\"><form onSubmit={handleSubmit(addTask)}>\r\n                    <textarea type=\"text\" id=\"title\" name=\"title\" {...register(\"newTask\")} placeholder=\"Task name\" defaultValue={newTask.title} />\r\n                    <button>Add Task</button>\r\n                </form>\r\n                    <p onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelEditModal.scss'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport function LabelEditModal(props) {\r\n    const { labelEditModal } = props\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onChangeEditLabel = (data) => {\r\n        labelEditModal.desc = data.labelName\r\n        labelEditModal.color = data.labelColor\r\n        props.setLabelModal(labelEditModal)\r\n    }\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <div className=\"labels-edit-modal-header\">\r\n                <button onClick={() => props.setLabelEditModal(false)}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                <h3>Edit Label:</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"label-edit-details\">\r\n                <form onChange={handleSubmit(res => onChangeEditLabel(res))}>\r\n                    <p>Name:</p>\r\n                    <input type=\"text\" name=\"edit-name\" autoComplete=\"off\" value={labelEditModal.desc} {...register('labelName')} />\r\n                    <p>Color:</p>\r\n                    <input type=\"color\" name=\"edit-color\" value={labelEditModal.color} {...register('labelColor')}/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport boardService from '../../services/boardService'\r\nimport { LabelEditModal } from '../LabelEditModal/LabelEditModal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faPencilAlt, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelModal.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function LabelModal(props) {\r\n    const [labelEditModal, setLabelEditModal] = useState(null)\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const labels = currBoard.labels\r\n\r\n    const func = (ev) => {\r\n        \r\n    }\r\n\r\n    const chooseLabel = (color) => {\r\n        props.addLabel(color)\r\n    }\r\n    \r\n\r\n    const editLabel = (ev, label) => {\r\n        ev.stopPropagation()\r\n        setLabelEditModal(label)\r\n    }\r\n    useEffect(() => {\r\n        // console.log('props.currTask:', props.currTask.labels)\r\n    })\r\n    // const isHasV = (currLabel) => {\r\n    //     // console.log('currLabel:', currLabel)\r\n    //     const a= props.currTask.labels.some((label) => {\r\n    //         // console.log('label.color:', label.color)\r\n    //         // console.log(' currLabel.color:',  currLabel.color)\r\n    //         // console.log('label.color === currLabel.color:', label.color === currLabel.color)\r\n    //         return label.color === currLabel.color\r\n    //     })\r\n    //     console.log('a',a);\r\n    //     return <h1>v</h1>\r\n    // }\r\n    return (\r\n        <section >\r\n            {/* <div className=\"label-modal\" style={`top:${pageY}px}`}> */}\r\n            {/* <button onClick={func}>click</button> */}\r\n            {  <div className=\"label-modal\" style={!labelEditModal ? { maxWidth: 100 + '%' } : { maxWidth: 0, visibility: 'visible' }}>\r\n                <div className=\"labels-modal-header\">\r\n                    <h3>Labels</h3>\r\n                    <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <ul className=\"label-container\">\r\n                    {labels.map((label, idx) => {\r\n                        return <li onClick={() => chooseLabel(label)} key={idx}  >\r\n                            <div className=\"label-to-show\" style={{ backgroundColor: `${label.color}` }}>\r\n                                <span>{label.desc}</span>\r\n                                <span>{(props.currTask.labels.find((currLabel) => currLabel.color === label.color) ? <FontAwesomeIcon className=\"fa\" icon={faCheckCircle} /> : null)}</span>\r\n                            </div>\r\n                            <button className=\"edit-label-btn\" onClick={(ev) => editLabel(ev, label)}><FontAwesomeIcon icon={faPencilAlt} /></button>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            { labelEditModal && <LabelEditModal setLabelModal={props.setLabelModal} labelEditModal={labelEditModal} setLabelEditModal={setLabelEditModal} addLabel={props.addLabel}></LabelEditModal>}\r\n        </section >\r\n    )\r\n}\r\n\r\n","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nfunction createSocketService() {\r\n    var socket\r\n    const socketService = {\r\n        // socket is lazily created\r\n        setup() {\r\n            socket = io(baseUrl)\r\n            console.log('using sockets!!!');\r\n        },\r\n        on(eventName, cb) {\r\n            console.log('eventName back from back:', eventName)\r\n            if (!socket) socketService.setup();\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb = null) {\r\n            if (!socket) socketService.setup();\r\n            if (!cb) socket.removeAllListeners(eventName)\r\n            else socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            console.log('eventName front to back:', eventName)\r\n            if (!socket) socketService.setup();\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        }\r\n    }\r\n    return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n    var listenersMap = {}\r\n    const socketService = {\r\n        listenersMap,\r\n        setup() {\r\n            listenersMap = {}\r\n        },\r\n        terminate() {\r\n            this.setup()\r\n        },\r\n        on(eventName, cb) {\r\n            listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n        },\r\n        off(eventName, cb) {\r\n            if (!listenersMap[eventName]) return\r\n            if (!cb) delete listenersMap[eventName]\r\n            else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n        },\r\n        emit(eventName, data) {\r\n            if (!listenersMap[eventName]) return\r\n            listenersMap[eventName].forEach(listener => {\r\n                listener(data)\r\n            })\r\n        },\r\n        debugMsg() {\r\n            this.emit('chat newMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n        },\r\n    }\r\n    return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)","\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faPencilAlt, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './MemberModal.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport Avatar from 'react-avatar'\r\nimport { socketService } from '../../services/socketService'\r\nimport { useEffect } from 'react'\r\n\r\nexport function MemberModal(props) {\r\n    const chooseMember = (member) => {\r\n        // socketService.emit(\"add-member-to-task\", member);\r\n        props.addMemberToTask(member)\r\n    }\r\n    const chooseMemberForSockets = (member) => {\r\n        console.log('workes');\r\n        console.log('member:', member)\r\n        props.addMemberToTask(member)\r\n    }\r\n    useEffect(() => {\r\n        socketService.on(\"add-member-to-task-from-back\", (() => {\r\n            console.log('workes');\r\n        }))\r\n        // socketService.on(\"add-member-to-task-from-back\", chooseMemberForSockets)\r\n    })\r\n\r\n    var currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    return (\r\n        <div className=\"member-modal\" style={true ? { maxWidth: 100 + '%' } : { maxWidth: 0, visibility: 'visible' }}>\r\n            <div className=\"member-modal-header\">\r\n                <h3>Members</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setMemberModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <ul className=\"member-container\">\r\n                {currBoard.members.map((member, idx) => {\r\n                    return <li onClick={() => chooseMember(member)} key={idx}  >\r\n                        <div className=\"member-details\">\r\n                            <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                            <span >{member.name}</span>\r\n                        </div>\r\n                        <span >{(props.currTask.members.find((currMember) => currMember._id === member._id) ? <FontAwesomeIcon icon={faCheckCircle}> </FontAwesomeIcon> : null)}</span>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport './CheckListModal.scss'\r\n\r\nexport function CheckListModal(props) {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const setTitle = data => {\r\n        const newChecklistToSend = { title: data.title, list: [], range: 0 }\r\n        props.addChecklist(newChecklistToSend)\r\n        props.setChecklistModal(false)\r\n    }\r\n    return (\r\n        <div className=\"checklist-modal\" >\r\n            <section className=\"checklist-modal-header\">\r\n                <h3>Add Checklist</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setChecklistModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form className=\"checklist-modal-main\" onSubmit={handleSubmit(setTitle)}>\r\n                <label>Title</label>\r\n                <input type=\"text\" autoComplete=\"off\" id=\"title\" name=\"title\"  {...register(\"title\")} defaultValue='' />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './DueDateModal.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport 'date-fns';\r\nimport React from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport function DueDateModal(props) {\r\n    const timeStemp = Date.now() + 604800000 //the default is next week\r\n    const defaultNextWeek = new Date(Date.now() + 604800000);\r\n    const [selectedDate, setSelectedDate] = React.useState(timeStemp);\r\n\r\n    const submit = () => {\r\n        var selectedDateStr = Date.parse(selectedDate)\r\n        props.addDueDate(selectedDateStr)\r\n        props.setDueDateModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"due-date-modal\">\r\n            <section className=\"due-date-modal-header\">\r\n                <h3>Due Date</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setDueDateModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form onSubmit={submit}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Pick A Deadline\"\r\n                        value={selectedDate}\r\n                        onChange={(date) => setSelectedDate(date)}\r\n                        KeyboardButtonProps={{ 'aria-label': 'change date', }}\r\n                    ></KeyboardDatePicker>\r\n                </MuiPickersUtilsProvider>\r\n                <button >save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAlignLeft, faClock, faList, faTag, faTimes, faUser, faCheckSquare, faThermometerEmpty, faSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService.js'\r\nimport './TaskModal.scss'\r\nimport Avatar from 'react-avatar';\r\nimport { LabelModal } from '../LabelModal/LabelModal';\r\nimport { MemberModal } from '../MemberModal/MemberModal';\r\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DueDateModal } from '../DueDateModal/DueDateModal.jsx';\r\nimport Moment from 'react-moment';\r\n\r\nexport function TaskModal(props) {\r\n    const { taskModalOp } = props\r\n    const { currTask } = taskModalOp\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n    const [labelModal, setLabelModal] = useState(false)\r\n    const [memberModal, setMemberModal] = useState(false)\r\n    const [checklistModal, setChecklistModal] = useState(false)\r\n    const [dueDateModal, setDueDateModal] = useState(false)\r\n    const [isDesc, setIsDesc] = useState(false)\r\n\r\n    var descValue;\r\n    var currBoard = useSelector(state => state.boardReducer.currBoard)\r\n\r\n    const currCard = currBoard.cards.find(card => {\r\n        return card.tasks.find(t => {\r\n            return t._id === currTask._id\r\n        })\r\n    })\r\n\r\n    const onSubmit = data => {\r\n        currTask.desc = data.desc\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onSubmitItemInList = (data, idxInList) => {\r\n        const input = Object.keys(data).find(str => str === ('inputItem' + idxInList))\r\n        currTask.checklists[idxInList].list.push({ desc: data[input], isChecked: false })\r\n        setRange(currTask.checklists[idxInList])\r\n    }\r\n\r\n    const changeCheckBox = (item) => {\r\n        item.isChecked = !item.isChecked\r\n        updateBoard(currTask)\r\n    }\r\n    const tuggleTaskDone = () => {\r\n        if (!currTask.doneAt) currTask.doneAt = Date.now()\r\n        else currTask.doneAt = ''\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setRange = checklist => {\r\n        const itemsChecked = checklist.list.reduce((acc, itemInList) => {\r\n            return itemInList.isChecked + acc\r\n        }, 0)\r\n        const rengeToShow = +((itemsChecked / checklist.list.length * 100).toFixed(2))\r\n        checklist.range = rengeToShow\r\n        updateBoard(currTask)\r\n    }\r\n    const updateBoard = task => {\r\n        const updatedBoard = boardService.updateCard(task, currCard, currBoard)\r\n        dispatch(saveBoard(updatedBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-modal\">\r\n            <div className=\"task-modal-form\">\r\n                <div className=\"task-header\">\r\n                    <div className=\"task-title\">\r\n                        <h3>{currTask.title}</h3>\r\n                        <p>In list: {currCard.title} </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-description-modal\">\r\n                    {!currTask.dueDate ? null : <section onClick={tuggleTaskDone}>\r\n                        <span className=\"due-date-moment\">{!currTask.doneAt ? <FontAwesomeIcon icon={faClock} /> : <FontAwesomeIcon icon={faCheckSquare} />} <Moment fromNow>{currTask.dueDate}</Moment></span>\r\n                        {/* <span className=\"due-date-moment\">{!currTask.doneAt ? <FontAwesomeIcon icon={faClock} /> : <FontAwesomeIcon icon={faCheckSquare} />} <Moment fromNow>{currTask.dueDate}</Moment></span> */}\r\n                        <Moment format=\"MMM D YYYY\" withTitle>{currTask.dueDate}</Moment>\r\n                    </section>}\r\n                    {!currTask.labels.length ? null : <section><h4>Lables</h4>\r\n                        {currTask.labels.map((label, idx) =>\r\n                            <div className=\"label-in-modal\" key={idx} style={{ backgroundColor: label.color }}>\r\n                                <p>{label.desc}</p>\r\n                            </div>)}\r\n                        <button onClick={() => setLabelModal(true)}>+ </button>\r\n                    </section>}\r\n                    {!currTask.members.length ? null : <section><h4>Members</h4>\r\n                        <div className=\"member-list\">\r\n                            {currTask.members.map((member, idx) =>\r\n                                <div className=\"member-in-modal\" key={idx}>\r\n                                    <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                </div>)}\r\n                            <button onClick={() => setMemberModal(true)}>+</button>\r\n                        </div>\r\n                    </section>}\r\n\r\n                    <div className=\"desc-svg\"><FontAwesomeIcon icon={faAlignLeft} />\r\n                        <p>Description:</p>\r\n                    </div>\r\n                    <textarea id=\"desc\" name=\"desc\" onClick={() => setIsDesc(!isDesc)} defaultValue={descValue} placeholder=\"Add some detailed description...\" {...register(\"desc\")} defaultValue={taskModalOp.currTask.desc} />\r\n                    {isDesc && <div className=\"saveDesc\"><button onClick={(ev) => { ev.preventDefault(); setIsDesc(!isDesc) }} >Save</button> <button onClick={() => setIsDesc(false)}>x</button> </div>}\r\n                </div>\r\n                {!currTask.checklists.length ? null : <section >\r\n                    {currTask.checklists.map((checklist, listIdx) =>\r\n                        <div className=\"checklist-in-modal\" key={listIdx}>\r\n                            <div className=\"checklist-svg\"> <div className=\"flex\"> <FontAwesomeIcon icon={faList} ></FontAwesomeIcon> <p>{checklist.title}</p></div>\r\n                                <button onClick={() => taskModalOp.addChecklist(listIdx)}>delete list</button>\r\n                            </div>\r\n                            {!checklist.list.length ? null : <div className=\"demo-range-container\">\r\n                                <div className=\"demo-range-checked\" style={{ width: checklist.range + '%' }}></div>\r\n                            </div>}\r\n                            {!checklist.list.length ? null : <span>{checklist.range}%</span>}\r\n                            {!checklist.list.length ? null : checklist.list.map((item, idx) => {\r\n                                return <div className=\"checklist-items\" key={idx}>\r\n                                    <input type=\"checkbox\" id={'checklist-item-' + idx} checked={item.isChecked} onChange={() => {\r\n                                        changeCheckBox(item)\r\n                                        setRange(checklist)\r\n                                    }} />\r\n                                    {item.isChecked ? <label style={{ textDecoration: 'line-through' }}>{item.desc}</label> : <label>{item.desc}</label>}\r\n                                </div>\r\n                            })}\r\n                            <form onSubmit={handleSubmit(res => onSubmitItemInList(res, listIdx))}>\r\n                                <input type=\"text\" autoComplete=\"off\" id={'input-item-' + listIdx} name=\"item\" placeholder=\"add an item\"  {...register('inputItem' + listIdx)} />\r\n                                <button >Add An Item</button>\r\n\r\n                            </form>\r\n                        </div>)}\r\n                </section>}\r\n                <div className=\"task-comment\">\r\n                    <p>Post a Comment:</p>\r\n                    <input type=\"text\" autoComplete=\"off\" id=\"comment\" name=\"comment\" placeholder=\"Write a comment...\"  {...register(\"activity\")} defaultValue={currTask.activity} />\r\n                </div>\r\n            </div>\r\n            <div className=\"add-to-task\">\r\n                <div className=\"right-task-modal\">\r\n                    <h3>Add To Task:</h3>\r\n                    <p onClick={() => taskModalOp.setCurrTask(null)} className=\"btn-close-icon\"><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"right-task-modal-btns\">\r\n                    <div onClick={() => setLabelModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\r\n                        <p> Labels </p>\r\n                    </div>\r\n                    <div onClick={() => setMemberModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n                        <p> Members </p>\r\n                    </div>\r\n                    <div onClick={() => setChecklistModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faList}></FontAwesomeIcon>\r\n                        <p> Checklist </p>\r\n                    </div>\r\n                    <div onClick={() => setDueDateModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                        <p> Due Date </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {(!labelModal) ? null : <LabelModal setLabelModal={setLabelModal} labelModal={labelModal} currTask={currTask} addLabel={taskModalOp.addLabel}  ></LabelModal>}\r\n            {(!memberModal) ? null : <MemberModal setMemberModal={setMemberModal} memberModal={memberModal} currTask={currTask} addMemberToTask={taskModalOp.addMember} ></MemberModal>}\r\n            {(!checklistModal) ? null : <CheckListModal setChecklistModal={setChecklistModal} checklistModal={checklistModal} currTask={currTask} addChecklist={taskModalOp.addChecklist} ></CheckListModal>}\r\n            {(!dueDateModal) ? null : <DueDateModal setDueDateModal={setDueDateModal} dueDateModal={dueDateModal} addDueDate={taskModalOp.addDueDate} currTask={currTask}></DueDateModal>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/homepage.e1823959.png\";","import { useEffect, useState } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport boardService from '../../services/boardService'\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions'\r\nimport Moment from 'react-moment';\r\nimport './BoardMenu.scss'\r\nimport { faChevronLeft, faPalette, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { utilService } from '../../services/utilService'\r\nimport imgLoader from '../../assets/imgs/homepage.png'\r\n\r\nexport function BoardMenu({ boardMenuOp }) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [isAbout, setIsAbout] = useState(false)\r\n    const [isBackground, setIsBackground] = useState(false)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [isLabels, setIsLabels] = useState(false)\r\n    const [cloudImgs, setCloudImgs] = useState(null)\r\n    const [isAddLabel, setIsAddLabel] = useState(false)\r\n    const [filterBy, setFilterBy] = useState({ task: '', labels: [] })\r\n    const colors = ['lightgreen', 'lightyellow', 'lightblue', 'orange', 'slateblue', 'lightpink', 'lightgray', 'white']\r\n\r\n    useEffect(() => {\r\n        setCloudImgs(boardService.getCloudImages())\r\n        sendFilter()\r\n    }, [filterBy])\r\n\r\n    const onSearchTask = data => {\r\n        setFilterBy({ ...filterBy, task: data.searchTask })\r\n    }\r\n\r\n    const onSearchLabel = idx => {\r\n        if (filterBy.labels.includes(boardMenuOp.labels[idx].desc)) {\r\n            const removeIdx = filterBy.labels.findIndex(label => label === boardMenuOp.labels[idx].desc)\r\n            filterBy.labels.splice(removeIdx, 1)\r\n            setFilterBy({ ...filterBy, labels: filterBy.labels })\r\n        }\r\n        else setFilterBy({ ...filterBy, labels: [...filterBy.labels, boardMenuOp.labels[idx].desc] })\r\n    }\r\n\r\n    const sendFilter = () => {\r\n        boardMenuOp.filterTasks(filterBy)\r\n    }\r\n\r\n    const saveLabels = data => {\r\n        const descs = []\r\n        const colors = []\r\n        Object.keys(data).forEach(input => {\r\n            if (input.includes('editBoardLabelColor')) colors.push(input)\r\n            else if (input.includes('editBoardLabel')) descs.push(input)\r\n        })\r\n        const arrValues = Object.values(data)\r\n        arrValues.splice(0, 1)\r\n        const arr1 = []\r\n        const arr2 = []\r\n        arrValues.forEach((val, idx) => {\r\n            if (idx % 2 === 0) arr1.push(val)\r\n            else arr2.push(val)\r\n        })\r\n        const labels = arr1.map((val, idx) => {\r\n            return { desc: arr1[idx], color: arr2[idx] }\r\n        })\r\n        dispatch(saveBoard({ ...currBoard, labels: labels }))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n    const onAddBoardLabel = (data) => {\r\n        const label = { desc: data.addBoardLabel, color: data.addBoardLabelColor }\r\n        currBoard.labels.push(label)\r\n        dispatch(saveBoard(currBoard))\r\n        setIsAddLabel(!isAddLabel)\r\n        boardMenuOp.addActivity('Aviv Zohar', 'added', 'label')\r\n    }\r\n    \r\n    const deleteLabel = (idx) => {\r\n        currBoard.labels.splice(idx, 1)\r\n        dispatch(saveBoard(currBoard))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n        boardMenuOp.addActivity('Aviv Zohar', 'deleted', 'label')\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        boardMenuOp.setIsMenu(false)\r\n        setIsAbout(false)\r\n        setIsBackground(false)\r\n        setIsFilter(false)\r\n        setIsLabels(false)\r\n        onSearchTask('')\r\n    }\r\n\r\n    if (!cloudImgs || !currBoard) return (<div className=\"loader-container\">Loading</div>)\r\n\r\n    return (\r\n        <section className=\"board-menu flex\" style={boardMenuOp.isMenu ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n            <article className=\"menu-main\">\r\n                <div className=\"flex\">\r\n                    <h3>Menu</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}>About this board</p>\r\n                    <p onClick={() => setIsBackground(!isBackground)}>Background</p>\r\n                    <p onClick={() => setIsFilter(!isFilter)}>Search cards</p>\r\n                    <p onClick={() => setIsLabels(!isLabels)}>Labels</p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <h3>Activity</h3>\r\n                    <ul>\r\n                        {currBoard.activity.length && currBoard.activity.map(activity => <li key={activity._id}>\r\n                            {activity.type !== 'Attached' ? <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span>{activity.card === 'board' ? '' : ' card'}.</p>\r\n                                : <p><span>{activity.member}</span> {activity.type} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span> task.</p>}\r\n                            <small><Moment fromNow>{activity.createdAt}</Moment></small>\r\n                            {/* \r\n                            {activity.desc} ------- is sometimes an object, therefore makes errors\r\n                            \r\n                            {activity.type !== 'Attached' ? <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span>{activity.card === 'board' ? '' : ' card'}.</p>\r\n                                : <p><span>{activity.member}</span> {activity.type} ------{activity.desc}------ {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span> task.</p>}\r\n                            <small><Moment fromNow>{activity.createdAt}</Moment></small> */}\r\n                        </li>)}\r\n                        {!currBoard.activity.length && <li><h1>No activity here...</h1></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-about sub-menu\" style={isAbout ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>About this board</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h3>Members</h3>\r\n                    <div>{boardMenuOp.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}</div>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h3>Description</h3>\r\n                    <textarea placeholder=\"Type here a description\" />\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h3>Statistics</h3>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-background sub-menu\" style={isBackground ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsBackground(!isBackground)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Change background</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <div className=\"flex\">\r\n                        <h4>Colors</h4>\r\n                        <div className=\"flex\">\r\n                            {colors.map((color, idx) => <aside key={idx} style={{ backgroundColor: color }} onClick={() => boardMenuOp.changeBackground(color, true)}></aside>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h4>Photos</h4>\r\n                        <div className=\"flex\">\r\n                            {cloudImgs.map((url, idx) => <img key={idx} onClick={() => boardMenuOp.changeBackground(url)} decoding=\"async\" loading=\"lazy\" src={url} alt={url} />)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-filter sub-menu\" style={isFilter ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsFilter(!isFilter)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Search cards</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div>\r\n                    <form onChange={handleSubmit(onSearchTask)}>\r\n                        <input type=\"text\" placeholder=\"Search for task...\" {...register(\"searchTask\")} />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h4>Search by label</h4>\r\n                    <ul>\r\n                        {boardMenuOp.labels.map((label, idx) => <li key={idx} style={{ backgroundColor: filterBy.labels.includes(label.desc) ? 'gray' : 'inherit' }} onClick={() => onSearchLabel(idx)}>\r\n                            <div style={{ backgroundColor: label.color }}></div>\r\n                            <p>{label.desc}</p>\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-labels sub-menu\" style={isLabels ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsLabels(!isLabels)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Labels</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow\">\r\n                    <ul>\r\n                        {boardMenuOp.labels.map((label, idx) => <li key={idx} style={{ backgroundColor: label.color }}>\r\n                            <form onChange={handleSubmit(utilService.debounce(saveLabels, 800))}>\r\n                                <input type=\"text\" defaultValue={label.desc} placeholder=\"Label name\" required {...register(\"editBoardLabel\" + idx)} />\r\n                                <label name=\"label-color\"><FontAwesomeIcon className=\"fa\" icon={faPalette} />\r\n                                    <input type=\"color\" {...register(\"editBoardLabelColor\" + idx)} defaultValue={label.color} /></label>\r\n                            </form>\r\n                            <p><FontAwesomeIcon className=\"fa\" icon={faTimes} onClick={() => deleteLabel(idx)} /></p>\r\n                        </li>)}\r\n                        {!isAddLabel && <li onClick={() => setIsAddLabel(!isAddLabel)}><p>New label</p></li>}\r\n                        {isAddLabel && <li>\r\n                            <form onSubmit={handleSubmit(onAddBoardLabel)}>\r\n                                <input type=\"text\" placeholder=\"Label name\" autoComplete=\"off\" required {...register(\"addBoardLabel\")} />\r\n                                <input type=\"color\" name=\"label-color\" id=\"label-color\" defaultValue=\"#FFFFFF\" {...register(\"addBoardLabelColor\")} />\r\n                                <button>Add label</button>\r\n                            </form>\r\n                            <button onClick={() => setIsAddLabel(!isAddLabel)}>X</button></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n        </section >\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/taskman-loader.d5d52ecc.svg\";","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground } from '../../store/actions/boardActions'\r\nimport { CardPreview } from '../../cmps/CardPreview'\r\nimport './BoardDetails.scss'\r\nimport { TaskModal } from '../../cmps/TaskModal/TaskModal'\r\nimport { useForm } from \"react-hook-form\";\r\nimport boardService from '../../services/boardService'\r\nimport Avatar from 'react-avatar';\r\nimport { BoardMenu } from '../../cmps/BoardMenu'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faCheckCircle, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { utilService } from '../../services/utilService'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nexport function BoardDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm()\r\n    var newCard = boardService.getEmptyCard()\r\n    const [users, setUsers] = useState(boardService.getUsers())\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [currCard, setCurrCard] = useState(null)\r\n    const [currTask, setCurrTask] = useState(null)\r\n    const [isAddCard, setIsAddCard] = useState(null)\r\n    const [isMenu, setIsMenu] = useState(false)\r\n    const [draggedCards, setDraggedCards] = useState(null)\r\n    const [isInvite, setIsInvite] = useState(null)\r\n    const [isCardModal, setIsCardModal] = useState(null)\r\n    const [x, setX] = useState(null)\r\n    const [cardModal, setCardModal] = useState(null)\r\n    const [addMembersToBoard, setMembersToBoard] = useState(null)\r\n    const [isDescShown, setIsDescShown] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateBackground(false))\r\n        const { id } = props.match.params\r\n        if (!currBoard) dispatch(setCurrBoard(id))\r\n        else if (!draggedCards) setDraggedCards(currBoard.cards)\r\n        dispatch(loadBoards())\r\n        if (currBoard?._id) {\r\n            socketService.emit(\"chat topic\", currBoard._id);\r\n        }\r\n        // console.log('render!');\r\n    }, [currBoard])\r\n    useEffect(() => {\r\n        // console.log('currBoard:', currBoard)\r\n    })\r\n\r\n    //Card Drag\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const items = draggedCards;\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        setDraggedCards(items);\r\n    }\r\n\r\n    // Card modal\r\n    const openCardModal = (ev, card) => {\r\n        setX(ev.clientX)\r\n        setIsCardModal(true)\r\n        setCardModal(card)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCardModal(null)\r\n        setIsCardModal(false)\r\n    }\r\n\r\n    // forms\r\n    const setBoardTitle = data => {\r\n        dispatch(saveBoard({ ...currBoard, title: data.boardTitle }))\r\n    }\r\n\r\n    const addMemberToBoard = data => {\r\n        console.log('data:', data)\r\n        var userToAdd = users.filter(user => {\r\n            console.log('user:', user)\r\n\r\n            return user.name.toLowerCase().includes(data.member.toLowerCase())\r\n        })\r\n        if (data.member === '') userToAdd = null\r\n        console.log('userToAdd:', userToAdd)\r\n        // setMembersToBoard(userToAdd)\r\n    }\r\n\r\n    const addLabel = (label) => {\r\n        if (!currTask.labels.length) currTask.labels.push(label)\r\n        else {\r\n            if (currTask.labels.some((currLabel) => currLabel.color === label.color)) {\r\n                //member is already in the Task\r\n                const labelToRemove = currTask.labels.findIndex(currLabel => currLabel.color === label.color)\r\n                currTask.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                currTask.labels.push(label)\r\n            }\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n        addActivity('Aviv Zohar', 'added', 'labal')\r\n    }\r\n\r\n    const addChecklist = (list) => {\r\n        if (typeof list === 'object') currTask.checklists.push(list)\r\n        else {//variable \"list\" is an index of the checklist we want to remove from the array\r\n            currTask.checklists.splice(list, 1);\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addDueDate = (date) => {\r\n        currTask.dueDate = date\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addMember = (member) => {\r\n        console.log('member:', member)\r\n        console.log('currTask.members:', currTask.members)\r\n        if (!currTask.members.length) {\r\n            console.log('first if');\r\n            currTask.members.push(member)\r\n        }\r\n        else if (currTask.members.some((currMember) => currMember._id === member._id)) {\r\n            //     // member is already in the Task\r\n            const memberToRemove = currTask.members.findIndex(currMember => currMember._id === member._id)\r\n            currTask.members.splice(memberToRemove, 1)\r\n        } else {\r\n            currTask.members.push(member)\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n        addActivity('Aviv Zohar', 'Attached', member, currTask.title)\r\n    }\r\n\r\n    const addNewCard = (data) => {\r\n        newCard.title = data.newCardTitle\r\n        currBoard.cards.push(newCard)\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard({ ...currBoard, cards: [...currBoard.cards, newCard] }))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 150)\r\n        newCard = boardService.getEmptyCard()\r\n        setIsAddCard(!isAddCard)\r\n        data.newCardTitle = ''\r\n        addActivity('Aviv Zohar', 'added', 'card')\r\n    }\r\n\r\n    const deleteCard = () => {\r\n        const cardIdx = currBoard.cards.findIndex(card => card._id === currCard._id)\r\n        const boardToSave = boardService.updateBoard(cardIdx, currBoard)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(boardToSave._id))\r\n        addActivity('Aviv Zohar', 'deleted', 'card')\r\n        closeModal()\r\n    }\r\n\r\n    const changeBackground = (background, type) => {\r\n        if (type) {\r\n            addActivity('Aviv Zohar', 'change', 'color')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: background, img: null } }))\r\n        }\r\n        else {\r\n            addActivity('Aviv Zohar', 'change', 'image')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: null, img: background } }))\r\n        }\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n    const removeUserFromBoard = (user) => {\r\n        if (user.boards.includes(currBoard._id)) {\r\n            //עד שלא נעשה יוזר לא נוכל לרנדר את היוזרים\r\n            // -ה USER.BOARD \r\n            // שלהם קבוע, כלומר כל פעם הוא יהיה אותו דבר\r\n            // Why in hebrew?!\r\n            const boardIdx = user.boards.findIndex(board => board._id === currBoard._id)\r\n            user.boards.splice(boardIdx, 1)\r\n        } else {\r\n            user.boards.push(currBoard._id)\r\n        }\r\n    }\r\n\r\n    const filterTasks = (filterBy) => {\r\n        if (filterBy.task || filterBy.labels.length) {\r\n            var cards = currBoard.cards\r\n            if (filterBy.task) {\r\n                cards = currBoard.cards.find(card => {\r\n                    return card.tasks.find(task => {\r\n                        return task.title.includes(filterBy.task)\r\n                    })\r\n                })\r\n            }\r\n            if (filterBy.labels.length) {\r\n                cards = currBoard.cards.find(card => {\r\n                    return card.tasks.find(task => {\r\n                        return task.labels.find(label => label.desc.includes(filterBy.labels))\r\n                    })\r\n                })\r\n            }\r\n            if (!cards || !Object.keys(cards).length) {\r\n                const failCard = boardService.getEmptyCard()\r\n                failCard.title = 'There are no matched tasks.'\r\n                setDraggedCards([failCard])\r\n            } else setDraggedCards([cards])\r\n        } else setDraggedCards(currBoard.cards)\r\n    }\r\n\r\n    const addActivity = (member, type, desc, card = 'board') => {\r\n        const newActivity = { _id: utilService.makeId(), member, type, desc, card, createdAt: Date.now() }\r\n        currBoard.activity.unshift(newActivity)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    if (!currBoard || !draggedCards || !draggedCards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cardPreviewOp = {\r\n        openCardModal,\r\n        closeModal,\r\n        addActivity,\r\n        setCurrCard,\r\n        setCurrTask,\r\n        isDescShown,\r\n        setIsDescShown\r\n    }\r\n\r\n    const boardMenuOp = {\r\n        setIsMenu,\r\n        isMenu,\r\n        changeBackground,\r\n        members: currBoard.members,\r\n        filterTasks,\r\n        labels: currBoard.labels,\r\n        addActivity\r\n    }\r\n\r\n    const taskModalOp = {\r\n        setCurrTask,\r\n        currTask,\r\n        addLabel,\r\n        addMember,\r\n        addChecklist,\r\n        addDueDate\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-details sub-container\">\r\n            <div className=\"board-header flex\">\r\n                <div className=\"flex\">\r\n                    <form onChange={handleSubmit(setBoardTitle)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"boardTitle\")} defaultValue={currBoard.title} />\r\n                    </form>\r\n                    <div className=\"flex\">\r\n                        <div className=\"avatars\">\r\n                            {currBoard.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                        </div>\r\n                        <button onClick={() => setIsInvite(!isInvite)}>Invite</button>\r\n                        {isInvite && <div className=\"invite-members-modal\">\r\n                            <form onChange={handleSubmit(addMemberToBoard)} >\r\n                                <button onClick={() => setIsInvite(!isInvite)}>x</button>\r\n                                <div className=\"invite-title\">\r\n                                    <p>Invite to board:</p>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Search Taskman Members..\" id=\"member\" name=\"member\"  {...register(\"member\")} />\r\n                                </div>\r\n                            </form>\r\n                            {addMembersToBoard && <div className=\"exist-members\">\r\n                                <ul>\r\n                                    {addMembersToBoard.map((member, idx) => {\r\n                                        if (!member.boards.includes(currBoard._id)) return (\r\n                                            <li key={member._id}>\r\n                                                <p>Add members:</p>\r\n                                                <button className=\"suggested-user\">\r\n                                                    <Avatar key={idx} name={member} size=\"30\" round={true} />\r\n                                                    <p>{member}</p>\r\n                                                    <p><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon></p>\r\n                                                </button>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                            </div>}\r\n                            <div className=\"exist-members\">\r\n                                <div className=\"suggested-title\">\r\n                                    <p>Suggested Users:</p>\r\n                                </div>\r\n                                {users.map((user, idx) => {\r\n                                    if (!user.boards.includes(currBoard._id)) return (\r\n                                        <button key={user._id} onClick={() => removeUserFromBoard(user)} className=\"suggested-user\">\r\n                                            <Avatar key={idx} name={user.name} size=\"30\" round={true} />\r\n                                            <p>{user.name}</p>\r\n                                            <p><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon></p>\r\n                                        </button>\r\n\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"exist-members\">\r\n                                <p>In This Board:</p>\r\n                                {users.map((user, idx) => {\r\n                                    if (user.boards.includes(currBoard._id)) return (\r\n                                        <button key={user._id} onClick={() => removeUserFromBoard(user)} className=\"suggested-user\">\r\n                                            <Avatar key={idx} name={user.name} size=\"30\" round={true} />\r\n                                            <p>{user.name}</p>\r\n                                            <p><FontAwesomeIcon icon={faCheckCircle} /></p>\r\n                                        </button>)\r\n                                })}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <p className=\"open-menu-btn\" onClick={() => setIsMenu(true)}><FontAwesomeIcon className=\"fa\" icon={faBars}></FontAwesomeIcon></p>\r\n                    <BoardMenu boardMenuOp={boardMenuOp}></BoardMenu>\r\n                </div>\r\n            </div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"characters\" type=\"TASK\">\r\n                    {(provided) => (\r\n                        <div {...provided.droppableProps} ref={provided.innerRef} className=\"cards-container flex\">\r\n                            <div className=\"flex\">\r\n                                {draggedCards.map((card, idx) =>\r\n                                    <Draggable key={card._id} draggableId={card._id} index={idx}>\r\n                                        {provided => (<div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                            <CardPreview key={card._id} cardPreviewOp={cardPreviewOp} card={card}></CardPreview>\r\n                                        </div>)}\r\n                                    </Draggable>)}\r\n                                {provided.placeholder}\r\n                                {!isAddCard && <button className=\"add-card-btn\" onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faPlus}></FontAwesomeIcon> Add another card</button>}\r\n                                {isAddCard && <form className=\"add-card-container\" onSubmit={handleSubmit(addNewCard)}>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Card name\" id=\"title\" name=\"title\" {...register(\"newCardTitle\")} />\r\n                                    <div className=\"flex\">\r\n                                        <button>Add Card</button>\r\n                                        <p onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faTimes}></FontAwesomeIcon></p>\r\n                                    </div>\r\n                                </form>}\r\n                            </div>\r\n                        </div>)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            {isCardModal && <div style={{ left: `${x}px`, top: `155px` }} className=\"card-modal\">\r\n                <div className=\"card-title-modal\">\r\n                    <p>{cardModal.title}</p>\r\n                    <button onClick={() => closeModal()}>x</button>\r\n                </div>\r\n                <div className=\"card-modal-btns\">\r\n                    <button onClick={deleteCard}>Delete This Card</button>\r\n                </div>\r\n            </div>}\r\n            {currTask && <TaskModal taskModalOp={taskModalOp}></TaskModal>}\r\n        </div>\r\n    )\r\n}","import './LandingPage.scss'\n\nexport function LandingPage() {\n\n    return (\n        <div className=\"sub-container landing-page-container\">\n            <h1>Welcome to Taskman!</h1>\n            <div className=\"landing-page-section\">\n                <div>\n                    <div>\n                        <h3>Stop working alone!</h3>\n                        <p>Join now.</p>\n                    </div>\n                    <img src=\"https://media.giphy.com/media/3oEdv1vkhqxcynkB5C/giphy.gif\" alt=\"\" />\n                </div>\n            </div>\n            <div className=\"landing-page-section\">\n                <div>\n                    <div>\n                        <h3>Suits for all!</h3>\n                        <p>Workspaces, projects, big meetings.</p>\n                    </div>\n                    <img src=\"https://media.giphy.com/media/l0Iybn1vpbUzeqkqQ/giphy.gif\" alt=\"\" />\n                </div>\n            </div>\n        </div>\n    )\n}","import { Link } from 'react-router-dom'\r\nimport './BoardPreview.scss'\r\n\r\nexport function BoardPreview({ board }) {\r\n    \r\n\r\n    return (\r\n        <div className=\"board-link links\" style={board.background.img ? { backgroundImage: `url(${board.background.img})` } : { backgroundColor: board.background.color }}>\r\n            <Link className=\"link\" to={`/board/${board._id}`}>\r\n                <h4>{board.title}</h4>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { BoardPreview } from '../BoardPreview'\r\nimport './BoardList.scss'\r\n\r\nexport function BoardList({ boardListOp }) {\r\n    const { register, handleSubmit } = useForm();\r\n    const [isCreateBoard, setIsCreateBoard] = useState(null)\r\n\r\n    const onAddBoard = data => {\r\n        boardListOp.addBoard(data.newBoardTitle)\r\n        setIsCreateBoard(!isCreateBoard)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"board-container\">\r\n            {boardListOp.boards.map(board => <li key={board._id}><BoardPreview board={board}></BoardPreview></li>)}\r\n            <li className=\"board-link add-board\">\r\n                {!isCreateBoard && <button onClick={() => setIsCreateBoard(!isCreateBoard)}>Create board</button>}\r\n                {isCreateBoard &&\r\n                    <form onSubmit={handleSubmit(onAddBoard)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"newBoardTitle\")} placeholder=\"Board name\" />\r\n                        <h4>Create board</h4>\r\n                    </form>}\r\n            </li>\r\n        </ul>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard } from '../../store/actions/boardActions.js'\r\nimport { BoardList } from '../../cmps/BoardList'\r\nimport './TaskmanApp.scss'\r\nimport boardService from '../../services/boardService.js'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService.js'\r\nexport function TaskmanApp() {\r\n    const dispatch = useDispatch()\r\n    const boards = useSelector(state => state.boardReducer.boards)\r\n    const newBoard = boardService.getEmptyBoard()\r\n    \r\n    useEffect(() => {\r\n        socketService.setup();\r\n        dispatch(loadBoards())\r\n    }, [])\r\n\r\n    const addBoard = (title) => {\r\n        newBoard.title = title\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(loadBoards())\r\n    }\r\n\r\n    if (!boards || !boards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const boardListOp = {\r\n        boards,\r\n        addBoard\r\n    }\r\n\r\n    return (\r\n        <div className=\"sub-container\">\r\n            <h2>Your Workspace boards</h2>\r\n            <BoardList boardListOp={boardListOp}></BoardList>\r\n        </div >\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { BoardDetails } from './pages/BoardDetails';\r\nimport { LandingPage } from './pages/LandingPage';\r\nimport { TaskmanApp } from './pages/TaskmanApp';\r\n\r\nfunction App() {\r\n  const background = useSelector(state => state.boardReducer.background)\r\n  const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n  return (\r\n    <Router>\r\n      <div className=\"App container\" style={!background ? currBoard ? currBoard.background.color ? { backgroundColor: currBoard.background.color } : { backgroundImage: currBoard.background.img ? `url(${currBoard.background.img})` : '' } : { backgroundColor: 'white' } : { backgroundColor: 'white' }}>\r\n        <AppHeader />\r\n        <Switch>\r\n          <Route component={BoardDetails} path='/board/:id?' />\r\n          <Route component={LandingPage} path='/boards' />\r\n          <Route component={TaskmanApp} path='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {\r\n  boards: [],\r\n  currBoard: null,\r\n  background: false,\r\n  filterBy: null,\r\n}\r\n\r\nexport function boardReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return {\r\n        ...state,\r\n        boards: action.boards\r\n      }\r\n    case 'SET_BOARD':\r\n      return {\r\n        ...state,\r\n        currBoard: action.board\r\n      }\r\n    case 'ADD_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.board]\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(board => board._id !== action.boardId)\r\n      }\r\n    case 'UPDATE_BOARD':\r\n      const { updatedBoard } = action\r\n      console.log('updatedBoard:', updatedBoard)\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => board._id === updatedBoard._id ? updatedBoard : board)\r\n      }\r\n    case 'UPDATE_BACKGROUND':\r\n      return {\r\n        ...state,\r\n        background: action.background\r\n      }\r\n    case 'UPDATE_FILTERBY':\r\n      return {\r\n        ...state,\r\n        filterBy: action.filterBy\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer';\r\n// import { userReducer } from './reducers/userReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  boardReducer,\r\n  // userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}