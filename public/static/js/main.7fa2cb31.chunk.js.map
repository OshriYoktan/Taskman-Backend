{"version":3,"sources":["services/http.service.js","services/userService.js","store/actions/userActions.js","assets/imgs/taskman-loader.svg","cmps/UserProfile/UserProfile.jsx","cmps/AppHeader/AppHeader.jsx","services/utilService.js","services/boardService.js","store/actions/boardActions.js","services/socketService.js","cmps/CardPreview/CardPreview.jsx","cmps/LabelEditModal/LabelEditModal.jsx","cmps/LabelModal/LabelModal.jsx","cmps/MemberModal/MemberModal.jsx","cmps/CheckListModal/CheckListModal.jsx","cmps/DueDateModal/DueDateModal.jsx","cmps/DrawNoteModal/DrawNoteModal.jsx","cmps/Cloudinary/Cloudinary.jsx","cmps/CoverModal/CoverModal.jsx","cmps/TaskModal/TaskModal.jsx","cmps/BoardMenu/BoardMenu.jsx","cmps/Notification/Notification.jsx","pages/BoardDetails/BoardDetails.jsx","pages/LandingPage/LandingPage.jsx","cmps/BoardPreview/BoardPreview.jsx","cmps/BoardList/BoardList.jsx","pages/TaskmanApp/TaskmanApp.jsx","App.js","reportWebVitals.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","KEY","id","user","_id","AUTH","query","getUserById","deleteUser","saveUser","getEmptyUser","name","username","password","storage","saveUserToStorage","sessionStorage","setItem","JSON","stringify","loadUserFromStorage","parse","getItem","login","logout","userToLogin","dispatch","userService","type","signup","updateUser","updatedUser","UserProfile","ref","handler","profileOp","isProfile","setIsProfile","useDispatch","useSelector","state","userReducer","useForm","register","handleSubmit","reset","useState","isLogin","setIsLogin","isLoading","setIsLoading","errMsg","setErrMsg","profileRef","useRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","onLogin","loginUsername","loginPass","isLoggedin","onSignup","userToSignup","loginFullname","tasks","isSignup","className","src","loader","alt","style","maxWidth","onClick","icon","faTimes","length","map","task","idx","onSubmit","autoComplete","placeholder","AppHeader","loggedinUser","to","faHome","faUserCircle","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","txt","possible","i","charAt","filter","term","arr","toLocaleLowerCase","board","includes","phone","email","sort","b","debounce","func","timeout","wait","args","later","clearTimeout","setTimeout","getBoardById","deleteBoard","saveBoard","getEmptyBoard","title","members","cards","activity","background","labels","gLabels","images","cloudUrls","getEmptyCard","updateCard","taskToUpdate","cardToUpdate","boardToUpdate","taskIdx","findIndex","t","splice","updateBoard","getCloudImages","getEmptyTask","desc","createdAt","Date","now","dueDate","isWithAttachment","cover","checklists","doneAt","attachments","comments","getCoverColors","gCoverColors","cardIdx","card","loadBoards","filterBy","boardService","boards","updatedBoard","setCurrBoard","boardId","updateBackground","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","CardPreview","props","cardPreviewOp","currBoard","boardReducer","setTasks","isAddTask","setIsAddTask","isEditTitle","setIsEditTitle","newTask","labelsDescToggle","ev","bool","stopPropagation","setIsDescShown","doneAtToggle","newBoard","addTask","push","forSocket","addActivity","handleOnDragEnd","result","destination","items","Array","from","source","index","reorderedItem","boardToSave","backgroundColorDueDate","colorDueDate","setCurrCard","onChange","cardTitle","defaultValue","openCardModal","onDragEnd","droppableId","provided","droppableProps","innerRef","draggableId","setCurrTask","draggableProps","dragHandleProps","backgroundColor","backgroundImage","isDescShown","label","color","faClock","faCheckSquare","format","withTitle","faSquare","faPaperclip","faAlignLeft","faComments","reduce","acc","checklist","list","faList","accTotal","itemInList","isChecked","member","size","round","faPlus","required","window","LabelEditModal","labelEditModal","setLabelEditModal","faChevronLeft","setLabelModal","labelName","labelColor","LabelModal","border","visibility","addLabel","currTask","find","currLabel","faCheckCircle","editLabel","faPencilAlt","position","width","LabelEditRef","MemberModal","searchMembers","setSearchMembers","setMemberModal","users","toLowerCase","searchMember","addMemberToTask","chooseMember","currMember","CheckListModal","formState","errors","setChecklistModal","newChecklistToSend","range","addChecklist","defaultMaterialTheme","createMuiTheme","overrides","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","lightBlue","A700","daySelected","dayDisabled","container","DueDateModal","timeStemp","React","selectedDate","setSelectedDate","setDueDateModal","selectedDateStr","addDueDate","ThemeProvider","theme","utils","DateFnsUtils","disableToolbar","variant","margin","value","date","KeyboardButtonProps","DrawNoteModal","setdrawNoteModal","Cloudinary","setCloudImgs","currCard","cloudOp","sources","sourceKeys","dropboxAppKey","instagramClientId","resourceType","cloudName","uploadPreset","buttonText","height","borderRadius","padding","folder","onSuccess","newAtt","info","secure_url","unshift","original_filename","onFailure","err","logging","customPublicId","eager","use_filename","unique_filename","apiKey","accepts","contentType","CoverModal","coverColors","top","setCoverModal","addCover","attach","crossOrigin","loading","TaskModal","taskModalOp","clientX","setClientX","clientY","setClientY","inputFile","useOnClickOutside","labelModal","labelRef","attNameModal","setAttNameModal","editAttachRef","labelEditRef","coverModal","coverRef","memberModal","memberRef","checklistModal","checklistRef","dueDateModal","dueDateRef","drawNoteModal","setDrawNoteModal","drawNoteRef","isDesc","setIsDesc","setRange","rengeToShow","toFixed","marginTop","taskTitle","faWindowMaximize","display","dueDateSpanText","descValue","preventDefault","listIdx","item","checked","changeCheckBox","textDecoration","idxInList","input","Object","keys","str","inputItem0","inputItem1","inputItem2","inputItem3","inputItem4","onSubmitItemInList","attac","attIdx","offsetLeft","offsetTop","testLog","att","onAttRemove","left","onSubmitAtt","faComment","newComment","timeStamp","comment","fromNow","onEditComment","onRemoveComment","faTag","faUser","addMember","onButtonClick","click","faClipboard","faPalette","BoardMenu","boardMenuOp","isAbout","setIsAbout","isBackground","setIsBackground","isFilter","setIsFilter","isLabels","setIsLabels","setLabels","cloudImgs","isAddLabel","setIsAddLabel","setFilterBy","sendFilter","isMenu","closeMenu","membersTaskLength","onSearchTask","searchTask","filterTasks","saveLabels","entries","forEach","setIsMenu","membersLength","m","inProgress","overdue","completed","membersLabels","membersTasks","dataForMembersChart","datasets","hoverOffset","dataForChart","borderColor","borderWidth","changeBackground","decoding","removeIdx","onSearchLabel","labelId","l","deleteLabel","addBoardLabel","addBoardLabelColor","Notification","notifyOp","isMsg","msg","faExclamationCircle","BoardDetails","newCard","setIsMsg","setMsg","setMembers","containerRef","events","useScrollOnDrag","match","draggedCards","setDraggedCards","addTaskForSockets","updateTask","addNewCardForSockets","deleteTaskForSockets","addLabelForSockets","updateCardForSockets","updateCardTitleForSockets","addActivityForSockets","preMembers","menuRef","cardModal","setCardModal","cardModalRef","setIsCardModal","inviteRef","setIsInvite","isAddCard","setIsAddCard","isInvite","isCardModal","xPosEl","setXPosEl","yPosEl","setYPosEl","addMembersToBoard","setMembersToBoard","c","some","labelToRemove","sendMsg","closeModal","membersInBoard","usersToAdd","memberId","memberToRemove","addNewCard","newCardTitle","newActivity","img","newCards","cardsIds","failCard","onBlur","boardTitle","onAddMember","removeUserFromBoard","faBars","direction","previewProvider","deleteCard","LandingPage","BoardPreview","LinkPrev","BoardList","boardListOp","isCreateBoard","setIsCreateBoard","addBoard","newBoardTitle","TaskmanApp","App","history","useHistory","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fa2cb31.chunk.js","sourcesContent":["import Axios from 'axios'\r\n// import { router } from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from \"./http.service\"\r\n\r\nconst KEY = 'user/'\r\nconst AUTH = 'auth/'\r\n\r\nconst gUsersForBack = [{ name: 'Aviv Zohar', username: 'avivzo9', password: '1234', tasks: [] }, { name: 'Hadar Marom', username: 'hadarMa', password: '1234', tasks: [] }, { name: 'Oshri Yoktan', username: 'OshYok', password: '1234', tasks: [] }]\r\n\r\n// saveUser(gUsersForBack[2])\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getUserById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteUser(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from userService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveUser(user) {\r\n    try {\r\n        if (user._id) return await httpService.put(KEY + user._id, user)\r\n        return await httpService.post(KEY, user)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function login(user) {\r\n    try {\r\n        return await httpService.post(AUTH + 'login', user)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        return await httpService.post(AUTH + 'logout')\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\n// storage\r\nconst storage = {\r\n    saveUserToStorage(user) {\r\n        sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    },\r\n    loadUserFromStorage() {\r\n        return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n    }\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getEmptyUser() {\r\n    return {\r\n        name: '',\r\n        username: '',\r\n        password: ''\r\n    }\r\n}\r\n\r\nexport default {\r\n    query,\r\n    getUserById,\r\n    deleteUser,\r\n    saveUser,\r\n    getEmptyUser,\r\n    storage,\r\n    login,\r\n    logout\r\n}","import userService from \"../../services/userService\"\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    const users = await userService.query()\r\n    const action = { type: 'SET_USERS', users }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function login(userToLogin) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userToLogin)\r\n    if (!user) return\r\n    userService.storage.saveUserToStorage(user)\r\n    const action = { type: 'LOAD_USER', user }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout()\r\n    userService.storage.saveUserToStorage(null)\r\n    const action = { type: 'LOAD_USER', user: null }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function signup(user) {\r\n  return async dispatch => {\r\n    const confirm = await userService.saveUser(user)\r\n    if (!confirm) return `Username - '${user.username}' is already taken.`\r\n    userService.storage.saveUserToStorage(user)\r\n    const action = { type: 'LOAD_USER', user }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function updateUser(user) {\r\n  return async dispatch => {\r\n    const updatedUser = await userService.saveUser(user)\r\n    userService.storage.saveUserToStorage(updatedUser)\r\n    const action = { type: 'UPDATE_USER', updatedUser }\r\n    dispatch(action)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/taskman-loader.d5d52ecc.svg\";","import { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useEffect, useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, logout, signup } from '../../store/actions/userActions'\nimport loader from '../../assets/imgs/taskman-loader.svg'\nimport './UserProfile.scss'\n\nexport function UserProfile({ profileOp }) {\n    const { isProfile, setIsProfile } = profileOp\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.userReducer.user)\n    const { register, handleSubmit, reset } = useForm();\n    const [isLogin, setIsLogin] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [errMsg, setErrMsg] = useState(null)\n\n    const useOnClickOutside = (ref, handler) => {\n        useEffect(() => {\n            const listener = (event) => {\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n                handler(event);\n            };\n            document.addEventListener(\"mousedown\", listener);\n            document.addEventListener(\"touchstart\", listener);\n            return () => {\n                document.removeEventListener(\"mousedown\", listener);\n                document.removeEventListener(\"touchstart\", listener);\n            };\n        }, [ref, handler]);\n    }\n\n    const profileRef = useRef()\n    useOnClickOutside(profileRef, () => setIsProfile(false));\n\n    const closeMenu = () => setIsProfile(false)\n\n    const onLogin = async data => {\n        setErrMsg(null)\n        setIsLoading(true)\n        const userToLogin = { username: data.loginUsername, password: data.loginPass }\n        const isLoggedin = await dispatch(login(userToLogin))\n        if (isLoggedin) setErrMsg(isLoggedin)\n        setIsLoading(false)\n        reset()\n    }\n\n    const onSignup = async data => {\n        setErrMsg(null)\n        setIsLoading(true)\n        const userToSignup = { name: data.loginFullname, username: data.loginUsername, password: data.loginPass, tasks: [] }\n        const isSignup = await dispatch(signup(userToSignup))\n        setIsLoading(false)\n        if (isSignup) setErrMsg(isSignup)\n        setIsProfile(true)\n        reset()\n    }\n\n    const onLogout = () => {\n        dispatch(logout())\n        setIsProfile(false)\n    }\n\n    if (isLoading) return (<div className=\"profile-loader login-form\"><img src={loader} alt=\"\" /></div>)\n\n    return (\n        <>\n            {user && <section ref={profileRef} className=\"user-menu\" style={isProfile ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n                <div>\n                    <h3>Profile</h3>\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\n                </div>\n                <div>\n                    <p>{user.username}</p>\n                    <p>{user.tasks.length ? 'Tasks:' : 'No tasks assigned.'}</p>\n                </div>\n                <div>\n                    <ul>\n                        {!user.tasks.length ? null : user.tasks.map((task, idx) => <li key={idx}>{task}</li>)}\n                        {!user.tasks.length ? null : <li>{user.tasks.length} tasks.</li>}\n                        {user.tasks ? null : <li>{user.tasks.length}</li>}\n                    </ul>\n                </div>\n                <div>\n                    <button onClick={onLogout}>Logout</button>\n                </div>\n            </section>}\n            {!user && <section ref={profileRef} className=\"login-form\" style={isProfile ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n                <h3>{isLogin ? 'Login' : 'Signup'}</h3>\n                {isLogin && <form onSubmit={handleSubmit(onLogin)}>\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"username\" {...register(\"loginUsername\")} />\n                    <input type=\"password\" autoComplete=\"off\" placeholder=\"password\" {...register(\"loginPass\")} />\n                    <button>Login</button>\n                </form>}\n                {!isLogin && <form onSubmit={handleSubmit(onSignup)}>\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"fullname\" {...register(\"loginFullname\")} />\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"username\" {...register(\"loginUsername\")} />\n                    <input type=\"password\" autoComplete=\"off\" placeholder=\"password\" {...register(\"loginPass\")} />\n                    {errMsg && <p>{errMsg}</p>}\n                    <button>Signup</button>\n                </form>}\n                {isLogin && <p onClick={() => setIsLogin(!isLogin)}>Not a registered user?<br />Click here to sign-up.</p>}\n                {!isLogin && <p onClick={() => setIsLogin(!isLogin)}>Registered user?<br />Click here to login.</p>}\n            </section>}\n        </>\n    )\n}","import { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './AppHeader.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { UserProfile } from '../UserProfile'\r\nimport { useEffect, useState } from 'react'\r\nimport { login } from '../../store/actions/userActions'\r\nimport userService from '../../services/userService'\r\n\r\nexport function AppHeader() {\r\n    const dispatch = useDispatch()\r\n    const [isProfile, setIsProfile] = useState(false)\r\n    const loggedinUser = userService.storage.loadUserFromStorage()\r\n\r\n    useEffect(() => {\r\n        if (loggedinUser) dispatch(login(loggedinUser))\r\n    }, [])\r\n\r\n    const profileOp = {\r\n        setIsProfile,\r\n        isProfile\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"app-header sub-container\">\r\n                <Link className=\"link\" to=\"/boards\" ><FontAwesomeIcon icon={faHome} /></Link>\r\n                <Link className=\"link\" to=\"/boards\" >Taskman</Link>\r\n                <button className=\"link\" onClick={() => setIsProfile(!isProfile)} ><FontAwesomeIcon icon={faUserCircle} /></button>\r\n            </nav>\r\n            <UserProfile profileOp={profileOp} />\r\n        </>\r\n    )\r\n}\r\n","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  filter,\r\n  sort,\r\n  debounce,\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n  var txt = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction filter(term, arr) {\r\n  term = term.toLocaleLowerCase()\r\n  return arr.filter(board => {\r\n    return board.name.toLocaleLowerCase().includes(term) ||\r\n      board.phone.toLocaleLowerCase().includes(term) ||\r\n      board.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait = 1000) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}","import { httpService } from \"./http.service\"\r\nimport { utilService } from \"./utilService\"\r\nconst KEY = 'board/'\r\n\r\nexport default {\r\n    query,\r\n    getBoardById,\r\n    deleteBoard,\r\n    saveBoard,\r\n    getEmptyBoard,\r\n    getEmptyCard,\r\n    updateCard,\r\n    updateBoard,\r\n    getCloudImages,\r\n    getEmptyTask,\r\n    getCoverColors,\r\n}\r\n\r\nconst cloudUrls = [\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621015877/taskman/jared-verdi-PNKwdJ8WetM-unsplash_aabpzg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016569/taskman/zsofia-szalay-TbrzJbcacnQ-unsplash_bst628.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016567/taskman/the-nigmatic-lUnLaEWzcz8-unsplash_vcfxju.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016565/taskman/steve-johnson-274PPmlOjyQ-unsplash_twaarr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/omer-salom-LoijtQXXNhs-unsplash_w6cs4h.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/jonny-gios-h_XcnLbDc_0-unsplash_lhi5si.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/inaki-del-olmo-IRCzpl2YYKE-unsplash_tpzeyw.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/joel-holland-TRhGEGdw-YY-unsplash_dqapzs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016558/taskman/ian-schneider-TamMbr4okv4-unsplash_r85bnj.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016557/taskman/mohammad-alizade-CDu0x1Aiils-unsplash_jqizxr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016556/taskman/mohammad-alizade-62t_kKa2YlA-unsplash_rbytvb.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016555/taskman/mohamed-rishfaan-ir_65wcK_DA-unsplash_qgfljs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016554/taskman/ines-mills-TGs0tHMk4eg-unsplash_bkqpbf.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/erol-ahmed-aIYFR0vbADk-unsplash_g8hmym.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/duy-thanh-nguyen-ZeoSVUcWjfY-unsplash_z4qs2l.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016550/taskman/fransiskus-filbert-mangundap-C9hqYikX34w-unsplash_mqj9zi.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016548/taskman/arpad-spodni-KbKQY_LjmuE-unsplash_fqlcyv.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016546/taskman/dave-hoefler-PkQH-GHEp0A-unsplash_jfurlc.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016544/taskman/fabrice-villard-Du41jIaI5Ww-unsplash_kqcna2.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/estee-janssens-aQfhbxailCs-unsplash_slddqg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/angel-luciano-XQJ0BBSvTs0-unsplash_d7advt.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016538/taskman/callum-wale-V8j3F6Ik9_s-unsplash_clbkte.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016537/taskman/braden-jarvis-prSogOoFmkw-unsplash_sgtmnd.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016534/taskman/danielle-macinnes-IuLgi9PWETU-unsplash_u9xmg7.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016533/taskman/carolyn-christine-D7bmnvGJA2Q-unsplash_oz27jz.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621018122/taskman/vlad-kutepov-WYJ9c7uSdnU-unsplash_c2g6gy.jpg',\r\n]\r\nconst gLabels = [{ \"_id\": utilService.makeId(), \"desc\": \"Copy Request\", \"color\": \"#61BD4F\" }, { \"_id\": utilService.makeId(), \"desc\": \"One more step\", \"color\": \"#F2D600\" }, { \"_id\": utilService.makeId(), \"desc\": \"Design Team\", \"color\": \"#FF9F1A\" }, { \"_id\": utilService.makeId(), \"desc\": \"Product Marketing\", \"color\": \"#EB5A46\" }, { \"_id\": utilService.makeId(), \"desc\": \"Trello Tip\", \"color\": \"#C377E0\" }, { \"_id\": utilService.makeId(), \"desc\": \"Help\", \"color\": \"#0079BF\" }, { \"_id\": utilService.makeId(), \"desc\": \"Priority\", \"color\": \"#51E898\" }]\r\nconst gCoverColors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#5ba4cf', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\n// const newBoard = getEmptyBoard()\r\n// newBoard.title = 'Taskman board'\r\n// saveBoard(newBoard)\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteBoard(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from boardService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveBoard(board) {\r\n    try {\r\n        if (board._id) return await httpService.put(KEY + board._id, board)\r\n        return await httpService.post(KEY, board)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nfunction updateCard(taskToUpdate, cardToUpdate, boardToUpdate) {\r\n    // if you want to delete a task use the func and send the idx ----updateBoard(idx)----\r\n    if (typeof (taskToUpdate) !== 'number') {\r\n        const taskIdx = cardToUpdate.tasks.findIndex(t => t._id === taskToUpdate._id)\r\n        cardToUpdate.tasks.splice(taskIdx, 1, taskToUpdate)\r\n    } else {\r\n        cardToUpdate.tasks.splice(taskToUpdate, 1)\r\n    }\r\n    return updateBoard(cardToUpdate, boardToUpdate)\r\n}\r\n\r\nfunction updateBoard(cardToUpdate, boardToUpdate) {\r\n    if (typeof (cardToUpdate) !== 'number') {\r\n        const cardIdx = boardToUpdate.cards.findIndex(card => card._id === cardToUpdate._id)\r\n        boardToUpdate.cards.splice(cardIdx, 1, cardToUpdate)\r\n    } else {\r\n        boardToUpdate.cards.splice(cardToUpdate, 1)\r\n    }\r\n    const updatedBoard = { ...boardToUpdate, cards: [...boardToUpdate.cards] }\r\n    return updatedBoard;\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getCloudImages() {\r\n    return cloudUrls;\r\n}\r\n\r\nfunction getCoverColors() {\r\n    return gCoverColors;\r\n}\r\n\r\nfunction getEmptyBoard() {\r\n    return {\r\n        title: '',\r\n        members: [],\r\n        cards: [{ _id: utilService.makeId(), title: 'Your first card!', tasks: [] }],\r\n        activity: [],\r\n        background: [],\r\n        labels: gLabels,\r\n        images: cloudUrls\r\n    }\r\n}\r\n\r\nfunction getEmptyCard() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        tasks: []\r\n    }\r\n}\r\n\r\nfunction getEmptyTask() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        desc: '',\r\n        createdAt: Date.now(),\r\n        labels: [],\r\n        dueDate: '',\r\n        activity: [],\r\n        members: [],\r\n        isWithAttachment: false,\r\n        cover: '',\r\n        checklists: [],\r\n        doneAt: '',\r\n        attachments: [],\r\n        comments: []\r\n    }\r\n}","import boardService from '../../services/boardService'\r\n\r\nexport function loadBoards(filterBy) {\r\n  return async dispatch => {\r\n    const boards = await boardService.query(filterBy)\r\n    const action = { type: 'SET_BOARDS', boards }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function getBoardById(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    await dispatch({ type: 'SET_BOARD', board })\r\n    return board\r\n  }\r\n}\r\nexport function saveBoard(board) {\r\n  return async dispatch => {\r\n    const updatedBoard = await boardService.saveBoard(board)\r\n    console.log('updatedBoard:', updatedBoard)\r\n    if (!board._id) return dispatch({ type: 'ADD_BOARD', board: updatedBoard })\r\n    else return dispatch({ type: 'UPDATE_BOARD', updatedBoard })\r\n  }\r\n}\r\nexport function setCurrBoard(boardId) {\r\n  return async dispatch => {\r\n    var board = null\r\n    if (boardId) board = await boardService.getBoardById(boardId)\r\n    dispatch({ type: 'SET_BOARD', board })\r\n  }\r\n}\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    await boardService.remove(boardId)\r\n    dispatch({ type: 'REMOVE_BOARD', boardId })\r\n  }\r\n}\r\nexport function updateBackground(background) {\r\n  return async dispatch => {\r\n    await dispatch({ type: 'UPDATE_BACKGROUND', background })\r\n  }\r\n}\r\nexport function updateFilterBy(filterBy) {\r\n  return async dispatch => {\r\n    await dispatch({ type: 'UPDATE_FILTERBY', filterBy })\r\n  }\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nfunction createSocketService() {\r\n    var socket\r\n    const socketService = {\r\n        setup() {\r\n            socket = io(baseUrl)\r\n        },\r\n        on(eventName, cb) {\r\n            if (!socket) socketService.setup();\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb = null) {\r\n            if (!socket) socketService.setup();\r\n            if (!cb) socket.removeAllListeners(eventName)\r\n            else socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            if (!socket) socketService.setup();\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        }\r\n    }\r\n    return socketService\r\n}","import { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport boardService from '../../services/boardService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faList, faTimes, faClock, faSquare, faPlus, faPaperclip, faAlignLeft, faComments } from '@fortawesome/free-solid-svg-icons'\r\nimport './CardPreview.scss'\r\nimport Avatar from 'react-avatar';\r\nimport Moment from 'react-moment';\r\nimport { socketService } from '../../services/socketService';\r\n\r\nexport function CardPreview(props) {\r\n    const { card, cardPreviewOp } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [tasks, setTasks] = useState(card.tasks)\r\n    const [isAddTask, setIsAddTask] = useState(null)\r\n    const [isEditTitle, setIsEditTitle] = useState(false)\r\n    var newTask = boardService.getEmptyTask()\r\n\r\n    useEffect(() => {\r\n        setIsEditTitle(!isEditTitle)\r\n    }, [currBoard])\r\n\r\n    const setCardTitle = data => {\r\n        card.title = data.cardTitle\r\n        const boardToUpdate = boardService.updateBoard(card, currBoard)\r\n        socketService.emit('card to-update-card', card)\r\n        socketService.emit('card to-update-card-title', card)\r\n        setIsEditTitle(false)\r\n        dispatch(saveBoard(boardToUpdate))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const labelsDescToggle = (ev, bool) => {\r\n        ev.stopPropagation()\r\n        cardPreviewOp.setIsDescShown(bool)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const doneAtToggle = (ev, task) => {\r\n        ev.stopPropagation()\r\n        if (!task.doneAt) task.doneAt = Date.now()\r\n        else task.doneAt = ''\r\n        socketService.emit('task to-update-task', { card, task })\r\n        const newBoard = boardService.updateCard(task, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addTask = async data => {\r\n        newTask.title = data.newTask\r\n        tasks.push(newTask)\r\n        setTasks(tasks)\r\n        const newBoard = boardService.updateCard(newTask, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        setIsAddTask(!isAddTask)\r\n        const forSocket = { task: newTask, card: card._id }\r\n        socketService.emit('task to-add-task', forSocket);\r\n        cardPreviewOp.addActivity('Guest', 'added', 'task', card.title)\r\n        newTask = boardService.getEmptyTask()\r\n        reset({ newTask: '' })\r\n    }\r\n\r\n    const handleOnDragEnd = async (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(tasks);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        card.tasks = items\r\n        setTasks(card.tasks);\r\n        const boardToSave = await boardService.updateBoard(card, currBoard)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? '#F4F5F7' : '#ec9488')\r\n    }\r\n\r\n    const colorDueDate = (task) => {\r\n        return task.doneAt ? 'white' : ((task.dueDate > Date.now()) ? '#8b95a7' : 'white')\r\n    }\r\n    return (\r\n        <div className=\"board-card\" onClick={() => cardPreviewOp.setCurrCard(card)}>\r\n            <div className=\"hide-overflow\">\r\n                <div className=\"title\">\r\n                    <form onChange={handleSubmit(setCardTitle)}>\r\n                        <input type=\"text\" {...register(\"cardTitle\")} defaultValue={card.title} placeholder=\"Card name\" autoComplete=\"off\" />\r\n                    </form>\r\n                    <div onClick={(ev) => cardPreviewOp.openCardModal(ev, card)} className=\"manage-card\"><p>⋮</p></div>\r\n                </div>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"tasks\">\r\n                        {(provided) => (\r\n                            <ul {...provided.droppableProps} ref={provided.innerRef} className=\"tasks-container\">\r\n                                {tasks.map((task, idx) => {\r\n                                    return (\r\n                                        <Draggable key={task._id} draggableId={task._id} index={idx}>\r\n                                            {(provided) => (\r\n                                                <li onClick={() => cardPreviewOp.setCurrTask(task)} key={task._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className=\"card-task\">\r\n                                                    {(!task.cover) ? null : (task.cover.includes('#')) ? <div className=\"task-cover-color\" style={{ backgroundColor: `${task.cover}` }} ></div> : <div className=\"task-cover-img\" style={{ backgroundImage: `url(${task.cover}) ,url(https://images.unsplash.com/photo-1563718428108-a2420c356c5c?ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDV8Ym84alFLVGFFMFl8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60)` }}></div>}\r\n                                                    <div className=\"label-color-to-preview-container\">\r\n                                                        {!cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, true)}></label>)}\r\n                                                        {cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-open-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, false)}>{label.desc}</label>)}\r\n                                                    </div>\r\n                                                    <span>{task.title}</span>\r\n                                                    <section className=\"container-of-all\">\r\n                                                        <section className=\"buttom-preview-info\">\r\n                                                            {!task.dueDate ? null : !task.doneAt ?\r\n                                                                <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                    <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-home\" icon={faSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                                </div> :\r\n                                                                <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                    <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-check-square\" icon={faCheckSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                                </div>}\r\n                                                            {!task.attachments.length ? null : <div><FontAwesomeIcon icon={faPaperclip} /> {task.attachments.length} </div>}\r\n                                                            {!task.desc ? null : <div><FontAwesomeIcon icon={faAlignLeft} /></div>}\r\n                                                            {!task.comments.length ? null : <div><FontAwesomeIcon icon={faComments} />{task.comments.length}</div>}\r\n                                                            {(!task.checklists.length || (task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0) <= 0)) ? null :\r\n                                                                < p > <FontAwesomeIcon icon={faList} />{task.checklists.reduce((accTotal, checklist) => {\r\n                                                                    return accTotal + checklist.list.reduce((acc, itemInList) => itemInList.isChecked + acc, 0)\r\n                                                                }, 0)}/\r\n                                                        {task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0)}\r\n                                                                </p>}\r\n                                                        </section>\r\n                                                        {!task.members.length ? null : <div className=\"avatar-card-preview\">\r\n                                                            {task.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                                                        </div>}\r\n                                                    </section>\r\n                                                </li>\r\n                                            )}</Draggable>)\r\n                                })}{provided.placeholder}\r\n                            </ul>)}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                {!isAddTask && <button className=\"add-task-btn\" onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> Add task</button>}\r\n                {isAddTask && <form className=\"add-task-container\" onSubmit={handleSubmit(addTask)}>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" autoComplete=\"off\" required {...register(\"newTask\")} placeholder=\"Enter a title for this card…\" defaultValue={newTask.title} />\r\n                    <div className=\"add-task-btns\">\r\n                        <button>Add Task</button>\r\n                        <p onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                    </div>\r\n                </form>}\r\n            </div>\r\n        </div >\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelEditModal.scss'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveBoard } from '../../store/actions/boardActions';\r\n\r\nexport function LabelEditModal(props) {\r\n    const { labelEditModal, currBoard } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n\r\n\r\n    const onChangeEditLabel = (data) => {\r\n        labelEditModal.desc = data.labelName\r\n        labelEditModal.color = data.labelColor\r\n        props.setLabelModal(labelEditModal)\r\n        dispatch(saveBoard({ ...currBoard }))\r\n\r\n    }\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <div className=\"labels-edit-modal-header\">\r\n                <button onClick={() => props.setLabelEditModal(false)}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                <h3>Edit Label</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"label-edit-details\">\r\n                <form onChange={handleSubmit(res => onChangeEditLabel(res))}>\r\n                    <p>Name:</p>\r\n                    <input type=\"text\" name=\"edit-name\" autoComplete=\"off\" defaultValue={labelEditModal.desc} {...register('labelName')} />\r\n                    <p>Color:</p>\r\n                    <input type=\"color\" name=\"edit-color\" className=\"edit-color\" defaultValue={labelEditModal.color} {...register('labelColor')} />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport boardService from '../../services/boardService'\r\nimport { LabelEditModal } from '../LabelEditModal/LabelEditModal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faPencilAlt, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelModal.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function LabelModal(props) {\r\n    const [labelEditModal, setLabelEditModal] = useState(null)\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const labels = currBoard.labels\r\n\r\n    const chooseLabel = (color) => {\r\n        props.addLabel(color)\r\n    }\r\n\r\n    const editLabel = (ev, label) => {\r\n        ev.stopPropagation()\r\n        setLabelEditModal(label)\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            {  <div className=\"label-modal\" style={!labelEditModal ? { maxWidth: '280px' } : { maxWidth: 0, border: 'none', visibility: 'visible' }}>\r\n                <div className=\"labels-modal-header\">\r\n                    <h3>Labels</h3>\r\n                    <p className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <ul className=\"label-container\">\r\n                    {labels.map((label, idx) => {\r\n                        return <li onClick={() => chooseLabel(label)} key={idx}  >\r\n                            <div className=\"label-to-show\" style={{ backgroundColor: `${label.color}` }}>\r\n                                <span>{label.desc}</span>\r\n                                <span>{(props.currTask.labels.find((currLabel) => currLabel.color === label.color) ? <FontAwesomeIcon className=\"fa\" icon={faCheckCircle} /> : null)}</span>\r\n                            </div>\r\n                            <button className=\"edit-label-btn\" onClick={(ev) => editLabel(ev, label)}><FontAwesomeIcon icon={faPencilAlt} /></button>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            { labelEditModal && <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={props.LabelEditRef}><LabelEditModal setLabelModal={props.setLabelModal} currBoard={currBoard} labelEditModal={labelEditModal} setLabelEditModal={setLabelEditModal} addLabel={props.addLabel}></LabelEditModal></div>}\r\n        </section >\r\n    )\r\n}\r\n\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './MemberModal.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Avatar from 'react-avatar'\r\nimport { socketService } from '../../services/socketService'\r\nimport { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport function MemberModal(props) {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [searchMembers, setSearchMembers] = useState(currBoard.members)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSearchMember = data => {\r\n        const users = currBoard.members.filter(user => {\r\n            return user.name.toLowerCase().includes(data.searchMember.toLowerCase())\r\n        })\r\n        if (!users.length) users.push({ _id: \"failMember\", name: \"Member not found.\" })\r\n        console.log('users:', users)\r\n        setSearchMembers(users)\r\n    }\r\n    const chooseMember = (member) => {\r\n        // socketService.emit(\"add-member-to-task\", member);\r\n        props.addMemberToTask(member._id)\r\n    }\r\n    const chooseMemberForSockets = (member) => {\r\n        console.log('workes');\r\n        console.log('member:', member)\r\n        props.addMemberToTask(member)\r\n    }\r\n    useEffect(() => {\r\n        socketService.on(\"add-member-to-task-from-back\", (() => {\r\n            console.log('workes');\r\n        }))\r\n        // socketService.on(\"add-member-to-task-from-back\", chooseMemberForSockets)\r\n    })\r\n\r\n    return (\r\n        <div className=\"member-modal\" >\r\n            <div className=\"member-modal-header\">\r\n                <h3>Members</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setMemberModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <ul className=\"member-container\">\r\n                <form onChange={handleSubmit(onSearchMember)}>\r\n                    <input autoComplete=\"off\" {...register(\"searchMember\")} type=\"text\" placeholder=\"Search members...\" />\r\n                </form>\r\n                <p>Members:</p>\r\n                {searchMembers.map(member => member._id !== 'failMember' ? <li onClick={() => chooseMember(member)} key={member._id} className=\"members-list\" >\r\n                    <div className=\"member-details\">\r\n                        <Avatar key={member._id} name={member.name} size=\"30\" round={true} />\r\n                    </div>\r\n                    <span>{member.name}</span>\r\n                    <span className=\"member-icon\" >{(props.currTask.members.find((currMember) => currMember._id === member._id) ? <FontAwesomeIcon icon={faCheckCircle}> </FontAwesomeIcon> : null)}</span></li> :\r\n                    <li className=\"members-list\" key={member._id}><span>{member.name}</span></li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport './CheckListModal.scss'\r\n\r\nexport function CheckListModal(props) {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const setTitle = data => {\r\n        const newChecklistToSend = { title: data.title, list: [], range: 0 }\r\n        props.addChecklist(newChecklistToSend)\r\n        props.setChecklistModal(false)\r\n    }\r\n    console.log('props.currTask.cover:', props.currTask.cover)\r\n    return (\r\n        <div className=\"checklist-modal\" >\r\n            <section className=\"checklist-modal-header\">\r\n                <h3>Add Checklist</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setChecklistModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form className=\"checklist-modal-main\" onSubmit={handleSubmit(setTitle)}>\r\n                <label>Title</label>\r\n                <input type=\"text\" autoComplete=\"off\" id=\"title\" name=\"title\"  {...register(\"title\")} defaultValue='' />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import 'date-fns';\r\nimport './DueDateModal.scss'\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { lightBlue } from '@material-ui/core/colors';\r\n\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n    overrides: {\r\n        MuiPickersCalendarHeader: {\r\n            switchHeader: {\r\n                backgroundColor: 'inherit',\r\n                color: '#172b4d',\r\n            },\r\n        },\r\n        MuiPickersDay: {\r\n            day: {\r\n                color: lightBlue.A700,\r\n            },\r\n            daySelected: {\r\n                color: '#fff !important',\r\n                backgroundColor: 'rgb(66, 82, 110)',\r\n            },\r\n            dayDisabled: {\r\n                color: lightBlue[\"100\"],\r\n            },\r\n            container:{\r\n                backgroundColor:\"black\"\r\n            },\r\n            current: {\r\n                color: 'rgb(0, 82, 204)',\r\n                border: 'rgb(0, 82, 204) 2px solid',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport function DueDateModal(props) {\r\n\r\n    const timeStemp = Date.now() + 604800000 //the default is next week\r\n    const defaultNextWeek = new Date(Date.now() + 604800000);\r\n    const [selectedDate, setSelectedDate] = React.useState(timeStemp);\r\n\r\n    const submit = () => {\r\n        var selectedDateStr = Date.parse(selectedDate)\r\n        props.addDueDate(selectedDateStr)\r\n        props.setDueDateModal(false)\r\n    }\r\n    return (\r\n        <div className=\"due-date-modal\">\r\n            <section className=\"due-date-modal-header\">\r\n                <h3>Due Date</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setDueDateModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form onSubmit={submit}>\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"static\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Pick A Deadline\"\r\n                            value={selectedDate}\r\n                            onChange={(date) => setSelectedDate(date)}\r\n                            KeyboardButtonProps={{ 'aria-label': 'change date', }}\r\n                        ></KeyboardDatePicker>\r\n                    </MuiPickersUtilsProvider>\r\n                </ThemeProvider>\r\n                <button >save</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n","import './DrawNoteModal.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nexport function DrawNoteModal(props) {\r\n    useEffect(() => {\r\n        // console.log('in here');\r\n    })\r\n    const [color, setColor] = useState('#000000')\r\n    return (\r\n        <div className=\"draw-note-modal\">\r\n            <section className=\"draw-note-modal-header\">\r\n                <h3>Draw Note</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setdrawNoteModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <section className=\"draw-note-modal-body\">\r\n                <div className=\"canvas-container\">\r\n                    {/* <CanvasToDraw color={color} ></CanvasToDraw> */}\r\n                </div>\r\n                <h1>nanananana</h1>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Widget } from 'react-cloudinary-upload-widget'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport boardService from '../../services/boardService'\r\nimport { utilService } from '../../services/utilService'\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions'\r\nimport './Cloudinary.scss'\r\n\r\nexport function Cloudinary({ type, txt, currTask, currCard, setCloudImgs, cloudOp }) {\r\n    const dispatch = useDispatch()\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n\r\n    const onAttAdd = (res) => {\r\n        console.log('type:', type)\r\n        var newAtt\r\n        if (type === 'cover') {\r\n            currTask.cover = res.info.secure_url\r\n            console.log('res.info.secure_url:', res.info.secure_url)\r\n            // newAtt = { _id: utilService.makeId(), title: res.info.original_filename, src: res.info.secure_url }\r\n            // currTask.attachments.push(newAtt)\r\n            cloudOp.updateBoard(currTask)\r\n            // const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n            // dispatch(saveBoard(newBoard))\r\n            // dispatch(setCurrBoard(newBoard._id))\r\n        }\r\n        else if (type === 'background') {\r\n            currBoard.images.unshift(res.info.secure_url)\r\n            setCloudImgs(currBoard.images)\r\n            dispatch(saveBoard(currBoard))\r\n            dispatch(setCurrBoard(currBoard._id))\r\n        }\r\n        else {\r\n            newAtt = { _id: utilService.makeId(), title: res.info.original_filename, src: res.info.secure_url }\r\n            currTask.attachments.push(newAtt)\r\n            cloudOp.updateBoard(currTask)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"cloudinary-container\">\r\n            <Widget\r\n                sources={['local', 'camera', 'url', 'dropbox', 'instagram']}\r\n                sourceKeys={{ dropboxAppKey: 'idwo4j2egt6411m', instagramClientId: '14c890ce047a8defd4410d4bd0b1d823' }}\r\n                resourceType={'image'}\r\n                cloudName={'dtu0lzwpw'}\r\n                uploadPreset={'aywupxtw'}\r\n                buttonText={txt || 'Attachments'}\r\n                style={{\r\n                    color: 'inherit',\r\n                    border: 'none',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    backgroundColor: 'inherit',\r\n                    borderRadius: '5px',\r\n                    padding: 0\r\n                }}\r\n                folder={'taskman'}\r\n                onSuccess={onAttAdd}\r\n                onFailure={err => console.log(err)}\r\n                logging={false}\r\n                customPublicId={'sample'}\r\n                eager={'w_400,h_300,c_pad|w_260,h_200,c_crop'}\r\n                use_filename={true}\r\n                unique_filename={true}\r\n                apiKey={639164948471337}\r\n                accepts={'application/json'}\r\n                contentType={'application/json'}\r\n                withCredentials={true}\r\n            />\r\n        </section>\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService'\r\nimport Color from 'color-thief-react';\r\nimport './CoverModal.scss'\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\n\r\nexport function CoverModal(props) {\r\n    const coverColors = boardService.getCoverColors()\r\n\r\n    return (\r\n        <section className=\"cover-modal\" style={!props.currTask.cover ? { top: '175px' } : null}>\r\n            <div className=\"cover-modal-header\">\r\n                <h3>Cover</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setCoverModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"cover-modal-body\">\r\n                <h4>COLORS:</h4>\r\n                <div className=\"cover-color-container\">\r\n                    {coverColors.map((color, idx) => <span className=\"cover-color\" key={idx} onClick={() => props.addCover(color)} style={{ backgroundColor: color }}></span>)}\r\n                </div>\r\n                {!props.currTask.attachments.length ?null: < div >\r\n                    <h4>ATTACHMENTS:</h4>\r\n                    <div className=\"cover-attachments-container\">\r\n                        {props.currTask.attachments.map((attach) => {\r\n                            return <Color crossOrigin=\"anonymous\" key={attach._id} src={attach.src} format=\"hex\">\r\n                                {({ data, loading }) => {\r\n                                    if (loading) return <div>Loading...</div>;\r\n                                    return <div className=\"cover-attach\" style={{ backgroundColor: data, backgroundImage: `url(${attach.src})` }} onClick={() => props.addCover(attach.src)} />\r\n                                }}\r\n                            </Color>\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n                \r\n                <Cloudinary cloudOp={props.cloudOp} currCard={props.currCard} className=\"add-attachment-cover-btn\" txt='Upload photo' type='cover' currTask={props.currTask} />\r\n                {props.currTask.cover && <button className=\"remove-cover-btn\" onClick={() => props.addCover('')}>Remove cover</button>}\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAlignLeft, faClock, faList, faTag, faTimes, faUser, faCheckSquare, faWindowMaximize, faPaperclip, faClipboard, faPlus, faComment, faPalette } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService.js'\r\nimport './TaskModal.scss'\r\nimport Avatar from 'react-avatar';\r\nimport { LabelModal } from '../LabelModal/LabelModal';\r\nimport { MemberModal } from '../MemberModal/MemberModal';\r\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DueDateModal } from '../DueDateModal/DueDateModal.jsx';\r\nimport { DrawNoteModal } from '../DrawNoteModal/DrawNoteModal.jsx';\r\nimport { CoverModal } from '../CoverModal/CoverModal.jsx';\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport Moment from 'react-moment';\r\nimport { utilService } from '../../services/utilService.js';\r\nimport { socketService } from '../../services/socketService.js';\r\nimport Color from 'color-thief-react';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary.jsx';\r\n\r\nexport function TaskModal({ taskModalOp }) {\r\n    const { currTask, currBoard } = taskModalOp\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [clientX, setClientX] = useState(null)\r\n    const [clientY, setClientY] = useState(null)\r\n    const [urlImg, setUrlImg] = useState(false)\r\n    const [isComment, setIsComment] = useState(null)\r\n    //-------------------------onClickOutside----------------------------\\\\\r\n    const inputFile = useRef(null)\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(\r\n            () => {\r\n                const listener = (event) => {\r\n                    if (!ref.current || ref.current.contains(event.target)) {\r\n                        return;\r\n                    }\r\n                    handler(event);\r\n                };\r\n                document.addEventListener(\"mousedown\", listener);\r\n                document.addEventListener(\"touchstart\", listener);\r\n                return () => {\r\n                    document.removeEventListener(\"mousedown\", listener);\r\n                    document.removeEventListener(\"touchstart\", listener);\r\n                };\r\n            },\r\n            [ref, handler]\r\n        );\r\n    }\r\n\r\n    const attRef = useRef()\r\n\r\n    const [labelModal, setLabelModal] = useState(false)\r\n    const labelRef = useRef()\r\n    useOnClickOutside(labelRef, () => setLabelModal(false));\r\n\r\n    const [attNameModal, setAttNameModal] = useState(null)\r\n    const editAttachRef = useRef()\r\n    useOnClickOutside(editAttachRef, () => setAttNameModal(false));\r\n\r\n    const [labelEditModal, setLabelEditModal] = useState(false)\r\n    const labelEditRef = useRef()\r\n    useOnClickOutside(labelEditRef, () => setLabelEditModal(false));\r\n\r\n    const [coverModal, setCoverModal] = useState(false)\r\n    const coverRef = useRef()\r\n    useOnClickOutside(coverRef, () => setCoverModal(false));\r\n\r\n    const [memberModal, setMemberModal] = useState(false)\r\n    const memberRef = useRef()\r\n    useOnClickOutside(memberRef, () => setMemberModal(false));\r\n\r\n    const [checklistModal, setChecklistModal] = useState(false)\r\n    const checklistRef = useRef()\r\n    useOnClickOutside(checklistRef, () => setChecklistModal(false));\r\n\r\n    const [dueDateModal, setDueDateModal] = useState(false)\r\n    const dueDateRef = useRef()\r\n    useOnClickOutside(dueDateRef, () => setDueDateModal(false));\r\n\r\n    const [drawNoteModal, setDrawNoteModal] = useState(false)\r\n    const drawNoteRef = useRef()\r\n    useOnClickOutside(drawNoteRef, () => setDrawNoteModal(false));\r\n    //--------------------------------------------------------------------\\\\\r\n\r\n    var descValue;\r\n    const [isDesc, setIsDesc] = useState(false)\r\n\r\n    const currCard = currBoard.cards.find(card => {\r\n        return card.tasks.find(t => {\r\n            return t._id === currTask._id\r\n        })\r\n    })\r\n    const onSubmitDesc = data => {\r\n        currTask.desc = data.desc\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onSubmitItemInList = (data, idxInList) => {\r\n        const input = Object.keys(data).find(str => str === ('inputItem' + idxInList))\r\n        if (!data[input]) return\r\n        currTask.checklists[idxInList].list.push({ desc: data[input], isChecked: false })\r\n        setRange(currTask.checklists[idxInList])\r\n        reset({ inputItem0: '', inputItem1: '', inputItem2: '', inputItem3: '', inputItem4: '' })\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const onSubmitAtt = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('attItem' + idx))\r\n        currTask.attachments[idx].title = data[input];\r\n    }\r\n\r\n    const onSumbitComment = data => {\r\n        const newComment = { _id: utilService.makeId(), member: 'guest', timeStamp: Date.now(), title: data.comment }\r\n        currTask.comments.push(newComment)\r\n        updateBoard(currTask)\r\n        reset({ comment: '', })\r\n    }\r\n\r\n    const onRemoveComment = (id) => {\r\n        const idx = currTask.comments.findIndex(comment => { return comment._id === id })\r\n        currTask.comments.splice(idx, 1)\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onEditComment = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('editComment' + idx))\r\n        currTask.comments[idx].title = data[input];\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const changeCheckBox = (item) => {\r\n        item.isChecked = !item.isChecked\r\n    }\r\n\r\n    const toggleTaskDone = () => {\r\n        (!currTask.doneAt) ? currTask.doneAt = Date.now() : currTask.doneAt = ''\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setRange = checklist => {\r\n        const itemsChecked = checklist.list.reduce((acc, itemInList) => {\r\n            return itemInList.isChecked + acc\r\n        }, 0)\r\n        const rengeToShow = +((itemsChecked / checklist.list.length * 100).toFixed(2))\r\n        checklist.range = rengeToShow\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const updateBoard = task => {\r\n        const updatedBoard = boardService.updateCard(task, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: task || currTask })\r\n        dispatch(saveBoard(updatedBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        inputFile.current.click()\r\n    }\r\n\r\n    const dueDateSpanText = (task) => {\r\n        return task.doneAt ? 'COMPLETED' : (task.dueDate > Date.now()) ? '' : 'OVERDUE'\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? 'inherite' : '#ec9488')\r\n\r\n    }\r\n    const displayDueDate = (task) => {\r\n        return task.doneAt ? 'unset' : ((task.dueDate > Date.now()) ? 'none' : 'unset')\r\n    }\r\n\r\n    const onAttRemove = (id) => {\r\n        const idx = currTask.attachments.findIndex(att => { return att._id === id })\r\n        currTask.attachments.splice(idx, 1)\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setTaskTitle = data => {\r\n        currTask.title = data.taskTitle\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const testLog = (ev) => {\r\n        setClientX(ev.target.offsetLeft)\r\n        setClientY(ev.target.offsetTop)\r\n\r\n        \r\n    }\r\n\r\n\r\n    if (!currTask || !currCard) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cloudOp = {\r\n        updateBoard\r\n    }\r\n\r\n    return (\r\n        <section className=\"task-modal hide-overflow\">\r\n            <div className=\"task-modal-form\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                {!currTask.cover ? null : currTask.cover.includes('#') ? <div className=\"cover-section\" style={{ backgroundColor: `${currTask.cover}` }} /> :\r\n                    <Color src={currTask.cover} crossOrigin=\"anonymous\" format=\"hex\">\r\n                        {({ data, loading }) => {\r\n                            if (loading) return <div>Loading...</div>;\r\n                            return (<div className=\"cover-section\" style={{ backgroundColor: data, backgroundImage: `url(${currTask.cover})` }} />)\r\n                        }}\r\n                    </Color>\r\n                }\r\n                <div className=\"task-header\">\r\n                    <div className=\"task-title\">\r\n                        <form onChange={handleSubmit(setTaskTitle)}>\r\n                            <FontAwesomeIcon icon={faWindowMaximize} /> <input type=\"text\" {...register(\"taskTitle\")} defaultValue={currTask.title} placeholder=\"Task name\" />\r\n                        </form>\r\n                        <p className=\"card-title\">In list: {currCard.title}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-description-modal\">\r\n                    {!currTask.members.length ? null : <section className=\"members-section\"><h3>MEMBERS:</h3>\r\n                        <div className=\"member-list\">\r\n                            {currTask.members.map((member, idx) =>\r\n                                <div className=\"member-in-modal\" onClick={() => setMemberModal(true)} key={idx}>\r\n                                    <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                </div>)}\r\n                            <button onClick={() => setMemberModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                        </div>\r\n                    </section>}\r\n                    {!currTask.labels.length ? null : <section className=\"labels-section\"><h3>LABELS:</h3>\r\n                        {currTask.labels.map((label, idx) =>\r\n                            <div className=\"label-in-modal\" key={idx} onClick={() => setLabelModal(true)} style={{ backgroundColor: label.color }}>\r\n                                <p>{label.desc}</p>\r\n                            </div>)}\r\n                        <button onClick={() => setLabelModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </section>}\r\n                    {!currTask.dueDate ? null : <section className=\"due-date-moment-section\" onClick={toggleTaskDone}><h3>DUE DATE:</h3>\r\n                        <span className=\"due-date-moment\"> {!currTask.doneAt ? <FontAwesomeIcon icon={faClock} /> : <FontAwesomeIcon icon={faCheckSquare} />}<Moment format=\"MMM D YYYY\" withTitle>{currTask.dueDate}</Moment><small style={{ color: 'white', display: displayDueDate(currTask), backgroundColor: backgroundColorDueDate(currTask) }} >{dueDateSpanText(currTask)}</small>\r\n                        </span> </section>}\r\n                    <section className=\"desc-section\">\r\n                        <div className=\"desc-svg\"><FontAwesomeIcon icon={faAlignLeft} />\r\n                            <p>Description:</p>\r\n                        </div>\r\n                        <form onChange={handleSubmit(res => onSubmitDesc(res))}>\r\n                            <textarea id=\"desc\" name=\"desc\" onClick={() => setIsDesc(!isDesc)} defaultValue={descValue} placeholder=\"Add some detailed description...\" {...register(\"desc\")} defaultValue={taskModalOp.currTask.desc} />\r\n                            {isDesc && <div className=\"save-desc\">\r\n                                <button onClick={(ev) => { ev.preventDefault(); setIsDesc(!isDesc) }}>Save</button>\r\n                                <button onClick={() => setIsDesc(false)}><FontAwesomeIcon icon={faTimes} ></FontAwesomeIcon></button> </div>}\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n                {!currTask.checklists.length ? null : <section >\r\n                    {currTask.checklists.map((checklist, listIdx) =>\r\n                        <div className=\"checklist-in-modal\" key={listIdx}>\r\n                            <div className=\"checklist-svg\"> <div className=\"flex\"> <FontAwesomeIcon icon={faList} ></FontAwesomeIcon> <p>{checklist.title}:</p></div>\r\n                                <button onClick={() => taskModalOp.addChecklist(listIdx)}>Delete list</button>\r\n                            </div>\r\n                            {!checklist.list.length ? null : <h6>{checklist.range}%</h6>}\r\n                            {!checklist.list.length ? null : <div className=\"demo-range-container\">\r\n                                {checklist.range === 100 ? <div className=\"demo-range-checked\" style={{ backgroundColor: '#61bd4f', width: checklist.range + '%' }}></div> :\r\n                                    <div className=\"demo-range-checked\" style={{ width: checklist.range + '%' }}></div>}</div>}\r\n                            {!checklist.list.length ? null : checklist.list.map((item, idx) => {\r\n                                return <div className=\"checklist-items\" key={idx}>\r\n                                    <input type=\"checkbox\" id={'checklist-item-' + idx} checked={item.isChecked} onChange={() => {\r\n                                        changeCheckBox(item)\r\n                                        setRange(checklist)\r\n                                    }} />\r\n                                    {item.isChecked ? <label style={{ textDecoration: 'line-through' }}>{item.desc}</label> : <label>{item.desc}</label>}\r\n                                </div>\r\n                            })}\r\n                            <form onSubmit={handleSubmit(res => onSubmitItemInList(res, listIdx))}>\r\n                                <input type=\"text\" autoComplete=\"off\" id={'input-item-' + listIdx} name=\"item\" placeholder=\"Add an item\"  {...register('inputItem' + listIdx)} />\r\n                                <button className=\"add-an-item-btn\">Add</button>\r\n                            </form>\r\n                        </div>)}\r\n                </section>}\r\n                {!currTask.attachments.length ? null : <section >\r\n                    <div className=\"att-svg\"><FontAwesomeIcon icon={faPaperclip} />\r\n                        <p>Attachments:</p>\r\n                    </div>\r\n                    {currTask.attachments.map((attac, attIdx) =>\r\n                        <div key={attIdx} className=\"attachments-container\">\r\n                            <div className=\"att-src\">\r\n                                <Color crossOrigin=\"anonymous\" src={attac.src} format=\"hex\">\r\n                                    {({ data, loading }) => {\r\n                                        if (loading) return <div>Loading...</div>;\r\n                                        return (<div className=\"attachment-img\" style={{ backgroundColor: data, backgroundImage: `url(${attac.src})` }} alt=\"photo\" />)\r\n                                    }}\r\n                                </Color>\r\n                            </div>\r\n                            <div className=\"att-details\">\r\n                                <p>{attac.title || 'Photo'}</p>\r\n                                <p>Added Right now!</p>\r\n                                <div className=\"att-btns\">\r\n                                    <button onClick={(ev) => { setAttNameModal(!attNameModal); testLog(ev) }}>Edit</button>\r\n                                    <button onClick={() => onAttRemove(attac._id)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                            {attNameModal && <div style={{ left: `${clientX + 450}px`, top: `${clientY - 300}px` }} className=\"att-edit\">\r\n                                <div className=\"att-edit-header\">\r\n                                    <p>Edit attachment</p>\r\n                                    <button onClick={() => setAttNameModal(false)}>x</button>\r\n                                </div>\r\n                                <div className=\"att-edit-main\" ref={editAttachRef}>\r\n                                    <p>Attachment name:</p>\r\n                                    <form onSubmit={handleSubmit(res => onSubmitAtt(res, attIdx))}>\r\n                                        <input type=\"text\" autoComplete=\"off\" id={'att-item-' + attIdx} defaultValue={attac.title}  {...register('attItem' + attIdx)} />\r\n                                        <button>Save</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    )}\r\n                </section>}\r\n                <div className=\"att-svg\"><FontAwesomeIcon icon={faComment} />\r\n                    <p>Comments:</p>\r\n                </div>\r\n                <div className=\"task-comment\">\r\n                    <form onSubmit={handleSubmit(onSumbitComment)}>\r\n                        <input className=\"post-comment-input\" type=\"text\" autoComplete=\"off\" id=\"comment\" name=\"comment\" placeholder=\"Post a Comment...\"  {...register(\"comment\")} />\r\n                    </form>\r\n                    {!currTask.comments.length ? null : currTask.comments.map((comment, idx) => <div key={comment._id} className=\"comment-container\">\r\n                        <div className=\"comment-avatar\">\r\n                            <Avatar key={comment._id} name={comment.member} size=\"30\" round={true} />\r\n                        </div>\r\n                        <div className=\"comment-details\">\r\n                            <div className=\"comment-header\">\r\n                                <p className=\"comment-member\">{comment.member}</p> <p><Moment fromNow>{comment.timeStamp}</Moment></p>\r\n                            </div>\r\n                            <form onChange={handleSubmit((res) => onEditComment(res, idx))} className=\"comment-title\">\r\n                                <input type=\"text\" autoComplete=\"off\" id={\"comment-edit\" + idx} defaultValue={comment.title} {...register(\"editComment\" + idx)} />\r\n                                <button style={{ display: 'none' }} onClick={(ev) => ev.preventDefault()}></button>\r\n                            </form>\r\n                            <div className=\"comment-btns\">\r\n                                <button onClick={() => onRemoveComment(comment._id)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"add-to-task\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                <div className=\"right-task-modal\">\r\n                    <h3>Add To Task:</h3>\r\n                    <p onClick={() => taskModalOp.setCurrTask(null)} className=\"btn-close-icon\"><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"right-task-modal-btns\">\r\n                    <div onClick={() => { setLabelModal(true) }} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\r\n                        <p> Labels </p>\r\n                        {(!labelModal) ? null : <div onClick={(ev) => ev.stopPropagation()} ref={labelRef}> <LabelModal labelEditRef={labelEditRef} setLabelModal={setLabelModal} labelModal={labelModal} currTask={currTask} addLabel={taskModalOp.addLabel}  ></LabelModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setMemberModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n                        <p> Members </p>\r\n                        {(!memberModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={memberRef}> <MemberModal setMemberModal={setMemberModal} memberModal={memberModal} currTask={currTask} addMemberToTask={taskModalOp.addMember} ></MemberModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setChecklistModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faList}></FontAwesomeIcon>\r\n                        <p> Checklist </p>\r\n                        {(!checklistModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={checklistRef}> <CheckListModal setChecklistModal={setChecklistModal} checklistModal={checklistModal} currTask={currTask} addChecklist={taskModalOp.addChecklist} ></CheckListModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setDueDateModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                        <p> Due date </p>\r\n                        {(!dueDateModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={dueDateRef}> <DueDateModal setDueDateModal={setDueDateModal} dueDateModal={dueDateModal} addDueDate={taskModalOp.addDueDate} currTask={currTask}></DueDateModal></div>}\r\n                    </div>\r\n                    <Cloudinary currTask={currTask} cloudOp={cloudOp} txt={<div className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faPaperclip}></FontAwesomeIcon>\r\n                        <p>Attachments</p></div>} />\r\n                    {(!coverModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={coverRef}><CoverModal setCoverModal={setCoverModal} coverModal={coverModal} cloudOp={cloudOp} currCard={currCard} addCover={taskModalOp.addCover} currTask={currTask} onButtonClick={onButtonClick} inputFile={inputFile}></CoverModal></div>}\r\n                    <div onClick={() => setCoverModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon>\r\n                        <p> Cover </p>\r\n                    </div>\r\n                    <div onClick={() => setDrawNoteModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faPalette}></FontAwesomeIcon>\r\n                        <p> Draw Note </p>\r\n                        {(!drawNoteModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={drawNoteRef}> <DrawNoteModal setDrawNoteModal={setDrawNoteModal} drawNoteModal={drawNoteModal} currTask={currTask}></DrawNoteModal></div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions'\r\nimport Moment from 'react-moment';\r\nimport './BoardMenu.scss'\r\nimport { faChevronLeft, faPalette, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { utilService } from '../../services/utilService'\r\nimport { PolarArea, Bar } from 'react-chartjs-2';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\nimport userService from '../../services/userService'\r\n\r\nexport function BoardMenu({ boardMenuOp }) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [isAbout, setIsAbout] = useState(false)\r\n    const [isBackground, setIsBackground] = useState(false)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [isLabels, setIsLabels] = useState(false)\r\n    const [labels, setLabels] = useState(null)\r\n    const [cloudImgs, setCloudImgs] = useState(null)\r\n    const [tasks, setTasks] = useState(null)\r\n    const [isAddLabel, setIsAddLabel] = useState(false)\r\n    const [filterBy, setFilterBy] = useState({ task: '', labels: [] })\r\n    const colors = ['lightgreen', 'lightyellow', 'lightblue', 'orange', 'slateblue', 'lightpink', 'lightgray', 'white']\r\n\r\n    useEffect(async () => {\r\n        setCloudImgs(currBoard.images)\r\n        sendFilter()\r\n    }, [filterBy])\r\n\r\n    useEffect(() => {\r\n        if (!boardMenuOp.isMenu) closeMenu()\r\n    }, [boardMenuOp.isMenu])\r\n\r\n    useEffect(() => {\r\n        setLabels(currBoard.labels)\r\n        membersTaskLength()\r\n    }, [currBoard])\r\n\r\n    const onSearchTask = data => {\r\n        setFilterBy({ ...filterBy, task: data.searchTask })\r\n    }\r\n\r\n    const onSearchLabel = idx => {\r\n        if (filterBy.labels.includes(labels[idx].desc)) {\r\n            const removeIdx = filterBy.labels.findIndex(label => label === labels[idx].desc)\r\n            filterBy.labels.splice(removeIdx, 1)\r\n            setFilterBy({ ...filterBy, labels: filterBy.labels })\r\n        }\r\n        else setFilterBy({ ...filterBy, labels: [...filterBy.labels, labels[idx].desc] })\r\n    }\r\n\r\n    const sendFilter = () => {\r\n        boardMenuOp.filterTasks(filterBy)\r\n    }\r\n\r\n    const saveLabels = data => {\r\n        const entries = Object.entries(data)\r\n        const labels = entries.map((label, idx) => {\r\n            if (!idx) return\r\n            if (idx % 2 === 0) return { color: label[1] }\r\n            return { desc: label[1] }\r\n        })\r\n        labels.splice(0, 1)\r\n        const arr = []\r\n        labels.forEach((label, idx) => {\r\n            if (idx % 2 === 0) arr.push({ _id: utilService.makeId(), desc: label.desc, color: labels[idx + 1].color })\r\n        })\r\n        setLabels(arr)\r\n        dispatch(saveBoard({ ...currBoard, labels: arr }))\r\n    }\r\n\r\n    // const saveLabels = data => {\r\n    //     const descs = []\r\n    //     const colors = []\r\n    //     Object.keys(data).forEach(input => {\r\n    //         if (input.includes('editBoardLabelColor')) colors.push(input)\r\n    //         else if (input.includes('editBoardLabel')) descs.push(input)\r\n    //     })\r\n    //     const arrValues = Object.values(data)\r\n    //     arrValues.splice(0, 1)\r\n    //     const arr1 = []\r\n    //     const arr2 = []\r\n    //     arrValues.forEach((val, idx) => {\r\n    //         if (idx % 2 === 0) arr1.push(val)\r\n    //         else arr2.push(val)\r\n    //     })\r\n    //     const labels = arr1.map((val, idx) => {\r\n    //         return { _id: utilService.makeId(), desc: arr1[idx], color: arr2[idx] }\r\n    //     })\r\n    //     setLabels(currBoard.labels)\r\n    //     dispatch(saveBoard({ ...currBoard, labels: labels }))\r\n    //     setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    // }\r\n\r\n    const onAddBoardLabel = (data) => {\r\n        const label = { _id: utilService.makeId(), desc: data.addBoardLabel, color: data.addBoardLabelColor }\r\n        currBoard.labels = [...currBoard.labels, label]\r\n        setLabels(currBoard.labels)\r\n        boardMenuOp.addActivity('Guest', 'added', 'label')\r\n        setIsAddLabel(!isAddLabel)\r\n        dispatch(saveBoard(currBoard))\r\n    }\r\n\r\n    const deleteLabel = (labelId) => {\r\n        const idx = labels.findIndex(l => l._id === labelId)\r\n        labels.splice(idx, 1)\r\n        currBoard.labels = labels\r\n        setLabels(currBoard.labels)\r\n        dispatch(saveBoard(currBoard))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n        boardMenuOp.addActivity('Guest', 'deleted', 'label')\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        boardMenuOp.setIsMenu(false)\r\n        setIsAbout(false)\r\n        setIsBackground(false)\r\n        setIsFilter(false)\r\n        setIsLabels(false)\r\n        onSearchTask('')\r\n    }\r\n\r\n    const membersTaskLength = async () => {\r\n        const membersLength = []\r\n        await currBoard.members.forEach(async m => {\r\n            const member = await userService.getUserById(m._id)\r\n            membersLength.push(member.tasks.length);\r\n        })\r\n        setTasks(membersLength)\r\n    }\r\n\r\n    if (!cloudImgs || !currBoard || !labels || !tasks) return (<div className=\"loader-container\">Loading</div>)\r\n\r\n    const inProgress = []\r\n    const overdue = []\r\n    const completed = []\r\n    currBoard.cards.forEach(card => {\r\n        card.tasks.forEach(task => {\r\n            if (task.doneAt) completed.push(task)\r\n            else if (!task.dueDate) inProgress.push(task)\r\n            else task.dueDate > Date.now() ? inProgress.push(task) : overdue.push(task)\r\n        })\r\n    })\r\n    const membersLabels = []\r\n    const membersTasks = []\r\n    currBoard.members.forEach(m => {\r\n        membersLabels.push(m.name)\r\n        membersTasks.push(m.tasks.length)\r\n    })\r\n\r\n    const dataForMembersChart = {\r\n        labels: membersLabels,\r\n        datasets: [{\r\n            label: 'Members',\r\n            data: membersTasks,\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.7)',\r\n                'rgba(75, 192, 192, 0.7)',\r\n                'rgba(255, 205, 86, 0.7)',\r\n                'rgba(201, 203, 207, 0.7)',\r\n                'rgba(54, 162, 235, 0.7)'\r\n            ],\r\n            hoverOffset: 4\r\n        }]\r\n    };\r\n\r\n    const dataForChart = {\r\n        labels: ['Completed', 'In progress', 'Overdue'],\r\n        datasets: [{\r\n            label: 'Status',\r\n            data: [completed.length, inProgress.length, overdue.length],\r\n            backgroundColor: [\r\n                'rgba(29, 185, 84, 0.7)',\r\n                'rgba(255, 159, 64, 0.7)',\r\n                'rgba(255, 99, 132, 0.7)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(29, 185, 84)',\r\n                'rgba(255, 159, 64)',\r\n                'rgba(255, 99, 132)',\r\n            ],\r\n            borderWidth: 1,\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <section className=\"board-menu flex\" style={boardMenuOp.isMenu ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n            <article className=\"menu-main\">\r\n                <div className=\"flex\">\r\n                    <h3>Menu</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}>About & Statistics</p>\r\n                    <p onClick={() => setIsBackground(!isBackground)}>Background</p>\r\n                    <p onClick={() => setIsFilter(!isFilter)}>Search cards</p>\r\n                    <p onClick={() => setIsLabels(!isLabels)}>Labels</p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <h3>Activity</h3>\r\n                    <ul>\r\n                        {!currBoard.activity.length ? null : currBoard.activity.map(activity => <li key={activity._id}>\r\n                            {(activity.type !== 'attached' && activity.type !== 'removed') ? <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span>{activity.card === 'board' ? '' : ' card'}.</p>\r\n                                : <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'removed' ? 'from' : 'to'} <span>{activity.card}</span> task.</p>}\r\n                            <small><Moment fromNow>{activity.createdAt}</Moment></small>\r\n                        </li>)}\r\n                        {!currBoard.activity.length && <li><h1>No activity here...</h1></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-about sub-menu\" style={isAbout ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>About & Statistics</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex hide-overflow\">\r\n                    <div className=\"flex\">\r\n                        <h3>Members</h3>\r\n                        <div>{boardMenuOp.members.map(member => <Avatar key={member._id} name={member.name} size=\"30\" round={true} />)}</div>\r\n                        <p>Total: {boardMenuOp.members.length}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Description</h3>\r\n                        <textarea placeholder=\"Type here a description\" />\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Statistics</h3>\r\n                        <h4>Tasks per member</h4>\r\n                        <PolarArea name=\"PolarArea\" data={dataForMembersChart} />\r\n                        <h4>Tasks status</h4>\r\n                        <Bar height=\"200\" data={dataForChart} />\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-background sub-menu\" style={isBackground ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsBackground(!isBackground)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Change background</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <div className=\"flex\">\r\n                        <h4>Colors</h4>\r\n                        <div className=\"flex\">\r\n                            {colors.map((color, idx) => <aside key={idx} style={{ backgroundColor: color }} onClick={() => boardMenuOp.changeBackground(color, true)}></aside>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h4>Photos</h4>\r\n                        <div className=\"flex\">\r\n                            <Cloudinary txt=\"Upload photo\" type=\"background\" setCloudImgs={setCloudImgs} />\r\n                            {cloudImgs.map((url, idx) => <img key={idx} onClick={() => boardMenuOp.changeBackground(url)} decoding=\"async\" loading=\"lazy\" src={url} alt={url} />)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-filter sub-menu\" style={isFilter ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsFilter(!isFilter)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Search cards</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div>\r\n                    <form onChange={handleSubmit(onSearchTask)}>\r\n                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Search for task...\" {...register(\"searchTask\")} />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h4>Search by label</h4>\r\n                    <ul>\r\n                        {labels.map((label, idx) => <li key={idx} style={{ backgroundColor: filterBy.labels.includes(label.desc) ? 'gray' : 'inherit' }} onClick={() => onSearchLabel(idx)}>\r\n                            <div style={{ backgroundColor: label.color }}></div>\r\n                            <p>{label.desc}</p>\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-labels sub-menu\" style={isLabels ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsLabels(!isLabels)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Labels</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow\">\r\n                    <ul>\r\n                        {labels.map((label, idx) => <li key={label._id} style={{ backgroundColor: label.color }}>\r\n                            <form onChange={handleSubmit(utilService.debounce(saveLabels, 100))}>\r\n                                <input type=\"text\" autoComplete=\"off\" defaultValue={label.desc} placeholder=\"Label name\" required {...register(\"editBoardLabel\" + idx)} />\r\n                                <label name=\"label-color\"><FontAwesomeIcon className=\"fa\" icon={faPalette} />\r\n                                    <input type=\"color\" autoComplete=\"off\" {...register(\"editBoardLabelColor\" + idx)} defaultValue={label.color} /></label>\r\n                            </form>\r\n                            <p><FontAwesomeIcon className=\"fa\" icon={faTimes} onClick={() => deleteLabel(label._id)} /></p>\r\n                        </li>)}\r\n                        {!isAddLabel && <li onClick={() => setIsAddLabel(!isAddLabel)}><p>New label</p></li>}\r\n                        {isAddLabel && <li>\r\n                            <form onSubmit={handleSubmit(onAddBoardLabel)}>\r\n                                <input type=\"text\" placeholder=\"Label name\" autoComplete=\"off\" required {...register(\"addBoardLabel\")} />\r\n                                <input type=\"color\" name=\"label-color\" id=\"label-color\" defaultValue=\"#FFFFFF\" {...register(\"addBoardLabelColor\")} />\r\n                                <button>Add label</button>\r\n                            </form>\r\n                            <button onClick={() => setIsAddLabel(!isAddLabel)}>X</button></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n        </section >\r\n    )\r\n}","import { faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Notification.scss'\n\nexport function Notification({ notifyOp }) {\n    const { isMsg, msg } = notifyOp\n\n    if (!msg) return (<div></div>)\n    return (\n        <section className=\"notification-container\" style={isMsg ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n            <div>\n                <FontAwesomeIcon className=\"fa\" icon={faCheckCircle}></FontAwesomeIcon>\n                {msg.type === 'warning' && <FontAwesomeIcon className=\"fa\" icon={faExclamationCircle}></FontAwesomeIcon>}\n            </div>\n            <div>\n                {(msg.type !== 'attached' && msg.type !== 'removed') ? <p><span>{msg.member}:<br /></span> {msg.type} {msg.desc} {msg.type === 'deleted' ? 'from' : 'to'} <span>{msg.card}</span>{msg.card === 'board' ? '' : ' card'}.</p>\n                    : <p><span>{msg.member}:</span><br /> {msg.type} {msg.desc} {msg.type === 'removed' ? 'from' : 'to'} <span>{msg.card}</span> task.</p>}\n            </div>\n        </section>\n    )\n}","import { useEffect, useState, useRef, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground } from '../../store/actions/boardActions'\r\nimport { CardPreview } from '../../cmps/CardPreview'\r\nimport { TaskModal } from '../../cmps/TaskModal/TaskModal'\r\nimport { useForm } from \"react-hook-form\";\r\nimport boardService from '../../services/boardService'\r\nimport Avatar from 'react-avatar';\r\nimport { BoardMenu } from '../../cmps/BoardMenu'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faCheckCircle, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { utilService } from '../../services/utilService'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService'\r\nimport { Notification } from '../../cmps/Notification/Notification'\r\nimport useScrollOnDrag from 'react-scroll-ondrag';\r\nimport './BoardDetails.scss'\r\nimport { updateUser } from '../../store/actions/userActions'\r\nimport userService from '../../services/userService'\r\n\r\nexport function BoardDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm()\r\n    var newCard = boardService.getEmptyCard()\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const users = useSelector(state => state.userReducer.users)\r\n    const user = useSelector(state => state.userReducer.user)\r\n    const [currCard, setCurrCard] = useState(null)\r\n    const [currTask, setCurrTask] = useState(null)\r\n    const [isMsg, setIsMsg] = useState(false)\r\n    const [msg, setMsg] = useState(null)\r\n    const [members, setMembers] = useState(null)\r\n    const ref = useRef()\r\n    const containerRef = useRef()\r\n    const { events } = useScrollOnDrag(containerRef);\r\n\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(() => {\r\n            const listener = (event) => {\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n                handler(event);\r\n            };\r\n            document.addEventListener(\"mousedown\", listener);\r\n            document.addEventListener(\"touchstart\", listener);\r\n            return () => {\r\n                document.removeEventListener(\"mousedown\", listener);\r\n                document.removeEventListener(\"touchstart\", listener);\r\n            };\r\n        }, [ref, handler]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(false))\r\n        const { id } = props.match.params\r\n        socketService.emit(\"board topic\", id);\r\n        if (!currBoard) {\r\n            dispatch(setCurrBoard(id))\r\n        }\r\n        else if (!draggedCards) {\r\n            setDraggedCards(currBoard.cards)\r\n            socketService.on('task add-task', data => {\r\n                addTaskForSockets(data)\r\n            })\r\n            socketService.on('task update-task', data => {\r\n                updateTask(data)\r\n            })\r\n            socketService.on('card add-card', data => {\r\n                addNewCardForSockets(data)\r\n            })\r\n            socketService.on('card delete-card', data => {\r\n                deleteTaskForSockets(data)\r\n            })\r\n            socketService.on('board add-label', data => {\r\n                addLabelForSockets(data)\r\n            })\r\n            socketService.on('card update-card', data => {\r\n                updateCardForSockets(data)\r\n            })\r\n            socketService.on('card update-card-title', data => {\r\n                updateCardTitleForSockets(data)\r\n            })\r\n            socketService.on('board add-activity', activity => {\r\n                addActivityForSockets(activity)\r\n            })\r\n            setMembers(currBoard.members)\r\n            preMembers()\r\n        }\r\n        if (currBoard) {\r\n            setMembers(currBoard.members)\r\n        }\r\n    }, [currBoard])\r\n\r\n    useOnClickOutside(ref, () => setCurrTask(false));\r\n    const [isMenu, setIsMenu] = useState(false)\r\n    const menuRef = useRef()\r\n    useOnClickOutside(menuRef, () => setIsMenu(false));\r\n    const [cardModal, setCardModal] = useState(null)\r\n    const cardModalRef = useRef()\r\n    useOnClickOutside(cardModalRef, () => setIsCardModal(false));\r\n    const inviteRef = useRef()\r\n    useOnClickOutside(inviteRef, () => setIsInvite(false));\r\n    const [isAddCard, setIsAddCard] = useState(null)\r\n    const [draggedCards, setDraggedCards] = useState((currBoard?.cards) ? currBoard.cards : null)\r\n    const [isInvite, setIsInvite] = useState(null)\r\n    const [isCardModal, setIsCardModal] = useState(null)\r\n    const [xPosEl, setXPosEl] = useState(null)\r\n    const [yPosEl, setYPosEl] = useState(null)\r\n    const [addMembersToBoard, setMembersToBoard] = useState(null)\r\n    const [isDescShown, setIsDescShown] = useState(false)\r\n\r\n    // Sockets /////////////////////////////////////////////////////////\r\n\r\n    const updateCardForSockets = card => {\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === card._id)\r\n        currBoard.cards.splice(cardIdx, 1, card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 500)\r\n    }\r\n\r\n    const updateTask = data => {\r\n        const updateCard = currBoard.cards.find(c => c._id === data.card._id)\r\n        const taskIdx = updateCard.tasks.findIndex(t => t._id === data.task._id)\r\n        updateCard.tasks.splice(taskIdx, 1, data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const updateCardTitleForSockets = card => {\r\n        const cardToUpdate = currBoard.cards.find(c => c._id === card._id)\r\n        cardToUpdate.title = card.title\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addTaskForSockets = data => {\r\n        const addTo = currBoard.cards.find(c => c._id === data.card)\r\n        addTo.tasks.push(data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const deleteTaskForSockets = data => {\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === data.card)\r\n        currBoard.cards.splice(cardIdx, 1)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addNewCardForSockets = card => {\r\n        currBoard.cards.push(card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addLabelForSockets = data => {\r\n        if (!data.task.labels.length) data.task.labels.push(data.label)\r\n        else {\r\n            if (data.task.labels.some((currLabel) => currLabel.color === data.label.color)) {\r\n                const labelToRemove = data.task.labels.findIndex(currLabel => currLabel.color === data.label.color)\r\n                data.task.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                data.task.labels.push(data.label)\r\n            }\r\n        }\r\n        boardService.updateCard(data.task, data.card, currBoard)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addActivityForSockets = activity => {\r\n        currBoard.activity.unshift(activity)\r\n        sendMsg(activity.member, activity.type, activity.desc, activity.card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n    ////////////////////////////////////////////////////////////////////\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(draggedCards);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        setDraggedCards(items);\r\n    }\r\n\r\n    const openCardModal = (ev, card) => {\r\n        setXPosEl(ev.clientX)\r\n        setYPosEl(ev.clientY)\r\n        setIsCardModal(true)\r\n        setCardModal(card)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCardModal(null)\r\n        setIsCardModal(false)\r\n    }\r\n\r\n    const setBoardTitle = (data) => {\r\n        var title = data.boardTitle;\r\n        dispatch(saveBoard({ ...currBoard, title }))\r\n    }\r\n\r\n    const addMemberToBoard = data => {\r\n        const membersInBoard = members.map(member => member._id)\r\n        const usersToAdd = users.filter(user => {\r\n            if (!membersInBoard.includes(user._id)) return user.name.toLowerCase().includes(data.member.toLowerCase())\r\n        })\r\n        setMembersToBoard(usersToAdd)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const preMembers = () => {\r\n        const membersInBoard = currBoard.members.map(member => member._id)\r\n        const usersToAdd = users.filter(user => {\r\n            if (!membersInBoard.includes(user._id)) return user.name.toLowerCase()\r\n        })\r\n        setMembersToBoard(usersToAdd)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const onAddMember = (member) => {\r\n        currBoard.members = [...members, member]\r\n        setMembers(currBoard.members)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        preMembers()\r\n    }\r\n\r\n    const removeUserFromBoard = (id) => {\r\n        const idx = currBoard.members.findIndex(member => member._id === id)\r\n        currBoard.members.splice(idx, 1)\r\n        setMembers(currBoard.members)\r\n        preMembers()\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addLabel = (label) => {\r\n        if (!currTask.labels.length) currTask.labels.push(label)\r\n        else {\r\n            if (currTask.labels.some((currLabel) => currLabel.color === label.color)) {\r\n                const labelToRemove = currTask.labels.findIndex(currLabel => currLabel.color === label.color)\r\n                currTask.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                currTask.labels.push(label)\r\n            }\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n        addActivity(user ? user.username : 'Guest', 'added', 'label', currCard.title)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const addChecklist = (list) => {\r\n        if (typeof list === 'object') currTask.checklists.push(list)\r\n        else currTask.checklists.splice(list, 1);\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addDueDate = (date) => {\r\n        currTask.dueDate = date\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addCover = (cover) => {\r\n        currTask.cover = cover\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addMember = async (memberId) => {\r\n        const member = await userService.getUserById(memberId)\r\n        if (!currTask.members.length) {\r\n            member.tasks.push(currTask.title)\r\n            currTask.members.push(member)\r\n            addActivity(user ? user.username : 'Guest', 'attached', member.username, currTask.title)\r\n        }\r\n        else if (currTask.members.some(currMember => currMember._id === member._id)) {\r\n            const taskIdx = member.tasks.findIndex(t => t === currTask._id)\r\n            member.tasks.splice(taskIdx, 1)\r\n            const memberToRemove = currTask.members.findIndex(currMember => currMember._id === member._id)\r\n            currTask.members.splice(memberToRemove, 1)\r\n            addActivity(user ? user.username : 'Guest', 'removed', member.username, currTask.title)\r\n        } else {\r\n            member.tasks.push(currTask.title)\r\n            currTask.members.push(member)\r\n            addActivity(user ? user.username : 'Guest', 'attached', member.username, currTask.title)\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(updateUser(member))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addNewCard = (data) => {\r\n        newCard = boardService.getEmptyCard()\r\n        newCard.title = data.newCardTitle\r\n        currBoard.cards.push(newCard)\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard({ ...currBoard, cards: [...currBoard.cards] }))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 150)\r\n        setIsAddCard(!isAddCard)\r\n        reset()\r\n        addActivity(user ? user.username : 'Guest', 'added', 'card')\r\n        socketService.emit('card to-add-card', newCard);\r\n    }\r\n\r\n    const deleteCard = () => {\r\n        const cardIdx = currBoard.cards.findIndex(card => card._id === currCard._id)\r\n        const boardToSave = boardService.updateBoard(cardIdx, currBoard)\r\n        socketService.emit('card to-delete-card', cardIdx);\r\n        addActivity(user ? user.username : 'Guest', 'deleted', 'card')\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard(boardToSave))\r\n        dispatch(setCurrBoard(boardToSave._id))\r\n        closeModal()\r\n    }\r\n\r\n    const changeBackground = (background, type) => {\r\n        if (type) {\r\n            addActivity(user ? user.username : 'Guest', 'change', 'color')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: background, img: null } }))\r\n        }\r\n        else {\r\n            addActivity(user ? user.username : 'Guest', 'change', 'image')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: null, img: background } }))\r\n        }\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n    const filterTasks = (filterBy) => {\r\n        if (filterBy.task || filterBy.labels.length) {\r\n            var newCards = []\r\n            if (filterBy.task !== '') {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.filter(task => {\r\n                        if (task.title.includes(filterBy.task)) newCards.push(card);\r\n                    })\r\n                })\r\n            }\r\n            if (filterBy.labels.length) {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.map(task => {\r\n                        return task.labels.map(label => {\r\n                            if (filterBy.labels.includes(label.desc)) newCards.push(card)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            const cardsIds = []\r\n            newCards = newCards.filter(c => {\r\n                if (cardsIds.includes(c._id)) return\r\n                cardsIds.push(c._id)\r\n                return c;\r\n            })\r\n            if (!newCards || !Object.keys(newCards).length) {\r\n                const failCard = boardService.getEmptyCard()\r\n                failCard.title = 'No search results.'\r\n                setDraggedCards([failCard])\r\n            } else setDraggedCards(newCards)\r\n        } else setDraggedCards(currBoard.cards)\r\n    }\r\n\r\n    const addActivity = (member, type, desc, card = 'board') => {\r\n        const newActivity = { _id: utilService.makeId(), member, type, desc, card, createdAt: Date.now() }\r\n        currBoard.activity.unshift(newActivity)\r\n        socketService.emit('board to-add-activity', newActivity)\r\n        sendMsg(member, type, desc, card)\r\n        dispatch(saveBoard(currBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const sendMsg = (member, type, desc, card = 'board') => {\r\n        setMsg({ member, type, desc, card })\r\n        setIsMsg(true)\r\n        setTimeout(() => {\r\n            setIsMsg(false)\r\n        }, 3000)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    if (!currBoard || !draggedCards || !draggedCards.length || !members) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cardPreviewOp = {\r\n        openCardModal,\r\n        closeModal,\r\n        addActivity,\r\n        setCurrCard,\r\n        setCurrTask,\r\n        isDescShown,\r\n        setIsDescShown,\r\n    }\r\n\r\n    const boardMenuOp = {\r\n        setIsMenu,\r\n        isMenu,\r\n        changeBackground,\r\n        members: currBoard.members,\r\n        filterTasks,\r\n        addActivity\r\n    }\r\n\r\n    const taskModalOp = {\r\n        setCurrTask,\r\n        currTask,\r\n        addLabel,\r\n        addMember,\r\n        addChecklist,\r\n        addDueDate,\r\n        addCover,\r\n        currBoard: currBoard\r\n    }\r\n\r\n    const notifyOp = {\r\n        isMsg: isMsg,\r\n        msg: msg,\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-details sub-container\">\r\n            <div className=\"board-header flex\">\r\n                <div className=\"flex \">\r\n                    <form onBlur={handleSubmit(setBoardTitle)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"boardTitle\")} defaultValue={currBoard.title} autoComplete=\"off\" />\r\n                    </form>\r\n                    <div className=\"flex\">\r\n                        <div className=\"avatars\">\r\n                            {members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                        </div>\r\n                        <button onClick={() => setIsInvite(!isInvite)}>Invite</button>\r\n                        {isInvite && <div ref={inviteRef} className=\"invite-members-modal\">\r\n                            <form onChange={handleSubmit(addMemberToBoard)} >\r\n                                <div className=\"invite-title\">\r\n                                    <div className=\"close-btn\">\r\n                                        <p>Invite to board:</p>\r\n                                        <button onClick={() => setIsInvite(!isInvite)}>x</button>\r\n                                    </div>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Search Taskman Members..\" id=\"member\" name=\"member\"  {...register(\"member\")} />\r\n                                </div>\r\n                            </form>\r\n                            {addMembersToBoard && <div className=\"exist-members\">\r\n                                <ul>\r\n                                    <p>Suggested Members:</p>\r\n                                    {addMembersToBoard.map((member, idx) => {\r\n                                        return <li key={member._id}>\r\n                                            <button onClick={() => onAddMember(member)} className=\"suggested-user\">\r\n                                                <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                                <p>{member.name}</p>\r\n                                                <p><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon></p>\r\n                                            </button>\r\n                                        </li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>}\r\n                            {!currBoard.members.length ? null : <div className=\"exist-members\">\r\n                                <p>In This Board:</p>\r\n                                {currBoard.members.map((user, idx) => {\r\n                                    return <button key={user._id} onClick={() => removeUserFromBoard(user._id)} className=\"suggested-user\">\r\n                                        <Avatar key={idx} name={user.name} size=\"30\" round={true} />\r\n                                        <p>{user.name}</p>\r\n                                        <p><FontAwesomeIcon icon={faCheckCircle} /></p>\r\n                                    </button>\r\n                                })}\r\n                            </div>}\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div ref={menuRef} className=\"flex\">\r\n                    <p className=\"open-menu-btn\" onClick={() => setIsMenu(true)}><FontAwesomeIcon className=\"fa\" icon={faBars}></FontAwesomeIcon></p>\r\n                    <BoardMenu boardMenuOp={boardMenuOp}></BoardMenu>\r\n                </div>\r\n            </div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable direction=\"horizontal\" droppableId=\"cards\" type=\"CARD\">\r\n                    {(provided) => (\r\n                        <div className=\"cards-container flex\" ref={provided.innerRef}>\r\n                            <div {...provided.droppableProps}  {...events} ref={containerRef} className=\"cards-container flex\">\r\n                                <div className=\"flex\">\r\n                                    {draggedCards.map((card, idx) => {\r\n                                        return <div className=\"test\" key={card._id}><Draggable key={card._id} draggableId={card._id} index={idx}>\r\n                                            {(previewProvider) =>\r\n                                            (<div key={card._id}  {...previewProvider.draggableProps} {...previewProvider.dragHandleProps} ref={previewProvider.innerRef}>\r\n                                                <CardPreview key={card._id} cardPreviewOp={cardPreviewOp} card={card}></CardPreview>\r\n                                            </div>)}\r\n                                        </Draggable></div>\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                    {!isAddCard && <button className=\"add-card-btn\" onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faPlus}></FontAwesomeIcon><p>Add another card</p></button>}\r\n                                    {isAddCard && <div className=\"add-card\"> <form className=\"add-card-container\" onSubmit={handleSubmit(addNewCard)}>\r\n                                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Card name\" id=\"title\" name=\"title\" {...register(\"newCardTitle\")} />\r\n                                        <div className=\"flex\">\r\n                                            <button>Add Card</button>\r\n                                            <p onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faTimes}></FontAwesomeIcon></p>\r\n                                        </div>\r\n                                    </form></div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            {isCardModal && <div ref={cardModalRef} style={{ left: `${xPosEl}px`, top: `${yPosEl}px` }} className=\"card-modal\">\r\n                <div className=\"card-title-modal\">\r\n                    <p>{cardModal.title}</p>\r\n                    <button onClick={() => closeModal()}>x</button>\r\n                </div>\r\n                <div className=\"card-modal-btns\">\r\n                    <button onClick={() => deleteCard()}>Delete This Card</button>\r\n                </div>\r\n            </div>}\r\n            {currTask && <div ref={ref}><TaskModal taskModalOp={taskModalOp}></TaskModal></div>}\r\n            <Notification notifyOp={notifyOp} />\r\n        </div >\r\n    )\r\n}","import './LandingPage.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateBackground } from '../../store/actions/boardActions'\r\n\r\nexport function LandingPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(updateBackground(false))\r\n    })\r\n\r\n    return (\r\n        <section className=\"sub-container landing-page-container\">\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>T<span>a</span>skm<span>a</span>n</h3>\r\n                    <p>Taskman helps teams move work forward.\r\n                    Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique-accomplish it all with Taskman.</p>\r\n                </div>\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9667092/media/09648e273e248e7cfd22ade4010b2a6e.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"landing-page-section\">\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9073688/media/bb69af3d8f2404f4cfcc7cecdc558be6.gif\" alt=\"\" />\r\n                <div>\r\n                    <h3>Keep Track Of Your Team</h3>\r\n                    <p>Taskman has statistics panel to see your team progress.\r\n                    Keep track of your team's assignment and completion of tasks easily!</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>Live Updates & Push Notifications</h3>\r\n                    <p>Always be up-to-date with recent activities in your project.\r\n                    our unique system of real-time push notifications will make sure\r\n                    you always know all about the recent developments.</p>\r\n                </div>\r\n                <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/7736965/media/e08e0676dd54ae8715c2d72bbdd51eb2.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"flex try-btn\">\r\n                <Link to=\"/boards\" className=\"link\">Try Taskman!</Link>\r\n            </div>\r\n            <div className=\"landing-page-header\">\r\n                <Link to=\"/boards\" className=\"link\">T<span>a</span>skm<span>a</span>n</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\nimport './BoardPreview.scss'\r\nimport Color from 'color-thief-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrBoard } from '../../store/actions/boardActions';\r\n\r\nexport function BoardPreview({ board }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const LinkPrev = () => (<Link className=\"link\" style={{ color: 'black' }} to={`/board/${board._id}`}>\r\n        <h4>{board.title}</h4>\r\n    </Link>)\r\n\r\n    return (\r\n        <div className=\"board-link links\" key={board._id} onClick={() => dispatch(setCurrBoard(board._id))} style={board.background ? board.background.img ? { backgroundImage: `url(${board.background.img})` } : { backgroundColor: board.background.color } : { backgroundColor: 'white' }}>\r\n            {board.background ? board.background.img ? <Link className=\"link\" to={`/board/${board._id}`}>\r\n                <Color src={board.background.img} crossOrigin=\"anonymous\" format=\"hex\">\r\n                    {({ data, loading }) => {\r\n                        if (loading) return <div>Loading...</div>;\r\n                        return <h4 style={{ color: data }}>{board.title}</h4>\r\n                    }}\r\n                </Color>\r\n            </Link> : <LinkPrev /> : <LinkPrev />}\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { BoardPreview } from '../BoardPreview'\r\nimport './BoardList.scss'\r\n\r\nexport function BoardList({ boardListOp }) {\r\n    const { register, handleSubmit } = useForm();\r\n    const [isCreateBoard, setIsCreateBoard] = useState(null)\r\n\r\n    const onAddBoard = data => {\r\n        boardListOp.addBoard(data.newBoardTitle)\r\n        setIsCreateBoard(!isCreateBoard)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"board-container\">\r\n            {boardListOp.boards.map(board => <li key={board._id}><BoardPreview key={board._id} board={board} /></li>)}\r\n            <li className=\"board-link add-board\">\r\n                {!isCreateBoard && <button onClick={() => setIsCreateBoard(!isCreateBoard)}>Create board</button>}\r\n                {isCreateBoard &&\r\n                    <form onSubmit={handleSubmit(onAddBoard)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" autoComplete=\"off\" {...register(\"newBoardTitle\")} placeholder=\"Board name\" />\r\n                        <button>Create board</button>\r\n                    </form>}\r\n            </li>\r\n        </ul>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground } from '../../store/actions/boardActions.js'\r\nimport { BoardList } from '../../cmps/BoardList'\r\nimport './TaskmanApp.scss'\r\nimport boardService from '../../services/boardService.js'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService.js'\r\n\r\nexport function TaskmanApp() {\r\n    const dispatch = useDispatch()\r\n    const boards = useSelector(state => state.boardReducer.boards)\r\n\r\n    useEffect(() => {\r\n        socketService.setup();\r\n        dispatch(setCurrBoard(null))\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(true))\r\n    }, [])\r\n\r\n    const addBoard = (title) => {\r\n        const newBoard = boardService.getEmptyBoard()\r\n        newBoard.title = title\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(loadBoards())\r\n        // boards.push(newBoard)\r\n    }\r\n    \r\n    if (!boards || !boards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const boardListOp = {\r\n        boards,\r\n        addBoard\r\n    }\r\n\r\n    return (\r\n        <div className=\"sub-container taskman-container\">\r\n            <h2>Your Workspace boards</h2>\r\n            <BoardList boardListOp={boardListOp}></BoardList>\r\n        </div >\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { WidgetLoader } from 'react-cloudinary-upload-widget';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { BoardDetails } from './pages/BoardDetails';\r\nimport { LandingPage } from './pages/LandingPage';\r\nimport { TaskmanApp } from './pages/TaskmanApp';\r\nimport userService from './services/userService';\r\nimport { loadBoards } from './store/actions/boardActions';\r\nimport { loadUsers, login } from './store/actions/userActions';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n  const background = useSelector(state => state.boardReducer.background)\r\n  const loggedinUser = userService.storage.loadUserFromStorage()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUsers())\r\n    dispatch(loadBoards())\r\n  }, [currBoard])\r\n\r\n  useEffect(() => {\r\n    if (loggedinUser && history) {\r\n      dispatch(login(loggedinUser))\r\n      history.push('/boards')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App container\" style={!background ? currBoard ? currBoard.background.color ? { backgroundColor: currBoard.background.color } : { backgroundImage: currBoard.background.img ? `url(${currBoard.background.img})` : '' } : { backgroundColor: 'white' } : { backgroundColor: 'white' }}>\r\n        <AppHeader />\r\n        <WidgetLoader />\r\n        <Switch>\r\n          <Route component={BoardDetails} path='/board/:id?' />\r\n          <Route component={TaskmanApp} path='/boards' />\r\n          <Route component={LandingPage} path='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {\r\n  boards: [],\r\n  currBoard: null,\r\n  background: false,\r\n  filterBy: null,\r\n}\r\n\r\nexport function boardReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return {\r\n        ...state,\r\n        boards: action.boards\r\n      }\r\n    case 'SET_BOARD':\r\n      return {\r\n        ...state,\r\n        currBoard: action.board\r\n      }\r\n    case 'ADD_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.board]\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(board => board._id !== action.boardId)\r\n      }\r\n    case 'UPDATE_BOARD':\r\n      const { updatedBoard } = action\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => board._id === updatedBoard._id ? updatedBoard : board)\r\n      }\r\n    case 'UPDATE_BACKGROUND':\r\n      return {\r\n        ...state,\r\n        background: action.background\r\n      }\r\n    case 'UPDATE_FILTERBY':\r\n      return {\r\n        ...state,\r\n        filterBy: action.filterBy\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","const INITIAL_STATE = {\r\n  users: [],\r\n  user: null\r\n}\r\n\r\nexport function userReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case 'LOAD_USER':\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n    case 'UPDATE_USER':\r\n      const { updatedUser } = action\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => user._id === updatedUser._id ? updatedUser : user)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  boardReducer,\r\n  userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}