{"version":3,"sources":["services/http.service.js","services/userService.js","store/actions/userActions.js","assets/imgs/taskman-loader.svg","cmps/UserProfile/UserProfile.jsx","cmps/AppHeader/AppHeader.jsx","services/utilService.js","services/boardService.js","store/actions/boardActions.js","services/socketService.js","cmps/CardPreview/CardPreview.jsx","cmps/LabelEditModal/LabelEditModal.jsx","cmps/LabelModal/LabelModal.jsx","cmps/MemberModal/MemberModal.jsx","cmps/CheckListModal/CheckListModal.jsx","cmps/DueDateModal/DueDateModal.jsx","cmps/DrawNoteModal/DrawNoteModal.jsx","cmps/Cloudinary/Cloudinary.jsx","assets/imgs/small-loader.svg","cmps/CoverModal/CoverModal.jsx","cmps/TaskModal/TaskModal.jsx","cmps/BoardMenu/BoardMenu.jsx","pages/BoardDetails/BoardDetails.jsx","pages/LandingPage/LandingPage.jsx","cmps/BoardPreview/BoardPreview.jsx","cmps/BoardList/BoardList.jsx","pages/TaskmanApp/TaskmanApp.jsx","App.js","reportWebVitals.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","KEY","id","user","_id","AUTH","query","getUserById","deleteUser","saveUser","getEmptyUser","name","username","password","storage","saveUserToStorage","sessionStorage","setItem","JSON","stringify","loadUserFromStorage","parse","getItem","login","logout","userToLogin","dispatch","userService","type","signup","updateUser","updatedUser","UserProfile","ref","handler","profileOp","isProfile","setIsProfile","useDispatch","useSelector","state","userReducer","useForm","register","handleSubmit","reset","useState","isLogin","setIsLogin","isLoading","setIsLoading","errMsg","setErrMsg","profileRef","useRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","onLogin","loginUsername","loginPass","isLoggedin","onSignup","userToSignup","loginFullname","tasks","isSignup","className","src","loader","alt","style","maxWidth","onClick","icon","faTimes","size","round","length","map","task","idx","onSubmit","autoComplete","placeholder","AppHeader","loggedinUser","to","faHome","faUserCircle","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","txt","possible","i","charAt","filter","term","arr","toLocaleLowerCase","board","includes","phone","email","sort","b","debounce","func","timeout","wait","args","later","clearTimeout","setTimeout","getBoardById","deleteBoard","saveBoard","getEmptyBoard","title","members","cards","activity","background","labels","gLabels","images","cloudUrls","description","getEmptyCard","updateCard","taskToUpdate","cardToUpdate","boardToUpdate","taskIdx","findIndex","t","splice","updateBoard","getEmptyTask","desc","createdAt","Date","now","dueDate","isWithAttachment","cover","checklists","doneAt","attachments","comments","getCoverColors","gCoverColors","cardIdx","card","loadBoards","filterBy","boardService","boards","updatedBoard","setCurrBoard","boardId","removeBoard","msg","updateBackground","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","CardPreview","props","cardPreviewOp","currBoard","boardReducer","setTasks","isAddTask","setIsAddTask","isEditTitle","setIsEditTitle","newTask","labelsDescToggle","ev","bool","stopPropagation","setIsDescShown","doneAtToggle","newBoard","addTask","push","forSocket","addActivity","handleOnDragTaskEnd","result","destination","items","Array","from","source","index","reorderedItem","boardToSave","backgroundColorDueDate","colorDueDate","setCurrCard","onBlur","cardTitle","replace","required","onKeyDown","e","key","preventDefault","defaultValue","openCardModal","onDragEnd","droppableId","provided","droppableProps","innerRef","draggableId","setCurrTask","draggableProps","dragHandleProps","backgroundColor","backgroundImage","isDescShown","label","color","faClock","faCheckSquare","format","withTitle","faSquare","faPaperclip","faAlignLeft","faComments","reduce","acc","checklist","list","faList","accTotal","itemInList","isChecked","member","faPlus","window","LabelEditModal","labelEditModal","setLabelEditModal","faChevronLeft","setLabelModal","labelName","labelColor","LabelModal","border","visibility","addLabel","currTask","find","currLabel","faCheckCircle","editLabel","faPencilAlt","position","width","LabelEditRef","MemberModal","searchMembers","setSearchMembers","setMemberModal","onChange","users","toLowerCase","searchMember","addMemberToTask","chooseMember","currMember","CheckListModal","setChecklistModal","newChecklistToSend","range","addChecklist","defaultMaterialTheme","createMuiTheme","overrides","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","lightBlue","A700","daySelected","dayDisabled","container","DueDateModal","timeStemp","React","selectedDate","setSelectedDate","setDueDateModal","selectedDateStr","addDueDate","ThemeProvider","theme","utils","DateFnsUtils","disableToolbar","variant","margin","value","date","KeyboardButtonProps","DrawNoteModal","locations","setLocations","dot_flag","setDot_flag","flag","setFlag","setColor","setBackgroundColor","setTitle","inputSize","setInputSize","canvasRef","currX","currY","handleCanvasMouse","newLocation","canvas","ctx","getContext","clientX","clientY","getBoundingClientRect","left","top","x","y","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","stroke","setDrawNoteModal","height","onMouseDown","onMouseMove","onMouseOut","onMouseUp","inputColor","inputBackgroungColor","bgc","setBgcToCanvas","htmlFor","faTint","faPaintRoller","clearRect","innerHeight","innerWidth","dataURL","toDataURL","newAtt","Cloudinary","setCloudImgs","cloudOp","sources","sourceKeys","dropboxAppKey","instagramClientId","resourceType","cloudName","uploadPreset","buttonText","borderRadius","padding","folder","onSuccess","info","secure_url","unshift","original_filename","onFailure","err","logging","customPublicId","eager","use_filename","unique_filename","apiKey","accepts","contentType","CoverModal","coverColors","setCoverModal","addCover","attach","crossOrigin","loading","smallLoader","currCard","TaskModal","taskModalOp","setClientX","setClientY","inputFile","useOnClickOutside","labelModal","labelRef","attNameModal","setAttNameModal","editAttachRef","labelEditRef","coverModal","coverRef","memberModal","memberRef","checklistModal","checklistRef","dueDateModal","dueDateRef","drawNoteModal","drawNoteRef","isDesc","setIsDesc","setRange","rengeToShow","toFixed","marginTop","taskTitle","faWindowMaximize","display","dueDateSpanText","descValue","listIdx","item","checked","changeCheckBox","textDecoration","idxInList","input","Object","keys","str","inputItem0","inputItem1","inputItem2","inputItem3","inputItem4","onSubmitItemInList","attac","attIdx","offsetLeft","offsetTop","testLog","att","onAttRemove","onSubmitAtt","faComment","newComment","timeStamp","comment","fromNow","onEditComment","onRemoveComment","faTag","faUser","addMember","onButtonClick","click","faClipboard","faPalette","BoardMenu","boardMenuOp","isAbout","setIsAbout","isBackground","setIsBackground","isFilter","setIsFilter","isLabels","setIsLabels","setLabels","cloudImgs","setActivity","isAddLabel","setIsAddLabel","setFilterBy","sendFilter","isMenu","closeMenu","membersTaskLength","onSearchTask","searchTask","filterTasks","saveLabels","entries","en","forEach","setIsMenu","membersLength","m","inProgress","overdue","completed","membersLabels","membersTasks","dataForMembersChart","datasets","hoverOffset","dataForChart","borderColor","borderWidth","descToUpdate","boardDesc","confirmAlert","message","buttons","changeBackground","decoding","removeIdx","onSearchLabel","labelId","l","deleteLabel","addBoardLabel","addBoardLabelColor","BoardDetails","setMembers","containerRef","events","useScrollOnDrag","history","useHistory","match","draggedCards","setDraggedCards","addTaskForSockets","updateTask","addNewCardForSockets","deleteTaskForSockets","addLabelForSockets","updateCardForSockets","updateCardTitleForSockets","addActivityForSockets","preMembers","menuRef","cardModal","setCardModal","cardModalRef","setIsCardModal","inviteRef","setIsInvite","isAddCard","setIsAddCard","isInvite","isCardModal","xPosEl","setXPosEl","yPosEl","setYPosEl","addMembersToBoard","setMembersToBoard","isScrollOnDradAllowed","setIsScrollOnDradAllowed","c","some","labelToRemove","closeModal","membersInBoard","usersToAdd","memberId","memberToRemove","addNewCard","newCard","newCardTitle","newActivity","img","newCards","cardsIds","failCard","boardTitle","onAddMember","removeUserFromBoard","faBars","direction","previewProvider","onMouseDownCapture","deleteCard","LandingPage","BoardPreview","LinkPrev","BoardList","boardListOp","isCreateBoard","setIsCreateBoard","addBoard","newBoardTitle","TaskmanApp","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","setBackground","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ff24578.chunk.js","sourcesContent":["import Axios from 'axios'\r\n// import { router } from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from \"./http.service\"\r\n\r\nconst KEY = 'user/'\r\nconst AUTH = 'auth/'\r\n\r\nconst gUsersForBack = [{ name: 'Aviv Zohar', username: 'avivzo9', password: '1234', tasks: [] }, { name: 'Hadar Marom', username: 'hadarMa', password: '1234', tasks: [] }, { name: 'Oshri Yoktan', username: 'OshYok', password: '1234', tasks: [] }]\r\n\r\n// saveUser(gUsersForBack[2])\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getUserById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteUser(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from userService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveUser(user) {\r\n    try {\r\n        if (user._id) return await httpService.put(KEY + user._id, user)\r\n        return await httpService.post(KEY, user)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function login(user) {\r\n    try {\r\n        return await httpService.post(AUTH + 'login', user)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        return await httpService.post(AUTH + 'logout')\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\n// storage\r\nconst storage = {\r\n    saveUserToStorage(user) {\r\n        sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    },\r\n    loadUserFromStorage() {\r\n        return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n    }\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getEmptyUser() {\r\n    return {\r\n        name: '',\r\n        username: '',\r\n        password: ''\r\n    }\r\n}\r\n\r\nexport default {\r\n    query,\r\n    getUserById,\r\n    deleteUser,\r\n    saveUser,\r\n    getEmptyUser,\r\n    storage,\r\n    login,\r\n    logout\r\n}","import userService from \"../../services/userService\"\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    const users = await userService.query()\r\n    const action = { type: 'SET_USERS', users }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function login(userToLogin) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userToLogin)\r\n    if (!user) return 'Incorrect username or password';\r\n    userService.storage.saveUserToStorage(user)\r\n    const action = { type: 'LOAD_USER', user }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout()\r\n    userService.storage.saveUserToStorage(null)\r\n    const action = { type: 'LOAD_USER', user: null }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function signup(user) {\r\n  return async dispatch => {\r\n    const confirm = await userService.saveUser(user)\r\n    if (!confirm) return `Username - '${user.username}' is already taken.`\r\n    userService.storage.saveUserToStorage(user)\r\n    const action = { type: 'LOAD_USER', user }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function updateUser(user) {\r\n  return async dispatch => {\r\n    const updatedUser = await userService.saveUser(user)\r\n    userService.storage.saveUserToStorage(updatedUser)\r\n    const action = { type: 'UPDATE_USER', updatedUser }\r\n    dispatch(action)\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/taskman-loader.d5d52ecc.svg\";","import { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useEffect, useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, logout, signup } from '../../store/actions/userActions'\nimport loader from '../../assets/imgs/taskman-loader.svg'\nimport './UserProfile.scss'\nimport Avatar from 'react-avatar'\n\nexport function UserProfile({ profileOp }) {\n    const { isProfile, setIsProfile } = profileOp\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.userReducer.user)\n    const { register, handleSubmit, reset } = useForm();\n    const [isLogin, setIsLogin] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [errMsg, setErrMsg] = useState(null)\n\n    const useOnClickOutside = (ref, handler) => {\n        useEffect(() => {\n            const listener = (event) => {\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n                handler(event);\n            };\n            document.addEventListener(\"mousedown\", listener);\n            document.addEventListener(\"touchstart\", listener);\n            return () => {\n                document.removeEventListener(\"mousedown\", listener);\n                document.removeEventListener(\"touchstart\", listener);\n            };\n        }, [ref, handler]);\n    }\n\n    const profileRef = useRef()\n    useOnClickOutside(profileRef, () => setIsProfile(false));\n\n    const closeMenu = () => setIsProfile(false)\n\n    const onLogin = async data => {\n        setErrMsg(null)\n        setIsLoading(true)\n        const userToLogin = { username: data.loginUsername, password: data.loginPass }\n        const isLoggedin = await dispatch(login(userToLogin))\n        if (isLoggedin) setErrMsg(isLoggedin)\n        setIsLoading(false)\n        reset()\n    }\n\n    const onSignup = async data => {\n        setErrMsg(null)\n        setIsLoading(true)\n        const userToSignup = { name: data.loginFullname, username: data.loginUsername, password: data.loginPass, tasks: [] }\n        const isSignup = await dispatch(signup(userToSignup))\n        setIsLoading(false)\n        if (isSignup) setErrMsg(isSignup)\n        setIsProfile(true)\n        reset()\n    }\n\n    const onLogout = () => {\n        dispatch(logout())\n        setIsProfile(false)\n    }\n\n    if (isLoading) return (<div className=\"profile-loader login-form\"><img src={loader} alt=\"\" /></div>)\n\n    return (\n        <>\n            {user && <section ref={profileRef} className=\"user-menu\" style={isProfile ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n                <div>\n                    <h3>Profile</h3>\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\n                </div>\n                <div>\n                    <Avatar name={user.name} size=\"40\" round={true} />\n                    <p>{user.username}</p>\n                </div>\n                <div className=\"hide-overflow\">\n                    <p>{user.tasks.length ? 'Tasks:' : 'No tasks assigned.'}</p>\n                    {!user.tasks.length ? null : <p>{user.tasks.length} tasks.</p>}\n                    <ul>\n                        {user.tasks ? null : <li>{user.tasks.length}</li>}\n                        {!user.tasks.length ? null : user.tasks.map((task, idx) => <li key={idx}>{task}</li>)}\n                    </ul>\n                </div>\n                <div>\n                    <button onClick={onLogout}>Logout</button>\n                </div>\n            </section>}\n            {!user && <section ref={profileRef} className=\"login-form\" style={isProfile ? { maxWidth: '100%' } : { maxWidth: '0' }}>\n                <h3>{isLogin ? 'Login' : 'Signup'}</h3>\n                {isLogin && <form onSubmit={handleSubmit(onLogin)}>\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"username\" {...register(\"loginUsername\")} />\n                    <input type=\"password\" autoComplete=\"off\" placeholder=\"password\" {...register(\"loginPass\")} />\n                    {errMsg && <p className=\"fail-login\">{errMsg}</p>}\n                    <button>Login</button>\n                </form>}\n                {!isLogin && <form onSubmit={handleSubmit(onSignup)}>\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"fullname\" {...register(\"loginFullname\")} />\n                    <input type=\"text\" autoComplete=\"off\" placeholder=\"username\" {...register(\"loginUsername\")} />\n                    <input type=\"password\" autoComplete=\"off\" placeholder=\"password\" {...register(\"loginPass\")} />\n                    <button>Signup</button>\n                </form>}\n                {isLogin && <p onClick={() => setIsLogin(!isLogin)}>Not a registered user?<br />Click here to sign-up.</p>}\n                {!isLogin && <p onClick={() => setIsLogin(!isLogin)}>Registered user?<br />Click here to login.</p>}\n            </section>}\n        </>\n    )\n}","import { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './AppHeader.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { UserProfile } from '../UserProfile'\r\nimport { useEffect, useState } from 'react'\r\nimport { login } from '../../store/actions/userActions'\r\nimport userService from '../../services/userService'\r\n\r\nexport function AppHeader() {\r\n    const dispatch = useDispatch()\r\n    const [isProfile, setIsProfile] = useState(false)\r\n    const loggedinUser = userService.storage.loadUserFromStorage()\r\n\r\n    useEffect(() => {\r\n        if (loggedinUser) dispatch(login(loggedinUser))\r\n    }, [])\r\n\r\n    const profileOp = {\r\n        setIsProfile,\r\n        isProfile\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"app-header sub-container\">\r\n                <Link className=\"link\" to=\"/boards\" ><FontAwesomeIcon icon={faHome} /></Link>\r\n                <Link className=\"link\" to=\"/boards\" >Taskman</Link>\r\n                <button className=\"link\" onClick={() => setIsProfile(!isProfile)} ><FontAwesomeIcon icon={faUserCircle} /></button>\r\n            </nav>\r\n            <UserProfile profileOp={profileOp} />\r\n        </>\r\n    )\r\n}\r\n","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  filter,\r\n  sort,\r\n  debounce,\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n  var txt = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction filter(term, arr) {\r\n  term = term.toLocaleLowerCase()\r\n  return arr.filter(board => {\r\n    return board.name.toLocaleLowerCase().includes(term) ||\r\n      board.phone.toLocaleLowerCase().includes(term) ||\r\n      board.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait = 1000) {\r\n  let timeout;\r\n  return function (...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}","import { httpService } from \"./http.service\"\r\nimport { utilService } from \"./utilService\"\r\nconst KEY = 'board/'\r\n\r\nexport default {\r\n    query,\r\n    getBoardById,\r\n    deleteBoard,\r\n    saveBoard,\r\n    getEmptyBoard,\r\n    getEmptyCard,\r\n    updateCard,\r\n    updateBoard,\r\n    getEmptyTask,\r\n    getCoverColors,\r\n}\r\n\r\nconst cloudUrls = [\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621015877/taskman/jared-verdi-PNKwdJ8WetM-unsplash_aabpzg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016569/taskman/zsofia-szalay-TbrzJbcacnQ-unsplash_bst628.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016567/taskman/the-nigmatic-lUnLaEWzcz8-unsplash_vcfxju.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016565/taskman/steve-johnson-274PPmlOjyQ-unsplash_twaarr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/omer-salom-LoijtQXXNhs-unsplash_w6cs4h.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/jonny-gios-h_XcnLbDc_0-unsplash_lhi5si.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/inaki-del-olmo-IRCzpl2YYKE-unsplash_tpzeyw.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016564/taskman/joel-holland-TRhGEGdw-YY-unsplash_dqapzs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016558/taskman/ian-schneider-TamMbr4okv4-unsplash_r85bnj.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016557/taskman/mohammad-alizade-CDu0x1Aiils-unsplash_jqizxr.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016556/taskman/mohammad-alizade-62t_kKa2YlA-unsplash_rbytvb.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016555/taskman/mohamed-rishfaan-ir_65wcK_DA-unsplash_qgfljs.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016554/taskman/ines-mills-TGs0tHMk4eg-unsplash_bkqpbf.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/erol-ahmed-aIYFR0vbADk-unsplash_g8hmym.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016551/taskman/duy-thanh-nguyen-ZeoSVUcWjfY-unsplash_z4qs2l.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016550/taskman/fransiskus-filbert-mangundap-C9hqYikX34w-unsplash_mqj9zi.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016548/taskman/arpad-spodni-KbKQY_LjmuE-unsplash_fqlcyv.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016546/taskman/dave-hoefler-PkQH-GHEp0A-unsplash_jfurlc.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016544/taskman/fabrice-villard-Du41jIaI5Ww-unsplash_kqcna2.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/estee-janssens-aQfhbxailCs-unsplash_slddqg.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016542/taskman/angel-luciano-XQJ0BBSvTs0-unsplash_d7advt.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016538/taskman/callum-wale-V8j3F6Ik9_s-unsplash_clbkte.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016537/taskman/braden-jarvis-prSogOoFmkw-unsplash_sgtmnd.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016534/taskman/danielle-macinnes-IuLgi9PWETU-unsplash_u9xmg7.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621016533/taskman/carolyn-christine-D7bmnvGJA2Q-unsplash_oz27jz.jpg',\r\n    'https://res.cloudinary.com/dtu0lzwpw/image/upload/v1621018122/taskman/vlad-kutepov-WYJ9c7uSdnU-unsplash_c2g6gy.jpg',\r\n]\r\nconst gLabels = [{ \"_id\": utilService.makeId(), \"desc\": \"Copy Request\", \"color\": \"#61BD4F\" }, { \"_id\": utilService.makeId(), \"desc\": \"One more step\", \"color\": \"#F2D600\" }, { \"_id\": utilService.makeId(), \"desc\": \"Design Team\", \"color\": \"#FF9F1A\" }, { \"_id\": utilService.makeId(), \"desc\": \"Product Marketing\", \"color\": \"#EB5A46\" }, { \"_id\": utilService.makeId(), \"desc\": \"Trello Tip\", \"color\": \"#C377E0\" }, { \"_id\": utilService.makeId(), \"desc\": \"Help\", \"color\": \"#0079BF\" }, { \"_id\": utilService.makeId(), \"desc\": \"Priority\", \"color\": \"#51E898\" }]\r\nconst gCoverColors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#5ba4cf', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\n// const newBoard = getEmptyBoard()\r\n// newBoard.title = 'Taskman board'\r\n// saveBoard(newBoard)\r\n\r\n// CRUDL\r\nasync function query() {\r\n    try {\r\n        return await httpService.get(KEY)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function getBoardById(id) {\r\n    try {\r\n        return await httpService.get(KEY + id)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nasync function deleteBoard(id) {\r\n    try {\r\n        return await httpService.delete(KEY + id)\r\n    } catch (err) {\r\n        console.log('Error from boardService - ', err);\r\n    }\r\n}\r\n\r\nasync function saveBoard(board) {\r\n    try {\r\n        if (board._id) return await httpService.put(KEY + board._id, board)\r\n        return await httpService.post(KEY, board)\r\n    } catch (err) {\r\n        console.log('err:', err)\r\n    }\r\n}\r\n\r\nfunction updateCard(taskToUpdate, cardToUpdate, boardToUpdate) {\r\n    // if you want to delete a task use the func and send the idx ----updateBoard(idx)----\r\n    if (typeof (taskToUpdate) !== 'number') {\r\n        const taskIdx = cardToUpdate.tasks.findIndex(t => t._id === taskToUpdate._id)\r\n        cardToUpdate.tasks.splice(taskIdx, 1, taskToUpdate)\r\n    } else {\r\n        cardToUpdate.tasks.splice(taskToUpdate, 1)\r\n    }\r\n    return updateBoard(cardToUpdate, boardToUpdate)\r\n}\r\n\r\nfunction updateBoard(cardToUpdate, boardToUpdate) {\r\n    if (typeof (cardToUpdate) !== 'number') {\r\n        const cardIdx = boardToUpdate.cards.findIndex(card => card._id === cardToUpdate._id)\r\n        boardToUpdate.cards.splice(cardIdx, 1, cardToUpdate)\r\n    } else {\r\n        boardToUpdate.cards.splice(cardToUpdate, 1)\r\n    }\r\n    const updatedBoard = { ...boardToUpdate, cards: [...boardToUpdate.cards] }\r\n    return updatedBoard;\r\n}\r\n\r\n// get functions /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getCoverColors() {\r\n    return gCoverColors;\r\n}\r\n\r\nfunction getEmptyBoard() {\r\n    return {\r\n        title: '',\r\n        members: [],\r\n        cards: [{ _id: utilService.makeId(), title: 'Your first card!', tasks: [] }],\r\n        activity: [],\r\n        background: [],\r\n        labels: gLabels,\r\n        images: cloudUrls,\r\n        description: ''\r\n    }\r\n}\r\n\r\nfunction getEmptyCard() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        tasks: []\r\n    }\r\n}\r\n\r\nfunction getEmptyTask() {\r\n    return {\r\n        _id: utilService.makeId(),\r\n        title: '',\r\n        desc: '',\r\n        createdAt: Date.now(),\r\n        labels: [],\r\n        dueDate: '',\r\n        activity: [],\r\n        members: [],\r\n        isWithAttachment: false,\r\n        cover: '',\r\n        checklists: [],\r\n        doneAt: '',\r\n        attachments: [],\r\n        comments: []\r\n    }\r\n}","import boardService from '../../services/boardService'\r\n\r\nexport function loadBoards(filterBy) {\r\n  return async dispatch => {\r\n    const boards = await boardService.query(filterBy)\r\n    const action = { type: 'SET_BOARDS', boards }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function getBoardById(boardId) {\r\n  return async dispatch => {\r\n    const board = await boardService.getBoardById(boardId)\r\n    await dispatch({ type: 'SET_BOARD', board })\r\n    return board\r\n  }\r\n}\r\nexport function saveBoard(board) {\r\n  return async dispatch => {\r\n    const updatedBoard = await boardService.saveBoard(board)\r\n    if (!board._id) dispatch({ type: 'ADD_BOARD', board: updatedBoard })\r\n    else dispatch({ type: 'UPDATE_BOARD', updatedBoard })\r\n    return updatedBoard;\r\n  }\r\n}\r\nexport function setCurrBoard(boardId) {\r\n  return async dispatch => {\r\n    var board = null\r\n    if (boardId) board = await boardService.getBoardById(boardId)\r\n    dispatch({ type: 'SET_BOARD', board })\r\n  }\r\n}\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    const res = await boardService.deleteBoard(boardId)\r\n    if (!res) return\r\n    dispatch({ type: 'REMOVE_BOARD', boardId })\r\n    return res.msg;\r\n  }\r\n}\r\nexport function updateBackground(background) {\r\n  return async dispatch => {\r\n    await dispatch({ type: 'UPDATE_BACKGROUND', background })\r\n  }\r\n}\r\nexport function updateFilterBy(filterBy) {\r\n  return async dispatch => {\r\n    await dispatch({ type: 'UPDATE_FILTERBY', filterBy })\r\n  }\r\n}","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nfunction createSocketService() {\r\n    var socket\r\n    const socketService = {\r\n        setup() {\r\n            socket = io(baseUrl)\r\n        },\r\n        on(eventName, cb) {\r\n            if (!socket) socketService.setup();\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb = null) {\r\n            if (!socket) socketService.setup();\r\n            if (!cb) socket.removeAllListeners(eventName)\r\n            else socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            if (!socket) socketService.setup();\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        }\r\n    }\r\n    return socketService\r\n}","import { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveBoard } from '../../store/actions/boardActions';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport boardService from '../../services/boardService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faList, faTimes, faClock, faSquare, faPlus, faPaperclip, faAlignLeft, faComments } from '@fortawesome/free-solid-svg-icons'\r\nimport './CardPreview.scss'\r\nimport Avatar from 'react-avatar';\r\nimport Moment from 'react-moment';\r\nimport { socketService } from '../../services/socketService';\r\n\r\nexport function CardPreview(props) {\r\n    const { card, cardPreviewOp } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [tasks, setTasks] = useState(card.tasks)\r\n    const [isAddTask, setIsAddTask] = useState(null)\r\n    const [isEditTitle, setIsEditTitle] = useState(false)\r\n    var newTask = boardService.getEmptyTask()\r\n\r\n    useEffect(() => {\r\n        setIsEditTitle(!isEditTitle)\r\n    }, [currBoard])\r\n\r\n    const setCardTitle = data => {\r\n        if (!data.cardTitle) return\r\n        card.title = data.cardTitle.replace(/'/g, '')\r\n        const boardToUpdate = boardService.updateBoard(card, currBoard)\r\n        socketService.emit('card to-update-card', card)\r\n        socketService.emit('card to-update-card-title', card)\r\n        setIsEditTitle(false)\r\n        dispatch(saveBoard(boardToUpdate))\r\n    }\r\n\r\n    const labelsDescToggle = (ev, bool) => {\r\n        ev.stopPropagation()\r\n        cardPreviewOp.setIsDescShown(bool)\r\n    }\r\n\r\n    const doneAtToggle = (ev, task) => {\r\n        ev.stopPropagation()\r\n        if (!task.doneAt) task.doneAt = Date.now()\r\n        else task.doneAt = ''\r\n        socketService.emit('task to-update-task', { card, task })\r\n        const newBoard = boardService.updateCard(task, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n    }\r\n\r\n    const addTask = async data => {\r\n        newTask.title = data.newTask\r\n        tasks.push(newTask)\r\n        setTasks(tasks)\r\n        const newBoard = boardService.updateCard(newTask, card, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        setIsAddTask(!isAddTask)\r\n        const forSocket = { task: newTask, card: card._id }\r\n        socketService.emit('task to-add-task', forSocket);\r\n        cardPreviewOp.addActivity('Guest', 'added', 'task', card.title)\r\n        newTask = boardService.getEmptyTask()\r\n        reset()\r\n    }\r\n\r\n    const handleOnDragTaskEnd = async (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(tasks);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        card.tasks = items\r\n        setTasks(card.tasks);\r\n        const boardToSave = await boardService.updateBoard(card, currBoard)\r\n        dispatch(saveBoard(boardToSave))\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? '#F4F5F7' : '#ec9488')\r\n    }\r\n\r\n    const colorDueDate = (task) => {\r\n        return task.doneAt ? 'white' : ((task.dueDate > Date.now()) ? '#8b95a7' : 'white')\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-card\" onClick={() => cardPreviewOp.setCurrCard(card)}>\r\n            <div className=\"hide-overflow\">\r\n                <div className=\"title\">\r\n                    <form onBlur={handleSubmit(setCardTitle)}>\r\n                        <input type=\"text\" required onKeyDown={(e) => { if (e.key === 'Enter') e.preventDefault(); if (e.key === '\\'') return }} {...register(\"cardTitle\")} defaultValue={card.title} placeholder=\"Card name\" autoComplete=\"off\" />\r\n                    </form>\r\n                    <div onClick={(ev) => cardPreviewOp.openCardModal(ev, card)} className=\"manage-card\"><p>⋮</p></div>\r\n                </div>\r\n                <DragDropContext onDragEnd={handleOnDragTaskEnd}>\r\n                    <Droppable droppableId=\"tasks\">\r\n                        {(provided) => (\r\n                            <ul {...provided.droppableProps} ref={provided.innerRef} className=\"tasks-container\">\r\n                                {tasks.map((task, idx) => {\r\n                                    return (\r\n                                        <Draggable key={task._id} draggableId={task._id} index={idx}>\r\n                                            {(provided) => (\r\n                                                <li onClick={() => cardPreviewOp.setCurrTask(task)} key={task._id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className=\"card-task\">\r\n                                                    {(!task.cover) ? null : (task.cover.includes('#')) ? <div className=\"task-cover-color\" style={{ backgroundColor: `${task.cover}` }} ></div> : <div className=\"task-cover-img\" style={{ backgroundImage: `url(${task.cover})` }}></div>}\r\n                                                    <div className=\"label-color-to-preview-container\">\r\n                                                        {!cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, true)}></label>)}\r\n                                                        {cardPreviewOp.isDescShown && task.labels.map((label, idx) => <label key={idx} className=\"label-color-open-to-preview\" style={{ backgroundColor: `${label.color}` }} onClick={(ev) => labelsDescToggle(ev, false)}>{label.desc}</label>)}\r\n                                                    </div>\r\n                                                    <span>{task.title}</span>\r\n                                                    <section className=\"container-of-all\">\r\n                                                        <section className=\"buttom-preview-info\">\r\n                                                            {!task.dueDate ? null : !task.doneAt ?\r\n                                                                <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                    <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-home\" icon={faSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                                </div> :\r\n                                                                <div className=\"due-date-to-preview\" style={{ color: colorDueDate(task), backgroundColor: backgroundColorDueDate(task) }} onClick={(ev) => doneAtToggle(ev, task)}>\r\n                                                                    <FontAwesomeIcon className=\"icon font-awesome-clock\" icon={faClock} /><FontAwesomeIcon className=\"icon font-awesome-check-square\" icon={faCheckSquare} /><Moment format=\"MMM D\" withTitle>{task.dueDate}</Moment>\r\n                                                                </div>}\r\n                                                            {!task.attachments.length ? null : <div><FontAwesomeIcon icon={faPaperclip} /> {task.attachments.length} </div>}\r\n                                                            {!task.desc ? null : <div><FontAwesomeIcon icon={faAlignLeft} /></div>}\r\n                                                            {!task.comments.length ? null : <div><FontAwesomeIcon icon={faComments} />{task.comments.length}</div>}\r\n                                                            {(!task.checklists.length || (task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0) <= 0)) ? null :\r\n                                                                < p > <FontAwesomeIcon icon={faList} />{task.checklists.reduce((accTotal, checklist) => {\r\n                                                                    return accTotal + checklist.list.reduce((acc, itemInList) => itemInList.isChecked + acc, 0)\r\n                                                                }, 0)}/\r\n                                                                    {task.checklists.reduce((acc, checklist) => checklist.list.length + acc, 0)}\r\n                                                                </p>}\r\n                                                        </section>\r\n                                                        {!task.members.length ? null : <div className=\"avatar-card-preview\">\r\n                                                            {task.members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                                                        </div>}\r\n                                                    </section>\r\n                                                </li>\r\n                                            )}</Draggable>)\r\n                                })}{provided.placeholder}\r\n                            </ul>)}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                {!isAddTask && <button className=\"add-task-btn\" onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon> Add task</button>}\r\n                {isAddTask && <form className=\"add-task-container\" onSubmit={handleSubmit(addTask)}>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" autoComplete=\"off\" required {...register(\"newTask\")} placeholder=\"Enter a title for this card…\" defaultValue={newTask.title} />\r\n                    <div className=\"add-task-btns\">\r\n                        <button>Add Task</button>\r\n                        <p onClick={() => setIsAddTask(!isAddTask)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                    </div>\r\n                </form>}\r\n            </div>\r\n        </div >\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelEditModal.scss'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveBoard } from '../../store/actions/boardActions';\r\n\r\nexport function LabelEditModal(props) {\r\n    const { labelEditModal, currBoard } = props\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n\r\n\r\n    const onChangeEditLabel = (data) => {\r\n        labelEditModal.desc = data.labelName\r\n        labelEditModal.color = data.labelColor\r\n        props.setLabelModal(labelEditModal)\r\n        dispatch(saveBoard({ ...currBoard }))\r\n        props.setLabelEditModal(false)\r\n    }\r\n    return (\r\n        <div className=\"label-edit-modal\">\r\n            <div className=\"labels-edit-modal-header\">\r\n                <button onClick={() => props.setLabelEditModal(false)}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                <h3>Edit Label</h3>\r\n                <button className=\"btn-close-icon\" onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></button>\r\n            </div>\r\n            <form onSubmit={handleSubmit(res => onChangeEditLabel(res))}>\r\n                <p>Name:</p>\r\n                <input type=\"text\" name=\"edit-name\" autoComplete=\"off\" defaultValue={labelEditModal.desc} {...register('labelName')} onKeyDown={e => { if (e.key === 'Enter') e.preventDefault() }} />\r\n                <p>Color:</p>\r\n                <input type=\"color\" name=\"edit-color\" className=\"edit-color\" defaultValue={labelEditModal.color} {...register('labelColor')} />\r\n                <button>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { LabelEditModal } from '../LabelEditModal/LabelEditModal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faPencilAlt, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './LabelModal.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function LabelModal(props) {\r\n    const [labelEditModal, setLabelEditModal] = useState(null)\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const labels = currBoard.labels\r\n\r\n    const chooseLabel = (color) => {\r\n        props.addLabel(color)\r\n    }\r\n\r\n    const editLabel = (ev, label) => {\r\n        ev.stopPropagation()\r\n        setLabelEditModal(label)\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            {<div className=\"label-modal\" style={!labelEditModal ? { maxWidth: '280px' } : { maxWidth: 0, border: 'none', visibility: 'visible' }}>\r\n                <div className=\"modal-header\">\r\n                    <h3>Labels</h3>\r\n                    <p onClick={() => props.setLabelModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <ul className=\"labels-container\">\r\n                    {labels.map((label, idx) => {\r\n                        return <li onClick={() => chooseLabel(label)} key={idx}  >\r\n                            <div className=\"label-to-show\" style={{ backgroundColor: `${label.color}` }}>\r\n                                <p>{label.desc}</p>\r\n                                <span>{(props.currTask.labels.find((currLabel) => currLabel.color === label.color) ? <FontAwesomeIcon className=\"fa\" icon={faCheckCircle} /> : null)}</span>\r\n                            </div>\r\n                            <button className=\"edit-label-btn\" onClick={(ev) => editLabel(ev, label)}><FontAwesomeIcon icon={faPencilAlt} /></button>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>}\r\n            {labelEditModal && <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={props.LabelEditRef}><LabelEditModal setLabelModal={props.setLabelModal} currBoard={currBoard} labelEditModal={labelEditModal} setLabelEditModal={setLabelEditModal} addLabel={props.addLabel}></LabelEditModal></div>}\r\n        </section >\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './MemberModal.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport Avatar from 'react-avatar'\r\nimport { socketService } from '../../services/socketService'\r\nimport { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport function MemberModal(props) {\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const [searchMembers, setSearchMembers] = useState(currBoard.members)\r\n\r\n    const onSearchMember = data => {\r\n        const users = currBoard.members.filter(user => {\r\n            return user.name.toLowerCase().includes(data.searchMember.toLowerCase())\r\n        })\r\n        if (!users.length) users.push({ _id: \"failMember\", name: \"Member not found.\" })\r\n        setSearchMembers(users)\r\n    }\r\n    const chooseMember = (member) => {\r\n        // socketService.emit(\"add-member-to-task\", member);\r\n        props.addMemberToTask(member._id)\r\n    }\r\n    const chooseMemberForSockets = (member) => {\r\n        props.addMemberToTask(member)\r\n    }\r\n    useEffect(() => {\r\n        socketService.on(\"add-member-to-task-from-back\", (() => {\r\n        }))\r\n        // socketService.on(\"add-member-to-task-from-back\", chooseMemberForSockets)\r\n    })\r\n\r\n    return (\r\n        <div className=\"member-modal\" >\r\n            <div className=\"modal-header\">\r\n                <h3>Members</h3>\r\n                <p onClick={() => props.setMemberModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <form onChange={handleSubmit(onSearchMember)}>\r\n                <input autoComplete=\"off\" onKeyDown={e => { if (e.key === 'Enter') e.preventDefault() }} {...register(\"searchMember\")} type=\"text\" placeholder=\"Search members...\" />\r\n            </form>\r\n            <h3>Users:</h3>\r\n            <ul className=\"member-container\">\r\n                {searchMembers.map(member => member._id !== 'failMember' ? <li onClick={() => chooseMember(member)} key={member._id} className=\"members-list\" >\r\n                    <Avatar key={member._id} name={member.name} size=\"30\" round={true} />\r\n                    <span>{member.name}</span>\r\n                    <span className=\"member-icon\">{(props.currTask.members.find((currMember) => currMember._id === member._id) ? <FontAwesomeIcon icon={faCheckCircle}> </FontAwesomeIcon> : null)}</span></li> :\r\n                    <li className=\"members-list\" key={member._id}><span>{member.name}</span>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from \"react-hook-form\";\r\nimport './CheckListModal.scss'\r\n\r\nexport function CheckListModal(props) {\r\n    const { register, handleSubmit } = useForm();\r\n    const setTitle = data => {\r\n        const newChecklistToSend = { title: data.title, list: [], range: 0 }\r\n        props.addChecklist(newChecklistToSend)\r\n        props.setChecklistModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"checklist-modal\" >\r\n            <div className=\"modal-header\">\r\n                <h3>Add Checklist</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setChecklistModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n                <h3>Title:</h3>\r\n            <form onSubmit={handleSubmit(setTitle)}>\r\n                <input type=\"text\" placeholder=\"Checklist title\" autoComplete=\"off\" id=\"title\" name=\"title\"  {...register(\"title\")} defaultValue='' />\r\n                <button>Add checklist</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import 'date-fns';\r\nimport './DueDateModal.scss'\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { lightBlue } from '@material-ui/core/colors';\r\n\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n    overrides: {\r\n        MuiPickersCalendarHeader: {\r\n            switchHeader: {\r\n                backgroundColor: 'inherit',\r\n                color: '#172b4d',\r\n            },\r\n        },\r\n        MuiPickersDay: {\r\n            day: {\r\n                color: lightBlue.A700,\r\n            },\r\n            daySelected: {\r\n                color: '#fff !important',\r\n                backgroundColor: 'rgb(66, 82, 110)',\r\n            },\r\n            dayDisabled: {\r\n                color: lightBlue[\"100\"],\r\n            },\r\n            container: {\r\n                backgroundColor: \"black\"\r\n            },\r\n            current: {\r\n                color: 'rgb(0, 82, 204)',\r\n                border: 'rgb(0, 82, 204) 2px solid',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport function DueDateModal(props) {\r\n\r\n    const timeStemp = Date.now() + 604800000 //the default is next week\r\n    const defaultNextWeek = new Date(Date.now() + 604800000);\r\n    const [selectedDate, setSelectedDate] = React.useState(timeStemp);\r\n\r\n    const submit = () => {\r\n        var selectedDateStr = Date.parse(selectedDate)\r\n        props.addDueDate(selectedDateStr)\r\n        props.setDueDateModal(false)\r\n    }\r\n    return (\r\n        <div className=\"due-date-modal\">\r\n            <section className=\"modal-header\">\r\n                <h3>Due Date</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setDueDateModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <form onSubmit={submit}>\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"static\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Pick A Deadline\"\r\n                            value={selectedDate}\r\n                            onChange={(date) => setSelectedDate(date)}\r\n                            KeyboardButtonProps={{ 'aria-label': 'change date', }}\r\n                        ></KeyboardDatePicker>\r\n                    </MuiPickersUtilsProvider>\r\n                </ThemeProvider>\r\n                <div className=\"ddm-btn\">\r\n                    <button>save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n","import './DrawNoteModal.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaintRoller, faTimes, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useRef, useState } from \"react\";\r\nimport { utilService } from '../../services/utilService';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport function DrawNoteModal(props) {\r\n    const [locations, setLocations] = useState([])\r\n    const [dot_flag, setDot_flag] = useState(false)\r\n    const [flag, setFlag] = useState(false)\r\n    const [color, setColor] = useState('#000')\r\n    const [backgroundColor, setBackgroundColor] = useState('#fff')\r\n    const [title, setTitle] = useState('')\r\n    const [inputSize, setInputSize] = useState(3)\r\n    const canvasRef = useRef(null)\r\n    const { register, handleSubmit, reset } = useForm();\r\n\r\n    var prevX = 0, currX = 0, prevY = 0, currY = 0;\r\n\r\n    const handleCanvasMouse = (e, res) => {\r\n        let newLocation\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        setDot_flag(true)\r\n        if (res === 'down') {\r\n            setFlag(true);\r\n            prevX = e.clientX;\r\n            prevY = e.clientY;\r\n            currX = e.clientX - canvas.getBoundingClientRect().left;\r\n            currY = e.clientY - canvas.getBoundingClientRect().top;\r\n            newLocation = { x: currX, y: currY }\r\n            setLocations([...locations, newLocation])\r\n            if (dot_flag) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = backgroundColor;\r\n                ctx.fillRect(currX, currY, 2, 2);\r\n                ctx.closePath();\r\n                setDot_flag(false)\r\n            }\r\n        }\r\n        if (res === 'up' || res === \"out\") {\r\n            setFlag(false);\r\n        }\r\n        if (res === 'move') {\r\n            if (flag) {\r\n                prevX = currX;\r\n                prevY = currY;\r\n                currX = e.clientX - canvas.getBoundingClientRect().left;\r\n                currY = e.clientY - canvas.getBoundingClientRect().top;\r\n                newLocation = { x: currX, y: currY }\r\n                setLocations([...locations, newLocation])\r\n                draw(ctx);\r\n            }\r\n        }\r\n    }\r\n\r\n    const draw = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.moveTo(locations[locations.length - 1].x, locations[locations.length - 1].y);\r\n        ctx.lineTo(currX, currY);\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = inputSize;\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setLocations([])\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.clearRect(0, 0, window.innerHeight, window.innerWidth)\r\n        setBackgroundColor('#fff')\r\n    }\r\n\r\n    const handleSave = () => {\r\n        const canvas = canvasRef.current\r\n        var dataURL = canvas.toDataURL();\r\n        const newAtt = { _id: utilService.makeId(), title: title || '', src: dataURL }\r\n        props.currTask.attachments.push(newAtt)\r\n        props.updateBoard(props.currTask)\r\n        reset({ title: '' })\r\n        props.setDrawNoteModal(false)\r\n    }\r\n\r\n    const setBgcToCanvas = (bgc) => {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(0, 0, 300, 400);\r\n        setBackgroundColor(bgc)\r\n    }\r\n\r\n    const setControllers = (res) => {\r\n        setColor(res.inputColor)\r\n        setInputSize(res.inputSize)\r\n        if (res.inputBackgroungColor !== backgroundColor) setBgcToCanvas(res.inputBackgroungColor)\r\n    }\r\n\r\n    const setTitleName = (res) => {\r\n        setTitle(res.title)\r\n    }\r\n\r\n    return (\r\n        <div className=\"draw-note-modal\">\r\n            <section className=\"modal-header\">\r\n                <h3>Draw Note</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setDrawNoteModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </section>\r\n            <section className=\"draw-note-modal-body\">\r\n                <div className=\"canvas-container\">\r\n                    <form onChange={handleSubmit(setTitleName)}>\r\n                        <h3>Note Title</h3>\r\n                        <input placeholder=\"Note Title\" type=\"text\" autoComplete=\"off\" id=\"canvas-title\" name=\"canvas-title\"  {...register(\"title\")} defaultValue='' onKeyDown={e => { if (e.key === 'Enter') e.preventDefault() }} />\r\n                    </form>\r\n                    <canvas ref={canvasRef} width='300px' height='400px' onMouseDown={res => handleCanvasMouse(res, 'down')} onMouseMove={res => handleCanvasMouse(res, 'move')} onMouseOut={res => handleCanvasMouse(res, 'out')} onMouseUp={res => handleCanvasMouse(res, 'up')} />\r\n                    <form className=\"canvas-inputs\" onChange={handleSubmit(setControllers)}>\r\n                        <div>\r\n                            <label htmlFor=\"input-color\"><FontAwesomeIcon className=\"fa\" icon={faTint} /> Color\r\n                                <input type=\"color\" id=\"input-color\" name=\"input-color\"  {...register(\"inputColor\")} defaultValue={color} />\r\n                            </label>\r\n                            <label htmlFor=\"input-backgroungColor\"><FontAwesomeIcon className=\"fa\" icon={faPaintRoller} /> Background Color\r\n                                <input type=\"color\" id=\"input-backgroungColor\" name=\"input-backgroungColor\"  {...register(\"inputBackgroungColor\")} defaultValue={'#fff'} />\r\n                            </label>\r\n                        </div>\r\n                        <label htmlFor=\"input-size\">size</label>\r\n                        <input type=\"number\" id=\"input-size\" name=\"input-size\"  {...register(\"inputSize\")} defaultValue={inputSize} />\r\n                    </form>\r\n                    <div className=\"canvas-btns\">\r\n                        <button onClick={handleClear}>Clear</button>\r\n                        <button onClick={handleSave}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Widget } from 'react-cloudinary-upload-widget'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { utilService } from '../../services/utilService'\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions'\r\nimport './Cloudinary.scss'\r\n\r\nexport function Cloudinary({ type, txt, currTask, setCloudImgs, cloudOp }) {\r\n    const dispatch = useDispatch()\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n\r\n    const onAttAdd = (res) => {\r\n        var newAtt\r\n        if (type === 'cover') {\r\n            currTask.cover = res.info.secure_url\r\n            cloudOp.updateBoard(currTask)\r\n        }\r\n        else if (type === 'background') {\r\n            currBoard.images.unshift(res.info.secure_url)\r\n            setCloudImgs(currBoard.images)\r\n            dispatch(saveBoard(currBoard))\r\n            dispatch(setCurrBoard(currBoard._id))\r\n        }\r\n        else {\r\n            newAtt = { _id: utilService.makeId(), title: res.info.original_filename, src: res.info.secure_url }\r\n            currTask.attachments.push(newAtt)\r\n            cloudOp.updateBoard(currTask)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"cloudinary-container\">\r\n            <Widget\r\n                sources={['local', 'camera', 'url', 'dropbox', 'instagram']}\r\n                sourceKeys={{ dropboxAppKey: 'idwo4j2egt6411m', instagramClientId: '14c890ce047a8defd4410d4bd0b1d823' }}\r\n                resourceType={'image'}\r\n                cloudName={'dtu0lzwpw'}\r\n                uploadPreset={'aywupxtw'}\r\n                buttonText={txt || 'Attachments'}\r\n                style={{\r\n                    color: 'inherit',\r\n                    border: 'none',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    backgroundColor: 'inherit',\r\n                    borderRadius: '5px',\r\n                    padding: 0\r\n                }}\r\n                folder={'taskman'}\r\n                onSuccess={onAttAdd}\r\n                onFailure={err => console.log(err)}\r\n                logging={false}\r\n                customPublicId={'sample'}\r\n                eager={'w_400,h_300,c_pad|w_260,h_200,c_crop'}\r\n                use_filename={true}\r\n                unique_filename={true}\r\n                apiKey={639164948471337}\r\n                accepts={'application/json'}\r\n                contentType={'application/json'}\r\n                withCredentials={true}\r\n            />\r\n        </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/small-loader.3f60b3a5.svg\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService'\r\nimport Color from 'color-thief-react';\r\nimport './CoverModal.scss'\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\nimport smallLoader from '../../assets/imgs/small-loader.svg'\r\n\r\nexport function CoverModal(props) {\r\n    const coverColors = boardService.getCoverColors()\r\n\r\n    return (\r\n        <section className=\"cover-modal\" style={!props.currTask.cover ? { top: '202px' } : null}>\r\n            <div className=\"modal-header\">\r\n                <h3>Cover</h3>\r\n                <p className=\"btn-close-icon\" onClick={() => props.setCoverModal(false)}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n            </div>\r\n            <div className=\"cover-modal-body\">\r\n                    <h3>Colors</h3>\r\n                <div className=\"cover-color-container\">\r\n                    {coverColors.map((color, idx) => <span className=\"cover-color\" key={idx} onClick={() => props.addCover(color)} style={{ backgroundColor: color }}></span>)}\r\n                </div>\r\n                {!props.currTask.attachments.length ? null : < div >\r\n                    <h3>Attachments</h3>\r\n                    <div className=\"cover-attachments-container hide-overflow\">\r\n                        {props.currTask.attachments.map((attach) => {\r\n                            return <Color crossOrigin=\"anonymous\" key={attach._id} src={attach.src} format=\"hex\">\r\n                                {({ data, loading }) => {\r\n                                    if (loading) return <div className=\"att-loader-cover-modal\"><img src={smallLoader} alt=\"\" /></div>;\r\n                                    return <div className=\"cover-attach\" style={{ backgroundColor: data, backgroundImage: `url(${attach.src})` }} onClick={() => props.addCover(attach.src)} />\r\n                                }}\r\n                            </Color>\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n\r\n                <Cloudinary cloudOp={props.cloudOp} currCard={props.currCard} className=\"add-attachment-cover-btn\" txt='Upload photo' type='cover' currTask={props.currTask} />\r\n                {props.currTask.cover && <button className=\"remove-cover-btn\" onClick={() => props.addCover('')}>Remove cover</button>}\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAlignLeft, faClock, faList, faTag, faTimes, faUser, faCheckSquare, faWindowMaximize, faPaperclip, faClipboard, faPlus, faComment, faPalette } from '@fortawesome/free-solid-svg-icons'\r\nimport boardService from '../../services/boardService.js'\r\nimport './TaskModal.scss'\r\nimport Avatar from 'react-avatar';\r\nimport { LabelModal } from '../LabelModal/LabelModal';\r\nimport { MemberModal } from '../MemberModal/MemberModal';\r\nimport { CheckListModal } from '../CheckListModal/CheckListModal';\r\nimport { saveBoard, setCurrBoard } from '../../store/actions/boardActions';\r\nimport { DueDateModal } from '../DueDateModal/DueDateModal.jsx';\r\nimport { DrawNoteModal } from '../DrawNoteModal/DrawNoteModal.jsx';\r\nimport { CoverModal } from '../CoverModal/CoverModal.jsx';\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport smallLoader from '../../assets/imgs/small-loader.svg'\r\nimport Moment from 'react-moment';\r\nimport { utilService } from '../../services/utilService.js';\r\nimport { socketService } from '../../services/socketService.js';\r\nimport Color from 'color-thief-react';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary.jsx';\r\n\r\nexport function TaskModal({ taskModalOp }) {\r\n    const { currTask, currBoard } = taskModalOp\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [clientX, setClientX] = useState(null)\r\n    const [clientY, setClientY] = useState(null)\r\n    const [urlImg, setUrlImg] = useState(false)\r\n    const [isComment, setIsComment] = useState(null)\r\n    //-------------------------onClickOutside----------------------------\\\\\r\n    const inputFile = useRef(null)\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(\r\n            () => {\r\n                const listener = (event) => {\r\n                    if (!ref.current || ref.current.contains(event.target)) {\r\n                        return;\r\n                    }\r\n                    handler(event);\r\n                };\r\n                document.addEventListener(\"mousedown\", listener);\r\n                document.addEventListener(\"touchstart\", listener);\r\n                return () => {\r\n                    document.removeEventListener(\"mousedown\", listener);\r\n                    document.removeEventListener(\"touchstart\", listener);\r\n                };\r\n            },\r\n            [ref, handler]\r\n        );\r\n    }\r\n\r\n    const attRef = useRef()\r\n\r\n    const [labelModal, setLabelModal] = useState(false)\r\n    const labelRef = useRef()\r\n    useOnClickOutside(labelRef, () => setLabelModal(false));\r\n\r\n    const [attNameModal, setAttNameModal] = useState(null)\r\n    const editAttachRef = useRef()\r\n    useOnClickOutside(editAttachRef, () => setAttNameModal(false));\r\n\r\n    const [labelEditModal, setLabelEditModal] = useState(false)\r\n    const labelEditRef = useRef()\r\n    useOnClickOutside(labelEditRef, () => setLabelEditModal(false));\r\n\r\n    const [coverModal, setCoverModal] = useState(false)\r\n    const coverRef = useRef()\r\n    useOnClickOutside(coverRef, () => setCoverModal(false));\r\n\r\n    const [memberModal, setMemberModal] = useState(false)\r\n    const memberRef = useRef()\r\n    useOnClickOutside(memberRef, () => setMemberModal(false));\r\n\r\n    const [checklistModal, setChecklistModal] = useState(false)\r\n    const checklistRef = useRef()\r\n    useOnClickOutside(checklistRef, () => setChecklistModal(false));\r\n\r\n    const [dueDateModal, setDueDateModal] = useState(false)\r\n    const dueDateRef = useRef()\r\n    useOnClickOutside(dueDateRef, () => setDueDateModal(false));\r\n\r\n    const [drawNoteModal, setDrawNoteModal] = useState(false)\r\n    const drawNoteRef = useRef()\r\n    useOnClickOutside(drawNoteRef, () => setDrawNoteModal(false));\r\n    //--------------------------------------------------------------------\\\\\r\n\r\n    var descValue;\r\n    const [isDesc, setIsDesc] = useState(false)\r\n\r\n    const currCard = currBoard.cards.find(card => {\r\n        return card.tasks.find(t => {\r\n            return t._id === currTask._id\r\n        })\r\n    })\r\n    const onSubmitDesc = data => {\r\n        currTask.desc = data.desc\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onSubmitItemInList = (data, idxInList) => {\r\n        const input = Object.keys(data).find(str => str === ('inputItem' + idxInList))\r\n        if (!data[input]) return\r\n        currTask.checklists[idxInList].list.push({ desc: data[input], isChecked: false })\r\n        setRange(currTask.checklists[idxInList])\r\n        reset({ inputItem0: '', inputItem1: '', inputItem2: '', inputItem3: '', inputItem4: '' })\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const onSubmitAtt = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('attItem' + idx))\r\n        currTask.attachments[idx].title = data[input];\r\n        setAttNameModal(false)\r\n    }\r\n\r\n    const onSumbitComment = data => {\r\n        const newComment = { _id: utilService.makeId(), member: 'guest', timeStamp: Date.now(), title: data.comment }\r\n        currTask.comments.push(newComment)\r\n        updateBoard(currTask)\r\n        reset({ comment: '', })\r\n    }\r\n\r\n    const onRemoveComment = (id) => {\r\n        const idx = currTask.comments.findIndex(comment => { return comment._id === id })\r\n        currTask.comments.splice(idx, 1)\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onEditComment = (data, idx) => {\r\n        const input = Object.keys(data).find(str => str === ('editComment' + idx))\r\n        currTask.comments[idx].title = data[input];\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const changeCheckBox = (item) => {\r\n        item.isChecked = !item.isChecked\r\n    }\r\n\r\n    const toggleTaskDone = () => {\r\n        (!currTask.doneAt) ? currTask.doneAt = Date.now() : currTask.doneAt = ''\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setRange = checklist => {\r\n        const itemsChecked = checklist.list.reduce((acc, itemInList) => {\r\n            return itemInList.isChecked + acc\r\n        }, 0)\r\n        const rengeToShow = +((itemsChecked / checklist.list.length * 100).toFixed(2))\r\n        checklist.range = rengeToShow\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        inputFile.current.click()\r\n    }\r\n\r\n    const dueDateSpanText = (task) => {\r\n        return task.doneAt ? 'COMPLETED' : (task.dueDate > Date.now()) ? '' : 'OVERDUE'\r\n    }\r\n\r\n    const backgroundColorDueDate = (task) => {\r\n        return task.doneAt ? '#61BD4F' : ((task.dueDate > Date.now()) ? 'inherite' : '#ec9488')\r\n\r\n    }\r\n    const displayDueDate = (task) => {\r\n        return task.doneAt ? 'unset' : ((task.dueDate > Date.now()) ? 'none' : 'unset')\r\n    }\r\n\r\n    const onAttRemove = (id) => {\r\n        const idx = currTask.attachments.findIndex(att => { return att._id === id })\r\n        currTask.attachments.splice(idx, 1)\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const setTaskTitle = data => {\r\n        if (!data.taskTitle) return\r\n        currTask.title = data.taskTitle\r\n        updateBoard(currTask)\r\n    }\r\n\r\n    const testLog = (ev) => {\r\n        setClientX(ev.target.offsetLeft)\r\n        setClientY(ev.target.offsetTop)\r\n    }\r\n\r\n    const updateBoard = task => {\r\n        const updatedBoard = boardService.updateCard(task, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: task || currTask })\r\n        dispatch(saveBoard(updatedBoard))\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    if (!currTask || !currCard) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cloudOp = {\r\n        updateBoard\r\n    }\r\n\r\n    return (\r\n        <section className=\"task-modal hide-overflow\">\r\n            <div className=\"task-modal-form\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                {!currTask.cover ? null : currTask.cover.includes('#') ? <div className=\"cover-section\" style={{ backgroundColor: `${currTask.cover}` }} /> :\r\n                    <Color src={currTask.cover} crossOrigin=\"anonymous\" format=\"hex\">\r\n                        {({ data, loading }) => {\r\n                            if (loading) return <div>...</div>;\r\n                            return (<div className=\"cover-section\" style={{ backgroundColor: data, backgroundImage: `url(${currTask.cover})` }} />)\r\n                        }}\r\n                    </Color>\r\n                }\r\n                <div className=\"task-header\">\r\n                    <div className=\"task-title\">\r\n                        <form onBlur={handleSubmit(setTaskTitle)}>\r\n                            <FontAwesomeIcon icon={faWindowMaximize} /> <input autoComplete=\"off\" type=\"text\" onKeyDown={(e) => { if (e.key === 'Enter') e.preventDefault() }} {...register(\"taskTitle\")} defaultValue={currTask.title} placeholder=\"Task name\" />\r\n                        </form>\r\n                        <p className=\"card-title\">In list: {currCard.title}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-description-modal\">\r\n                    {!currTask.members.length ? null : <section className=\"members-section\"><h3>MEMBERS:</h3>\r\n                        <div className=\"member-list\">\r\n                            {currTask.members.map((member, idx) =>\r\n                                <div className=\"member-in-modal\" onClick={() => setMemberModal(true)} key={idx}>\r\n                                    <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                </div>)}\r\n                            <button onClick={() => setMemberModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                        </div>\r\n                    </section>}\r\n                    {!currTask.labels.length ? null : <section className=\"labels-section\"><h3>LABELS:</h3>\r\n                        {currTask.labels.map((label, idx) =>\r\n                            <div className=\"label-in-modal\" key={idx} onClick={() => setLabelModal(true)} style={{ backgroundColor: label.color }}>\r\n                                <p>{label.desc}</p>\r\n                            </div>)}\r\n                        <button onClick={() => setLabelModal(true)}><FontAwesomeIcon icon={faPlus} /></button>\r\n                    </section>}\r\n                    {!currTask.dueDate ? null : <section className=\"due-date-moment-section\" onClick={toggleTaskDone}><h3>DUE DATE:</h3>\r\n                        <span className=\"due-date-moment\"> {!currTask.doneAt ? <FontAwesomeIcon icon={faClock} /> : <FontAwesomeIcon icon={faCheckSquare} />}<Moment format=\"MMM D YYYY\" withTitle>{currTask.dueDate}</Moment><small style={{ color: 'white', display: displayDueDate(currTask), backgroundColor: backgroundColorDueDate(currTask) }} >{dueDateSpanText(currTask)}</small>\r\n                        </span> </section>}\r\n                    <section className=\"desc-section\">\r\n                        <div className=\"desc-svg\"><FontAwesomeIcon icon={faAlignLeft} />\r\n                            <p>Description</p>\r\n                        </div>\r\n                        <form onChange={handleSubmit(res => onSubmitDesc(res))}>\r\n                            <textarea id=\"desc\" name=\"desc\" onClick={() => setIsDesc(!isDesc)} defaultValue={descValue} placeholder=\"Add some detailed description...\" {...register(\"desc\")} defaultValue={taskModalOp.currTask.desc} />\r\n                            {isDesc && <div className=\"save-desc\">\r\n                                <button onClick={(ev) => { ev.preventDefault(); setIsDesc(!isDesc) }}>Save</button>\r\n                                <button onClick={() => setIsDesc(false)}><FontAwesomeIcon icon={faTimes} ></FontAwesomeIcon></button> </div>}\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n                {!currTask.checklists.length ? null : <section >\r\n                    {currTask.checklists.map((checklist, listIdx) =>\r\n                        <div className=\"checklist-in-modal\" key={listIdx}>\r\n                            <div className=\"checklist-svg\"> <div className=\"flex\"> <FontAwesomeIcon icon={faList} ></FontAwesomeIcon> <p>{checklist.title}:</p></div>\r\n                                <button onClick={() => taskModalOp.addChecklist(listIdx)}>Delete list</button>\r\n                            </div>\r\n                            {!checklist.list.length ? null : <h6>{checklist.range}%</h6>}\r\n                            {!checklist.list.length ? null : <div className=\"demo-range-container\">\r\n                                {checklist.range === 100 ? <div className=\"demo-range-checked\" style={{ backgroundColor: '#61bd4f', width: checklist.range + '%' }}></div> :\r\n                                    <div className=\"demo-range-checked\" style={{ width: checklist.range + '%' }}></div>}</div>}\r\n                            {!checklist.list.length ? null : checklist.list.map((item, idx) => {\r\n                                return <div className=\"checklist-items\" key={idx}>\r\n                                    <input type=\"checkbox\" id={'checklist-item-' + idx} checked={item.isChecked} onChange={() => {\r\n                                        changeCheckBox(item)\r\n                                        setRange(checklist)\r\n                                    }} />\r\n                                    {item.isChecked ? <label style={{ textDecoration: 'line-through' }}>{item.desc}</label> : <label>{item.desc}</label>}\r\n                                </div>\r\n                            })}\r\n                            <form onSubmit={handleSubmit(res => onSubmitItemInList(res, listIdx))}>\r\n                                <input type=\"text\" autoComplete=\"off\" id={'input-item-' + listIdx} name=\"item\" placeholder=\"Add an item\"  {...register('inputItem' + listIdx)} />\r\n                                <button className=\"add-an-item-btn\">Add</button>\r\n                            </form>\r\n                        </div>)}\r\n                </section>}\r\n                {!currTask.attachments.length ? null : <section>\r\n                    <div className=\"att-svg\"><FontAwesomeIcon icon={faPaperclip} />\r\n                        <p>Attachments</p>\r\n                    </div>\r\n                    {currTask.attachments.map((attac, attIdx) =>\r\n                        <div key={attIdx} className=\"attachments-container\">\r\n                            <div className=\"att-src\">\r\n                                <Color crossOrigin=\"anonymous\" src={attac.src} format=\"hex\">\r\n                                    {({ data, loading }) => {\r\n                                        if (loading) return <div className=\"att-loader\"><img src={smallLoader} alt=\"\" /></div>;\r\n                                        return (<div className=\"attachment-img\" style={{ backgroundColor: data, backgroundImage: `url(${attac.src})` }} alt=\"photo\" />)\r\n                                    }}\r\n                                </Color>\r\n                            </div>\r\n                            <div className=\"att-details\">\r\n                                <div>\r\n                                    <p>{attac.title || 'Photo'}</p>\r\n                                    <p>Added Right now!</p>\r\n                                </div>\r\n                                <div className=\"att-btns\">\r\n                                    <button onClick={(ev) => { setAttNameModal(!attNameModal); testLog(ev) }}>Edit</button>\r\n                                    <button onClick={() => onAttRemove(attac._id)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                            {attNameModal && <div style={{ left: `${clientX + 450}px`, top: `${clientY - 300}px` }} className=\"att-edit\">\r\n                                <div className=\"att-edit-header\">\r\n                                    <p>Edit attachment</p>\r\n                                    <button onClick={() => setAttNameModal(false)}>x</button>\r\n                                </div>\r\n                                <div className=\"att-edit-main\" ref={editAttachRef}>\r\n                                    <p>Attachment name:</p>\r\n                                    <form onSubmit={handleSubmit(res => onSubmitAtt(res, attIdx))}>\r\n                                        <input type=\"text\" autoComplete=\"off\" id={'att-item-' + attIdx} defaultValue={attac.title}  {...register('attItem' + attIdx)} />\r\n                                        <button>Save</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    )}\r\n                </section>}\r\n                <div className=\"att-svg\"><FontAwesomeIcon icon={faComment} />\r\n                    <p>Comments</p>\r\n                </div>\r\n                <div className=\"task-comment\">\r\n                    <form onSubmit={handleSubmit(onSumbitComment)}>\r\n                        <input className=\"post-comment-input\" type=\"text\" autoComplete=\"off\" id=\"comment\" name=\"comment\" placeholder=\"Post a Comment...\"  {...register(\"comment\")} />\r\n                    </form>\r\n                    {!currTask.comments.length ? null : currTask.comments.map((comment, idx) => <div key={comment._id} className=\"comment-container\">\r\n                        <div className=\"comment-avatar\">\r\n                            <Avatar key={comment._id} name={comment.member} size=\"30\" round={true} />\r\n                        </div>\r\n                        <div className=\"comment-details\">\r\n                            <div className=\"comment-header\">\r\n                                <p className=\"comment-member\">{comment.member}</p> <p><Moment fromNow>{comment.timeStamp}</Moment></p>\r\n                            </div>\r\n                            <form onChange={handleSubmit((res) => onEditComment(res, idx))} className=\"comment-title\">\r\n                                <input type=\"text\" autoComplete=\"off\" id={\"comment-edit\" + idx} defaultValue={comment.title} {...register(\"editComment\" + idx)} />\r\n                                <button style={{ display: 'none' }} onClick={(ev) => ev.preventDefault()}></button>\r\n                            </form>\r\n                            <div className=\"comment-btns\">\r\n                                <button onClick={() => onRemoveComment(comment._id)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"add-to-task\" style={currTask.cover ? { marginTop: '172px' } : { marginTop: 0 }}>\r\n                <div className=\"right-task-modal\">\r\n                    <h3>Add To Task</h3>\r\n                    <p onClick={() => taskModalOp.setCurrTask(null)} className=\"btn-close-icon\"><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"right-task-modal-btns\">\r\n                    <div onClick={() => { setLabelModal(true) }} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faTag}></FontAwesomeIcon>\r\n                        <p> Labels </p>\r\n                        {(!labelModal) ? null : <div onClick={(ev) => ev.stopPropagation()} ref={labelRef}> <LabelModal labelEditRef={labelEditRef} setLabelModal={setLabelModal} labelModal={labelModal} currTask={currTask} addLabel={taskModalOp.addLabel}  ></LabelModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setMemberModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n                        <p> Members </p>\r\n                        {(!memberModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={memberRef}> <MemberModal setMemberModal={setMemberModal} memberModal={memberModal} currTask={currTask} addMemberToTask={taskModalOp.addMember} ></MemberModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setChecklistModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faList}></FontAwesomeIcon>\r\n                        <p> Checklist </p>\r\n                        {(!checklistModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={checklistRef}> <CheckListModal setChecklistModal={setChecklistModal} checklistModal={checklistModal} currTask={currTask} addChecklist={taskModalOp.addChecklist} ></CheckListModal></div>}\r\n                    </div>\r\n                    <div onClick={() => setDueDateModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                        <p> Due date </p>\r\n                        {(!dueDateModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={dueDateRef}> <DueDateModal setDueDateModal={setDueDateModal} dueDateModal={dueDateModal} addDueDate={taskModalOp.addDueDate} currTask={currTask}></DueDateModal></div>}\r\n                    </div>\r\n                    <Cloudinary currTask={currTask} cloudOp={cloudOp} txt={<div className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faPaperclip}></FontAwesomeIcon>\r\n                        <p>Attachments</p></div>} />\r\n                    {(!coverModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={coverRef}><CoverModal setCoverModal={setCoverModal} coverModal={coverModal} cloudOp={cloudOp} currCard={currCard} addCover={taskModalOp.addCover} currTask={currTask} onButtonClick={onButtonClick} inputFile={inputFile}></CoverModal></div>}\r\n                    <div onClick={() => setCoverModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon>\r\n                        <p> Cover </p>\r\n                    </div>\r\n                    <div onClick={() => setDrawNoteModal(true)} className=\"right-task-btn\">\r\n                        <FontAwesomeIcon icon={faPalette}></FontAwesomeIcon>\r\n                        <p> Draw Note </p>\r\n                        {(!drawNoteModal) ? null : <div onClick={(ev) => ev.stopPropagation()} style={{ position: 'absolute', width: 0 }} ref={drawNoteRef}> <DrawNoteModal setDrawNoteModal={setDrawNoteModal} drawNoteModal={drawNoteModal} updateBoard={updateBoard} currTask={currTask}></DrawNoteModal></div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardActions'\r\nimport Moment from 'react-moment';\r\nimport './BoardMenu.scss'\r\nimport { faChevronLeft, faPalette, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { utilService } from '../../services/utilService'\r\nimport { PolarArea, Bar } from 'react-chartjs-2';\r\nimport { Cloudinary } from '../Cloudinary/Cloudinary'\r\nimport userService from '../../services/userService'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nexport function BoardMenu({ boardMenuOp }) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit } = useForm();\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const user = useSelector(state => state.userReducer.user)\r\n    const [isAbout, setIsAbout] = useState(false)\r\n    const [isBackground, setIsBackground] = useState(false)\r\n    const [isFilter, setIsFilter] = useState(false)\r\n    const [isLabels, setIsLabels] = useState(false)\r\n    const [labels, setLabels] = useState(null)\r\n    const [cloudImgs, setCloudImgs] = useState(null)\r\n    const [activity, setActivity] = useState(null)\r\n    const [tasks, setTasks] = useState(null)\r\n    const [isAddLabel, setIsAddLabel] = useState(false)\r\n    const [filterBy, setFilterBy] = useState({ task: '', labels: [] })\r\n    const colors = ['lightgreen', 'lightyellow', 'lightblue', 'orange', 'slateblue', 'lightpink', 'lightgray', 'white']\r\n\r\n    useEffect(async () => {\r\n        setCloudImgs(currBoard.images)\r\n        sendFilter()\r\n    }, [filterBy])\r\n\r\n    useEffect(() => {\r\n        if (!boardMenuOp.isMenu) closeMenu()\r\n    }, [boardMenuOp.isMenu])\r\n\r\n    useEffect(() => {\r\n        setLabels(currBoard.labels)\r\n        setActivity(currBoard.activity)\r\n        membersTaskLength()\r\n    }, [currBoard])\r\n\r\n    const onSearchTask = data => {\r\n        setFilterBy({ ...filterBy, task: data.searchTask })\r\n    }\r\n\r\n    const onSearchLabel = idx => {\r\n        if (filterBy.labels.includes(labels[idx].desc)) {\r\n            const removeIdx = filterBy.labels.findIndex(label => label === labels[idx].desc)\r\n            filterBy.labels.splice(removeIdx, 1)\r\n            setFilterBy({ ...filterBy, labels: filterBy.labels })\r\n        }\r\n        else setFilterBy({ ...filterBy, labels: [...filterBy.labels, labels[idx].desc] })\r\n    }\r\n\r\n    const sendFilter = () => {\r\n        boardMenuOp.filterTasks(filterBy)\r\n    }\r\n\r\n    const saveLabels = data => {\r\n        var entries = Object.entries(data)\r\n        entries = entries.filter(en => en[0] !== 'addBoardLabel' && en[0] !== 'addBoardLabelColor')\r\n        const labels = entries.map((label, idx) => {\r\n            if (!idx) return\r\n            if (idx % 2 === 0) return { color: label[1] }\r\n            return { desc: label[1] }\r\n        })\r\n        labels.splice(0, 1)\r\n        const arr = []\r\n        labels.forEach((label, idx) => {\r\n            if (idx % 2 === 0) arr.push({ _id: utilService.makeId(), desc: label.desc, color: labels[idx + 1].color })\r\n        })\r\n        setLabels(arr)\r\n        dispatch(saveBoard({ ...currBoard, labels: arr }))\r\n    }\r\n\r\n    const onBoardDesc = data => {\r\n        const descToUpdate = data.boardDesc.replace(/'/g, '')\r\n        dispatch(saveBoard({ ...currBoard, description: descToUpdate }))\r\n    }\r\n\r\n    const onAddBoardLabel = (data) => {\r\n        const label = { _id: utilService.makeId(), desc: data.addBoardLabel, color: data.addBoardLabelColor }\r\n        setLabels([...labels, label])\r\n        currBoard.labels = [...labels, label]\r\n        setIsAddLabel(!isAddLabel)\r\n        dispatch(saveBoard(currBoard))\r\n        // boardMenuOp.addActivity(user?user.username:'Guest', 'added', 'label')\r\n    }\r\n\r\n    const deleteLabel = (labelId) => {\r\n        const idx = labels.findIndex(l => l._id === labelId)\r\n        labels.splice(idx, 1)\r\n        setLabels([...labels])\r\n        currBoard.labels = labels\r\n        dispatch(saveBoard(currBoard))\r\n        // boardMenuOp.addActivity(user?user.username:'Guest', 'deleted', 'label')\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        boardMenuOp.setIsMenu(false)\r\n        setIsAbout(false)\r\n        setIsBackground(false)\r\n        setIsFilter(false)\r\n        setIsLabels(false)\r\n        onSearchTask('')\r\n    }\r\n\r\n    const membersTaskLength = async () => {\r\n        const membersLength = []\r\n        await currBoard.members.forEach(async m => {\r\n            const member = await userService.getUserById(m._id)\r\n            membersLength.push(member.tasks.length);\r\n        })\r\n        setTasks(membersLength)\r\n    }\r\n\r\n    const onDeleteBoard = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to submit',\r\n            message: 'Are you sure want to delete this board?',\r\n            buttons: [\r\n                {\r\n                    label: 'Delete board',\r\n                    onClick: () => boardMenuOp.deleteBoard()\r\n                },\r\n                {\r\n                    label: 'Cancel'\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    if (!cloudImgs || !currBoard || !labels || !tasks || !activity) return (<div className=\"loader-container\">Loading</div>)\r\n\r\n    const inProgress = []\r\n    const overdue = []\r\n    const completed = []\r\n    currBoard.cards.forEach(card => {\r\n        card.tasks.forEach(task => {\r\n            if (task.doneAt) completed.push(task)\r\n            else if (!task.dueDate) inProgress.push(task)\r\n            else task.dueDate > Date.now() ? inProgress.push(task) : overdue.push(task)\r\n        })\r\n    })\r\n    const membersLabels = []\r\n    const membersTasks = []\r\n    currBoard.members.forEach(m => {\r\n        membersLabels.push(m.name)\r\n        membersTasks.push(m.tasks.length)\r\n    })\r\n\r\n    const dataForMembersChart = {\r\n        labels: membersLabels,\r\n        datasets: [{\r\n            label: 'Members',\r\n            data: membersTasks,\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.7)',\r\n                'rgba(75, 192, 192, 0.7)',\r\n                'rgba(255, 205, 86, 0.7)',\r\n                'rgba(201, 203, 207, 0.7)',\r\n                'rgba(54, 162, 235, 0.7)'\r\n            ],\r\n            hoverOffset: 4\r\n        }]\r\n    };\r\n\r\n    const dataForChart = {\r\n        labels: ['Completed', 'In progress', 'Overdue'],\r\n        datasets: [{\r\n            label: 'Status',\r\n            data: [completed.length, inProgress.length, overdue.length],\r\n            backgroundColor: [\r\n                'rgba(29, 185, 84, 0.7)',\r\n                'rgba(255, 159, 64, 0.7)',\r\n                'rgba(255, 99, 132, 0.7)',\r\n            ],\r\n            borderColor: [\r\n                'rgba(29, 185, 84)',\r\n                'rgba(255, 159, 64)',\r\n                'rgba(255, 99, 132)',\r\n            ],\r\n            borderWidth: 1,\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <section className=\"board-menu flex\" style={boardMenuOp.isMenu ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n            <article className=\"menu-main\">\r\n                <div className=\"flex\">\r\n                    <h3>Menu</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}>About & Statistics</p>\r\n                    <p onClick={() => setIsBackground(!isBackground)}>Background</p>\r\n                    <p onClick={() => setIsFilter(!isFilter)}>Search cards</p>\r\n                    <p onClick={() => setIsLabels(!isLabels)}>Labels</p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <h3>Activity</h3>\r\n                    <ul>\r\n                        {!activity.length ? null : activity.map(activity => <li key={activity._id}>\r\n                            {(activity.type !== 'attached' && activity.type !== 'removed') ? <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'deleted' ? 'from' : 'to'} <span>{activity.card}</span>{activity.card === 'board' ? '' : ' card'}.</p>\r\n                                : <p><span>{activity.member}</span> {activity.type} {activity.desc} {activity.type === 'removed' ? 'from' : 'to'} <span>{activity.card}</span> task.</p>}\r\n                            <small><Moment fromNow>{activity.createdAt}</Moment></small>\r\n                        </li>)}\r\n                        {!activity.length && <li><h1>No activity here...</h1></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-about sub-menu\" style={isAbout ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsAbout(!isAbout)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>About & Statistics</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"flex hide-overflow\">\r\n                    <div className=\"flex\">\r\n                        <h3>Members</h3>\r\n                        <div>{boardMenuOp.members.map(member => <Avatar key={member._id} name={member.name} size=\"30\" round={true} />)}</div>\r\n                        <p>Total: {boardMenuOp.members.length}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Description</h3>\r\n                        <form onBlur={handleSubmit(onBoardDesc)}>\r\n                            <textarea defaultValue={currBoard.description} {...register(\"boardDesc\")} placeholder=\"It’s your board’s time to shine! Let people know what this board is used for and what they can expect to see.\" />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Statistics</h3>\r\n                        <h4>Tasks per member</h4>\r\n                        <PolarArea name=\"PolarArea\" data={dataForMembersChart} />\r\n                        <h4>Tasks status</h4>\r\n                        <Bar height=\"200\" data={dataForChart} />\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h3>Danger Zone</h3>\r\n                        <button onClick={onDeleteBoard}>Delete board</button>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-background sub-menu\" style={isBackground ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsBackground(!isBackground)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Change background</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow flex\">\r\n                    <div className=\"flex\">\r\n                        <h4>Colors</h4>\r\n                        <div className=\"flex\">\r\n                            {colors.map((color, idx) => <aside key={idx} style={{ backgroundColor: color }} onClick={() => boardMenuOp.changeBackground(color, true)}></aside>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <h4>Photos</h4>\r\n                        <div className=\"flex\">\r\n                            <Cloudinary txt=\"Upload photo\" type=\"background\" setCloudImgs={setCloudImgs} />\r\n                            {cloudImgs.map((url, idx) => <img key={idx} onClick={() => boardMenuOp.changeBackground(url)} decoding=\"async\" loading=\"lazy\" src={url} alt={url} />)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-filter sub-menu\" style={isFilter ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsFilter(!isFilter)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Search cards</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div>\r\n                    <form onChange={handleSubmit(onSearchTask)}>\r\n                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Search for task...\" {...register(\"searchTask\")} />\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h4>Search by label</h4>\r\n                    <ul>\r\n                        {labels.map((label, idx) => <li key={idx} style={{ backgroundColor: filterBy.labels.includes(label.desc) ? 'gray' : 'inherit' }} onClick={() => onSearchLabel(idx)}>\r\n                            <div style={{ backgroundColor: label.color }}></div>\r\n                            <p>{label.desc}</p>\r\n                        </li>)}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n            <article className=\"menu-labels sub-menu\" style={isLabels ? { maxWidth: 100 + '%' } : { maxWidth: 0 }}>\r\n                <div className=\"flex\">\r\n                    <p onClick={() => setIsLabels(!isLabels)}><FontAwesomeIcon className=\"fa\" icon={faChevronLeft} /></p>\r\n                    <h3>Labels</h3>\r\n                    <p onClick={closeMenu}><FontAwesomeIcon className=\"fa\" icon={faTimes} /></p>\r\n                </div>\r\n                <div className=\"hide-overflow\">\r\n                    <ul>\r\n                        {labels.map((label, idx) => <li key={label._id} style={{ backgroundColor: label.color }}>\r\n                            <form onChange={handleSubmit(utilService.debounce(saveLabels, 100))}>\r\n                                <input type=\"text\" autoComplete=\"off\" defaultValue={label.desc} placeholder=\"Label name\" required {...register(\"editBoardLabel\" + idx)} />\r\n                                <label name=\"label-color\"><FontAwesomeIcon className=\"fa\" icon={faPalette} />\r\n                                    <input type=\"color\" autoComplete=\"off\" {...register(\"editBoardLabelColor\" + idx)} defaultValue={label.color} /></label>\r\n                            </form>\r\n                            <p><FontAwesomeIcon className=\"fa\" icon={faTimes} onClick={() => deleteLabel(label._id)} /></p>\r\n                        </li>)}\r\n                        {!isAddLabel && <li onClick={() => setIsAddLabel(!isAddLabel)}><p>New label</p></li>}\r\n                        {isAddLabel && <li>\r\n                            <form onSubmit={handleSubmit(onAddBoardLabel)}>\r\n                                <input type=\"text\" placeholder=\"Label name\" autoComplete=\"off\" required {...register(\"addBoardLabel\")} />\r\n                                <input type=\"color\" name=\"label-color\" id=\"label-color\" defaultValue=\"#FFFFFF\" {...register(\"addBoardLabelColor\")} />\r\n                                <button>Add label</button>\r\n                            </form>\r\n                            <button onClick={() => setIsAddLabel(!isAddLabel)}>X</button></li>}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n        </section >\r\n    )\r\n}","import { useEffect, useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground, removeBoard } from '../../store/actions/boardActions'\r\nimport { CardPreview } from '../../cmps/CardPreview'\r\nimport { TaskModal } from '../../cmps/TaskModal/TaskModal'\r\nimport { useForm } from \"react-hook-form\";\r\nimport boardService from '../../services/boardService'\r\nimport Avatar from 'react-avatar';\r\nimport { BoardMenu } from '../../cmps/BoardMenu'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faCheckCircle, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { utilService } from '../../services/utilService'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService'\r\nimport useScrollOnDrag from 'react-scroll-ondrag';\r\nimport './BoardDetails.scss'\r\nimport { updateUser } from '../../store/actions/userActions'\r\nimport userService from '../../services/userService'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport function BoardDetails(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, reset } = useForm()\r\n    var newCard = boardService.getEmptyCard()\r\n    const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n    const users = useSelector(state => state.userReducer.users)\r\n    const user = useSelector(state => state.userReducer.user)\r\n    const [currCard, setCurrCard] = useState(null)\r\n    const [currTask, setCurrTask] = useState(null)\r\n    const [members, setMembers] = useState(null)\r\n    const ref = useRef()\r\n    var containerRef = useRef()\r\n    const { events } = useScrollOnDrag(containerRef);\r\n    const history = useHistory()\r\n\r\n    const useOnClickOutside = (ref, handler) => {\r\n        useEffect(() => {\r\n            const listener = (event) => {\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n                handler(event);\r\n            };\r\n            document.addEventListener(\"mousedown\", listener);\r\n            document.addEventListener(\"touchstart\", listener);\r\n            return () => {\r\n                document.removeEventListener(\"mousedown\", listener);\r\n                document.removeEventListener(\"touchstart\", listener);\r\n            };\r\n        }, [ref, handler]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(false))\r\n        const { id } = props.match.params\r\n        socketService.emit(\"board topic\", id);\r\n        if (!currBoard) {\r\n            dispatch(setCurrBoard(id))\r\n        }\r\n        else if (!draggedCards) {\r\n            setDraggedCards(currBoard.cards)\r\n            setMembers(currBoard.members)\r\n            socketService.on('task add-task', data => {\r\n                addTaskForSockets(data)\r\n            })\r\n            socketService.on('task update-task', data => {\r\n                updateTask(data)\r\n            })\r\n            socketService.on('card add-card', data => {\r\n                addNewCardForSockets(data)\r\n            })\r\n            socketService.on('card delete-card', data => {\r\n                deleteTaskForSockets(data)\r\n            })\r\n            socketService.on('board add-label', data => {\r\n                addLabelForSockets(data)\r\n            })\r\n            socketService.on('card update-card', data => {\r\n                updateCardForSockets(data)\r\n            })\r\n            socketService.on('card update-card-title', data => {\r\n                updateCardTitleForSockets(data)\r\n            })\r\n            socketService.on('board add-activity', activity => {\r\n                addActivityForSockets(activity)\r\n            })\r\n        }\r\n        if (currBoard) setMembers(currBoard.members)\r\n    }, [currBoard])\r\n\r\n    useEffect(() => {\r\n        preMembers()\r\n    }, [members])\r\n\r\n    useOnClickOutside(ref, () => setCurrTask(false));\r\n    const [isMenu, setIsMenu] = useState(false)\r\n    const menuRef = useRef()\r\n    useOnClickOutside(menuRef, () => setIsMenu(false));\r\n    const [cardModal, setCardModal] = useState(null)\r\n    const cardModalRef = useRef()\r\n    useOnClickOutside(cardModalRef, () => setIsCardModal(false));\r\n    const inviteRef = useRef()\r\n    useOnClickOutside(inviteRef, () => setIsInvite(false));\r\n    const [isAddCard, setIsAddCard] = useState(null)\r\n    const [draggedCards, setDraggedCards] = useState((currBoard?.cards) ? currBoard.cards : null)\r\n    const [isInvite, setIsInvite] = useState(null)\r\n    const [isCardModal, setIsCardModal] = useState(null)\r\n    const [xPosEl, setXPosEl] = useState(null)\r\n    const [yPosEl, setYPosEl] = useState(null)\r\n    const [addMembersToBoard, setMembersToBoard] = useState([])\r\n    const [isDescShown, setIsDescShown] = useState(false)\r\n    const [isScrollOnDradAllowed, setIsScrollOnDradAllowed] = useState(true)\r\n\r\n    // Sockets /////////////////////////////////////////////////////////\r\n\r\n    const updateCardForSockets = card => {\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === card._id)\r\n        currBoard.cards.splice(cardIdx, 1, card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 500)\r\n    }\r\n\r\n    const updateTask = data => {\r\n        console.log('data:', data)\r\n        const updateCard = currBoard.cards.find(c => c._id === data.card._id)\r\n        const taskIdx = updateCard.tasks.findIndex(t => t._id === data.task._id)\r\n        updateCard.tasks.splice(taskIdx, 1, data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const updateCardTitleForSockets = card => {\r\n        const cardToUpdate = currBoard.cards.find(c => c._id === card._id)\r\n        cardToUpdate.title = card.title\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addTaskForSockets = data => {\r\n        const addTo = currBoard.cards.find(c => c._id === data.card)\r\n        addTo.tasks.push(data.task)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const deleteTaskForSockets = data => {\r\n        const cardIdx = currBoard.cards.findIndex(c => c._id === data.card)\r\n        currBoard.cards.splice(cardIdx, 1)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addNewCardForSockets = card => {\r\n        currBoard.cards.push(card)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addLabelForSockets = data => {\r\n        if (!data.task.labels.length) data.task.labels.push(data.label)\r\n        else {\r\n            if (data.task.labels.some((currLabel) => currLabel.color === data.label.color)) {\r\n                const labelToRemove = data.task.labels.findIndex(currLabel => currLabel.color === data.label.color)\r\n                data.task.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                data.task.labels.push(data.label)\r\n            }\r\n        }\r\n        boardService.updateCard(data.task, data.card, currBoard)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    const addActivityForSockets = activity => {\r\n        currBoard.activity.unshift(activity)\r\n        dispatch(setCurrBoard(currBoard._id))\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const items = Array.from(draggedCards);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        setDraggedCards(items);\r\n        currBoard.cards = [...items]\r\n        dispatch(saveBoard(currBoard))\r\n        setIsScrollOnDradAllowed(true)\r\n    }\r\n\r\n    const openCardModal = (ev, card) => {\r\n        setXPosEl(ev.clientX)\r\n        setYPosEl(ev.clientY)\r\n        setIsCardModal(true)\r\n        setCardModal(card)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCardModal(null)\r\n        setIsCardModal(false)\r\n    }\r\n\r\n    const setBoardTitle = (data) => {\r\n        var title = data.boardTitle.replace(/'/g, '');\r\n        dispatch(saveBoard({ ...currBoard, title }))\r\n    }\r\n\r\n    const serachUser = data => {\r\n        const membersInBoard = members.map(member => member._id)\r\n        const usersToAdd = users.filter(user => {\r\n            if (!membersInBoard.includes(user._id)) return user.name.toLowerCase().includes(data.member.toLowerCase())\r\n        })\r\n        setMembersToBoard(usersToAdd)\r\n    }\r\n\r\n    const preMembers = () => {\r\n        if (members) {\r\n            const membersInBoard = members.map(member => member._id)\r\n            const usersToAdd = users.filter(user => {\r\n                if (!membersInBoard.includes(user._id)) return user.name;\r\n            })\r\n            setMembersToBoard(usersToAdd)\r\n        }\r\n    }\r\n\r\n    const onAddMember = (member) => {\r\n        setMembers([...members, member])\r\n        currBoard.members = [...members, member]\r\n        dispatch(saveBoard(currBoard))\r\n    }\r\n\r\n    const removeUserFromBoard = (id) => {\r\n        const idx = currBoard.members.findIndex(member => member._id === id)\r\n        members.splice(idx, 1)\r\n        setMembers([...members])\r\n        currBoard.members = [...members]\r\n        dispatch(saveBoard(currBoard))\r\n    }\r\n\r\n    const addLabel = (label) => {\r\n        if (!currTask.labels.length) currTask.labels.push(label)\r\n        else {\r\n            if (currTask.labels.some((currLabel) => currLabel.color === label.color)) {\r\n                const labelToRemove = currTask.labels.findIndex(currLabel => currLabel.color === label.color)\r\n                currTask.labels.splice(labelToRemove, 1)\r\n            } else {\r\n                currTask.labels.push(label)\r\n            }\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        dispatch(saveBoard(newBoard))\r\n        addActivity(user ? user.username : 'Guest', 'added', 'label', currCard.title)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n    }\r\n\r\n    const addChecklist = (list) => {\r\n        if (typeof list === 'object') currTask.checklists.push(list)\r\n        else currTask.checklists.splice(list, 1);\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n    }\r\n\r\n    const addDueDate = (date) => {\r\n        currTask.dueDate = date\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n    }\r\n\r\n    const addCover = (cover) => {\r\n        currTask.cover = cover\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(setCurrBoard(newBoard._id))\r\n    }\r\n\r\n    const addMember = async (memberId) => {\r\n        const member = await userService.getUserById(memberId)\r\n        if (!currTask.members.length) {\r\n            member.tasks.push(currTask.title)\r\n            currTask.members.push(member)\r\n            addActivity(user ? user.username : 'Guest', 'attached', member.username, currTask.title)\r\n        }\r\n        else if (currTask.members.some(currMember => currMember._id === member._id)) {\r\n            const taskIdx = member.tasks.findIndex(t => t === currTask._id)\r\n            member.tasks.splice(taskIdx, 1)\r\n            const memberToRemove = currTask.members.findIndex(currMember => currMember._id === member._id)\r\n            currTask.members.splice(memberToRemove, 1)\r\n            addActivity(user ? user.username : 'Guest', 'removed', member.username, currTask.title)\r\n        } else {\r\n            member.tasks.push(currTask.title)\r\n            currTask.members.push(member)\r\n            addActivity(user ? user.username : 'Guest', 'attached', member.username, currTask.title)\r\n        }\r\n        const newBoard = boardService.updateCard(currTask, currCard, currBoard)\r\n        socketService.emit('task to-update-task', { card: currCard, task: currTask })\r\n        dispatch(saveBoard(newBoard))\r\n        dispatch(updateUser(member))\r\n    }\r\n\r\n    const addNewCard = (data) => {\r\n        var newCard = boardService.getEmptyCard()\r\n        newCard.title = data.newCardTitle\r\n        setDraggedCards([...draggedCards, newCard])\r\n        currBoard.cards = [...draggedCards, newCard]\r\n        dispatch(saveBoard(currBoard))\r\n        setIsAddCard(!isAddCard)\r\n        reset()\r\n        addActivity(user ? user.username : 'Guest', 'added', 'card')\r\n        socketService.emit('card to-add-card', newCard);\r\n    }\r\n\r\n    const deleteCard = () => {\r\n        const cardIdx = currBoard.cards.findIndex(card => card._id === currCard._id)\r\n        const boardToSave = boardService.updateBoard(cardIdx, currBoard)\r\n        socketService.emit('card to-delete-card', cardIdx);\r\n        addActivity(user ? user.username : 'Guest', 'deleted', 'card')\r\n        setDraggedCards(currBoard.cards)\r\n        dispatch(saveBoard(boardToSave))\r\n        closeModal()\r\n    }\r\n\r\n    const changeBackground = (background, type) => {\r\n        if (type) {\r\n            addActivity(user ? user.username : 'Guest', 'change', 'color')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: background, img: null } }))\r\n        }\r\n        else {\r\n            addActivity(user ? user.username : 'Guest', 'change', 'image')\r\n            dispatch(saveBoard({ ...currBoard, background: { color: null, img: background } }))\r\n        }\r\n        setTimeout(() => dispatch(setCurrBoard(currBoard._id)), 100)\r\n    }\r\n\r\n    const filterTasks = (filterBy) => {\r\n        if (filterBy.task || filterBy.labels.length) {\r\n            var newCards = []\r\n            if (filterBy.task !== '') {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.filter(task => {\r\n                        if (task.title.toLowerCase().includes(filterBy.task.toLowerCase())) newCards.push(card);\r\n                    })\r\n                })\r\n            }\r\n            if (filterBy.labels.length) {\r\n                currBoard.cards.map(card => {\r\n                    return card.tasks.map(task => {\r\n                        return task.labels.map(label => {\r\n                            if (filterBy.labels.includes(label.desc)) newCards.push(card)\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            const cardsIds = []\r\n            newCards = newCards.filter(c => {\r\n                if (cardsIds.includes(c._id)) return\r\n                cardsIds.push(c._id)\r\n                return c;\r\n            })\r\n            if (!newCards || !Object.keys(newCards).length) {\r\n                const failCard = boardService.getEmptyCard()\r\n                failCard.title = 'No search results.'\r\n                setDraggedCards([failCard])\r\n            } else setDraggedCards(newCards)\r\n        } else setDraggedCards(currBoard.cards)\r\n    }\r\n\r\n    const addActivity = (member, type, desc, card = 'board') => {\r\n        const newActivity = { _id: utilService.makeId(), member, type, desc, card, createdAt: Date.now() }\r\n        currBoard.activity.unshift(newActivity)\r\n        socketService.emit('board to-add-activity', newActivity)\r\n        dispatch(saveBoard(currBoard))\r\n    }\r\n\r\n    const deleteBoard = async (boardId) => {\r\n        const res = await dispatch(removeBoard(boardId || currBoard._id))\r\n        if (!res) return\r\n        else history.push('/boards')\r\n    }\r\n\r\n    if (!currBoard || !draggedCards || !draggedCards.length || !members) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const cardPreviewOp = {\r\n        openCardModal,\r\n        closeModal,\r\n        addActivity,\r\n        setCurrCard,\r\n        setCurrTask,\r\n        isDescShown,\r\n        setIsDescShown,\r\n    }\r\n\r\n    const boardMenuOp = {\r\n        setIsMenu,\r\n        isMenu,\r\n        changeBackground,\r\n        members: currBoard.members,\r\n        filterTasks,\r\n        addActivity,\r\n        deleteBoard\r\n    }\r\n\r\n    const taskModalOp = {\r\n        setCurrTask,\r\n        currTask,\r\n        addLabel,\r\n        addMember,\r\n        addChecklist,\r\n        addDueDate,\r\n        addCover,\r\n        currBoard: currBoard\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-details sub-container\">\r\n            <div className=\"board-header flex\">\r\n                <div className=\"flex \">\r\n                    <form onBlur={handleSubmit(setBoardTitle)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" {...register(\"boardTitle\")} defaultValue={currBoard.title} autoComplete=\"off\" />\r\n                    </form>\r\n                    <div className=\"flex\">\r\n                        <div className=\"avatars\">\r\n                            {members.map((member, idx) => <Avatar key={idx} name={member.name} size=\"30\" round={true} />)}\r\n                        </div>\r\n                        <button onClick={() => {\r\n                            setIsInvite(!isInvite)\r\n                            preMembers()\r\n                        }}>Invite</button>\r\n                        {isInvite && <div ref={inviteRef} className=\"invite-members-modal\">\r\n                            <form onChange={handleSubmit(serachUser)} >\r\n                                <div className=\"invite-title\">\r\n                                    <div className=\"close-btn\">\r\n                                        <p>Invite member to board</p>\r\n                                        <button onClick={() => setIsInvite(!isInvite)}>x</button>\r\n                                    </div>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Search users\" id=\"member\" name=\"member\"  {...register(\"member\")} />\r\n                                </div>\r\n                            </form>\r\n                            {!addMembersToBoard.length ? null : <div className=\"exist-members\">\r\n                                <ul>\r\n                                    <p>Suggested Members:</p>\r\n                                    {addMembersToBoard.map((member, idx) => {\r\n                                        return <li key={member._id}>\r\n                                            <button onClick={() => onAddMember(member)} className=\"suggested-user\">\r\n                                                <Avatar key={idx} name={member.name} size=\"30\" round={true} />\r\n                                                <p>{member.name}</p>\r\n                                                <p><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon></p>\r\n                                            </button>\r\n                                        </li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>}\r\n                            {!members.length ? null : <div className=\"exist-members\">\r\n                                <p>In This Board:</p>\r\n                                {members.map((user, idx) => {\r\n                                    return <button key={user._id} onClick={() => removeUserFromBoard(user._id)} className=\"suggested-user\">\r\n                                        <Avatar key={idx} name={user.name} size=\"30\" round={true} />\r\n                                        <p>{user.name}</p>\r\n                                        <p><FontAwesomeIcon icon={faCheckCircle} /></p>\r\n                                    </button>\r\n                                })}\r\n                            </div>}\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div ref={menuRef} className=\"flex\">\r\n                    <p className=\"open-menu-btn\" onClick={() => setIsMenu(true)}><FontAwesomeIcon className=\"fa\" icon={faBars}></FontAwesomeIcon></p>\r\n                    <BoardMenu boardMenuOp={boardMenuOp}></BoardMenu>\r\n                </div>\r\n            </div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd} >\r\n                <Droppable direction=\"horizontal\" droppableId=\"cards\" type=\"CARD\">\r\n                    {(provided) => (\r\n                        <div className=\"cards-container flex\" ref={provided.innerRef}>\r\n                            {isScrollOnDradAllowed ? < div {...provided.droppableProps}  {...events} ref={containerRef} className=\"cards-container flex\">\r\n                                <div className=\"flex\">\r\n                                    {draggedCards.map((card, idx) => {\r\n                                        return <div className=\"test\" key={card._id}><Draggable key={card._id} draggableId={card._id} index={idx}>\r\n                                            {(previewProvider) =>\r\n                                            (<div key={card._id} onMouseDownCapture={() => setIsScrollOnDradAllowed(false)} {...previewProvider.draggableProps} {...previewProvider.dragHandleProps} ref={previewProvider.innerRef}>\r\n                                                <CardPreview key={card._id} cardPreviewOp={cardPreviewOp} card={card}></CardPreview>\r\n                                            </div>)}\r\n                                        </Draggable></div>\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                    {!isAddCard && <button className=\"add-card-btn\" onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faPlus}></FontAwesomeIcon><p>Add another card</p></button>}\r\n                                    {isAddCard && <div className=\"add-card\"> <form className=\"add-card-container\" onSubmit={handleSubmit(addNewCard)}>\r\n                                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Card name\" id=\"title\" name=\"title\" {...register(\"newCardTitle\")} />\r\n                                        <div className=\"flex\">\r\n                                            <button>Add Card</button>\r\n                                            <p onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faTimes}></FontAwesomeIcon></p>\r\n                                        </div>\r\n                                    </form></div>}\r\n                                </div>\r\n                            </div> :\r\n                                < div {...provided.droppableProps} className=\"cards-container flex\">\r\n                                    <div className=\"flex\">\r\n                                        {draggedCards.map((card, idx) => {\r\n                                            return <div className=\"test\" key={card._id}><Draggable key={card._id} draggableId={card._id} index={idx}>\r\n                                                {(previewProvider) =>\r\n                                                (<div key={card._id} onMouseOut={() => { console.log('out'); return setIsScrollOnDradAllowed(true) }} {...previewProvider.draggableProps} {...previewProvider.dragHandleProps} ref={previewProvider.innerRef}>\r\n                                                    <CardPreview key={card._id} cardPreviewOp={cardPreviewOp} card={card}></CardPreview>\r\n                                                </div>)}\r\n                                            </Draggable></div>\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                        {!isAddCard && <button className=\"add-card-btn\" onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faPlus}></FontAwesomeIcon><p>Add another card</p></button>}\r\n                                        {isAddCard && <div className=\"add-card\"> <form className=\"add-card-container\" onSubmit={handleSubmit(addNewCard)}>\r\n                                            <input type=\"text\" autoComplete=\"off\" placeholder=\"Card name\" id=\"title\" name=\"title\" {...register(\"newCardTitle\")} />\r\n                                            <div className=\"flex\">\r\n                                                <button>Add Card</button>\r\n                                                <p onClick={() => setIsAddCard(!isAddCard)}><FontAwesomeIcon className=\"fa\" icon={faTimes}></FontAwesomeIcon></p>\r\n                                            </div>\r\n                                        </form></div>}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            {isCardModal && <div ref={cardModalRef} style={{ left: `${xPosEl}px`, top: `${yPosEl}px` }} className=\"card-modal\">\r\n                <div className=\"card-title-modal\">\r\n                    <p>{cardModal.title}</p>\r\n                    <button onClick={() => closeModal()}>x</button>\r\n                </div>\r\n                <div className=\"card-modal-btns\">\r\n                    <button onClick={() => deleteCard()}>Delete This Card</button>\r\n                </div>\r\n            </div>}\r\n            {currTask && <div ref={ref}><TaskModal taskModalOp={taskModalOp}></TaskModal></div>}\r\n        </div >\r\n    )\r\n}","import './LandingPage.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateBackground } from '../../store/actions/boardActions'\r\n\r\nexport function LandingPage() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(updateBackground(false))\r\n    })\r\n\r\n    return (\r\n        <section className=\"sub-container landing-page-container\">\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>T<span>a</span>skm<span>a</span>n</h3>\r\n                    <p>Taskman helps teams move work forward.\r\n                        Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique-accomplish it all with Taskman.</p>\r\n                </div>\r\n                <article>\r\n                    <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9667092/media/09648e273e248e7cfd22ade4010b2a6e.gif\" alt=\"\" />\r\n                </article>\r\n            </div>\r\n            <div className=\"landing-page-section landing-page-section-right\">\r\n                <article>\r\n                    <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/9073688/media/bb69af3d8f2404f4cfcc7cecdc558be6.gif\" alt=\"\" />\r\n                </article>\r\n                <div>\r\n                    <h3>Keep Track Of Your Team</h3>\r\n                    <p>Taskman has statistics panel to see your team progress.\r\n                        Keep track of your team's assignment and completion of tasks easily!</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-page-section\">\r\n                <div>\r\n                    <h3>Live Updates & Push Notifications</h3>\r\n                    <p>Always be up-to-date with recent activities in your project.\r\n                        our unique system of real-time push notifications will make sure\r\n                        you always know all about the recent developments.</p>\r\n                </div>\r\n                <article>\r\n                    <img src=\"https://cdn.dribbble.com/users/2851002/screenshots/7736965/media/e08e0676dd54ae8715c2d72bbdd51eb2.gif\" alt=\"\" />\r\n                </article>\r\n            </div>\r\n            <div className=\"flex try-btn\">\r\n                <Link to=\"/boards\" className=\"link\">Try Taskman!</Link>\r\n            </div>\r\n            <div className=\"landing-page-header\">\r\n                <Link to=\"/boards\" className=\"link\">T<span>a</span>skm<span>a</span>n</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\nimport './BoardPreview.scss'\r\nimport Color from 'color-thief-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrBoard } from '../../store/actions/boardActions';\r\n\r\nexport function BoardPreview({ board }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const LinkPrev = () => (<Link className=\"link\" style={{ color: 'black' }} to={`/board/${board._id}`}>\r\n        <h4>{board.title}</h4>\r\n    </Link>)\r\n\r\n    return (\r\n        <div className=\"board-link links\" key={board._id} onClick={() => dispatch(setCurrBoard(board._id))} style={board.background ? board.background.img ? { backgroundImage: `url(${board.background.img})` } : { backgroundColor: board.background.color } : { backgroundColor: 'white' }}>\r\n            {board.background ? board.background.img ? <Link className=\"link\" to={`/board/${board._id}`}>\r\n                <Color src={board.background.img} crossOrigin=\"anonymous\" format=\"hex\">\r\n                    {({ data, loading }) => {\r\n                        if (loading) return <div className=\"preview-loader\">...</div>;\r\n                        return <h4 style={{ color: data }}>{board.title}</h4>\r\n                    }}\r\n                </Color>\r\n            </Link> : <LinkPrev /> : <LinkPrev />}\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { BoardPreview } from '../BoardPreview'\r\nimport './BoardList.scss'\r\n\r\nexport function BoardList({ boardListOp }) {\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [isCreateBoard, setIsCreateBoard] = useState(null)\r\n\r\n    const onAddBoard = data => {\r\n        boardListOp.addBoard(data.newBoardTitle)\r\n        setIsCreateBoard(!isCreateBoard)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <ul className=\"board-container\">\r\n            {boardListOp.boards.map(board => <li key={board._id}><BoardPreview key={board._id} board={board} /></li>)}\r\n            <li className=\"board-link add-board\">\r\n                {!isCreateBoard && <button onClick={() => setIsCreateBoard(!isCreateBoard)}>Create board</button>}\r\n                {isCreateBoard &&\r\n                    <form onSubmit={handleSubmit(onAddBoard)}>\r\n                        <input type=\"text\" id=\"title\" name=\"title\" autoComplete=\"off\" {...register(\"newBoardTitle\")} placeholder=\"Board name\" />\r\n                        <button>Create board</button>\r\n                    </form>}\r\n            </li>\r\n        </ul>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadBoards, saveBoard, setCurrBoard, updateBackground } from '../../store/actions/boardActions.js'\r\nimport { BoardList } from '../../cmps/BoardList'\r\nimport './TaskmanApp.scss'\r\nimport boardService from '../../services/boardService.js'\r\nimport loader from '../../assets/imgs/taskman-loader.svg'\r\nimport { socketService } from '../../services/socketService.js'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport function TaskmanApp() {\r\n    const dispatch = useDispatch()\r\n    const boards = useSelector(state => state.boardReducer.boards)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        socketService.setup();\r\n        dispatch(setCurrBoard(null))\r\n        dispatch(loadBoards())\r\n        dispatch(updateBackground(true))\r\n    }, [])\r\n\r\n    const addBoard = async (title) => {\r\n        const newBoard = boardService.getEmptyBoard()\r\n        newBoard.title = title\r\n        const res = await dispatch(saveBoard(newBoard))\r\n        console.log('res:', res)\r\n        boards.push(newBoard)\r\n        // history('/')\r\n    }\r\n\r\n    if (!boards || !boards.length) return (<div className=\"loader-container\"><img src={loader} alt=\"\" /></div>)\r\n\r\n    const boardListOp = {\r\n        boards,\r\n        addBoard\r\n    }\r\n\r\n    return (\r\n        <div className=\"sub-container taskman-container\">\r\n            <h2>Your Workspace boards</h2>\r\n            <BoardList boardListOp={boardListOp}></BoardList>\r\n        </div >\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { WidgetLoader } from 'react-cloudinary-upload-widget';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { BoardDetails } from './pages/BoardDetails';\r\nimport { LandingPage } from './pages/LandingPage';\r\nimport { TaskmanApp } from './pages/TaskmanApp';\r\nimport userService from './services/userService';\r\nimport { loadBoards } from './store/actions/boardActions';\r\nimport { loadUsers, login } from './store/actions/userActions';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const currBoard = useSelector(state => state.boardReducer.currBoard)\r\n  const background = useSelector(state => state.boardReducer.background)\r\n  const loggedinUser = userService.storage.loadUserFromStorage()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUsers())\r\n    dispatch(loadBoards())\r\n  }, [currBoard])\r\n\r\n  useEffect(() => {\r\n    if (loggedinUser && history) {\r\n      dispatch(login(loggedinUser))\r\n      history.push('/boards')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App container\" style={!background ? currBoard ? currBoard.background.color ? { backgroundColor: currBoard.background.color } : { backgroundImage: currBoard.background.img ? `url(${currBoard.background.img})` : '' } : { backgroundColor: 'white' } : { backgroundColor: 'white' }}>\r\n        <AppHeader />\r\n        <WidgetLoader />\r\n        <Switch>\r\n          <Route component={BoardDetails} path='/board/:id?' />\r\n          <Route component={TaskmanApp} path='/boards' />\r\n          <Route component={LandingPage} path='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INITIAL_STATE = {\r\n  boards: [],\r\n  currBoard: null,\r\n  background: false,\r\n  setBackground: null,\r\n  filterBy: null,\r\n}\r\n\r\nexport function boardReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return {\r\n        ...state,\r\n        boards: action.boards\r\n      }\r\n    case 'SET_BOARD':\r\n      return {\r\n        ...state,\r\n        currBoard: action.board\r\n      }\r\n    case 'ADD_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: [...state.boards, action.board]\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      return {\r\n        ...state,\r\n        boards: state.boards.filter(board => board._id !== action.boardId)\r\n      }\r\n    case 'UPDATE_BOARD':\r\n      const { updatedBoard } = action\r\n      return {\r\n        ...state,\r\n        boards: state.boards.map(board => board._id === updatedBoard._id ? updatedBoard : board)\r\n      }\r\n    case 'UPDATE_BACKGROUND':\r\n      return {\r\n        ...state,\r\n        background: action.background\r\n      }\r\n    case 'UPDATE_FILTERBY':\r\n      return {\r\n        ...state,\r\n        filterBy: action.filterBy\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","const INITIAL_STATE = {\r\n  users: [],\r\n  user: null\r\n}\r\n\r\nexport function userReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case 'LOAD_USER':\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n    case 'UPDATE_USER':\r\n      const { updatedUser } = action\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => user._id === updatedUser._id ? updatedUser : user)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  boardReducer,\r\n  userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}